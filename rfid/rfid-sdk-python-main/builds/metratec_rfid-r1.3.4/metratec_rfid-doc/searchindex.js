Search.setIndex({"alltitles": {"0.3.0": [[18, "id14"]], "0.3.1": [[18, "id13"]], "0.3.2": [[18, "id12"]], "1.0.0": [[18, "id11"]], "1.1.0": [[18, "id10"]], "1.1.1": [[18, "id9"]], "1.1.2": [[18, "id8"]], "1.1.3": [[18, "id7"]], "1.2.0": [[18, "id6"]], "1.3.0": [[18, "id5"]], "1.3.1": [[18, "id4"]], "1.3.2": [[18, "id3"]], "1.3.3": [[18, "id2"]], "1.3.4": [[18, "id1"]], "API": [[0, null]], "API Reference": [[20, "api-reference"]], "Action Table": [[10, "id1"], [11, "id1"], [12, "id1"], [13, "id1"], [15, "id1"]], "Additional Information": [[20, "additional-information"]], "Automatic Reader Detection": [[17, "automatic-reader-detection"]], "Complete Example (UHF Reader)": [[24, "complete-example-uhf-reader"]], "Connection": [[1, null]], "Continuous Inventory": [[24, "continuous-inventory"]], "Create virtual environment": [[21, "create-virtual-environment"]], "DeskID ISO Desktop Reader": [[2, null]], "DeskID NFC Desktop Reader": [[3, null]], "DeskID UHF Desktop Reader": [[9, null]], "DeskID UHF v2 Desktop Reader": [[10, null]], "DwarfG2 v2 UHF RFID OEM Module": [[11, null]], "ETSI version": [[10, "etsi-version"], [15, "etsi-version"]], "Error Handling": [[24, "error-handling"]], "Event Handling": [[24, "event-handling"]], "FCC version": [[10, "fcc-version"], [15, "fcc-version"]], "Foreword": [[19, null]], "HF Reader": [[4, null], [24, "hf-reader"]], "HF Tag Info": [[8, "hf-tag-info"]], "HF Transponder": [[8, "hf-transponder"]], "ISO14443-A Tag": [[8, "iso14443-a-tag"]], "ISO15693 Tag": [[8, "iso15693-tag"]], "Index": [[20, "index"]], "Input Events": [[24, "input-events"]], "Install RFID SDK": [[21, "install-rfid-sdk"]], "Installation": [[21, null]], "Inventory Events": [[24, "inventory-events"]], "License": [[22, null]], "Linux / Mac": [[21, "linux-mac"]], "Mini version": [[11, "mini-version"]], "Minimal inventory example": [[23, "minimal-inventory-example"]], "PLRM UHF RFID Reader": [[12, null]], "PulsarLR UHF RFID Reader": [[13, null]], "PulsarMX UHF RFID Reader": [[14, null]], "QR-NFC Embedded OEM Module": [[5, null]], "QRG2 UHF RFID Embedded Module": [[15, null]], "QuasarLR HF RFID Reader": [[6, null]], "QuasarMX HF RFID Reader": [[7, null]], "Quickstart": [[23, null]], "Read/Write Tag Data": [[24, "read-write-tag-data"]], "Reader Settings": [[24, "reader-settings"]], "Release Notes": [[18, null]], "Requirements": [[21, "requirements"]], "Serial Connection": [[1, "serial-connection"]], "Socket Connection": [[1, "socket-connection"]], "Standard version": [[11, "standard-version"]], "Status Events": [[24, "status-events"]], "Transponder": [[8, null]], "Transponder/Tag Classes": [[24, "transponder-tag-classes"]], "Tutorials": [[24, null]], "UHF Reader": [[16, null], [24, "uhf-reader"]], "UHF Transponder": [[8, "uhf-transponder"]], "User Guide": [[20, "user-guide"]], "Using automatic reader detection": [[23, "using-automatic-reader-detection"]], "Utilities": [[17, null]], "Welcome to the Metratec RFID SDK": [[20, null]], "Windows": [[21, "windows"]], "XR version": [[11, "xr-version"]]}, "docnames": ["api/api", "api/connection", "api/hf_reader/deskid_iso", "api/hf_reader/deskid_nfc", "api/hf_reader/hf_reader", "api/hf_reader/qr_nfc", "api/hf_reader/quasar_lr", "api/hf_reader/quasar_mx", "api/transponder", "api/uhf_reader/deskid", "api/uhf_reader/deskidv2", "api/uhf_reader/dwarfg2v2", "api/uhf_reader/plrm", "api/uhf_reader/pulsar_lr", "api/uhf_reader/pulsar_mx", "api/uhf_reader/qrg2", "api/uhf_reader/uhf_reader", "api/utils", "changelog", "foreword", "index", "installation", "license", "quickstart", "tutorials"], "envversion": {"sphinx": 64, "sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2}, "filenames": ["api/api.rst", "api/connection.rst", "api/hf_reader/deskid_iso.rst", "api/hf_reader/deskid_nfc.rst", "api/hf_reader/hf_reader.rst", "api/hf_reader/qr_nfc.rst", "api/hf_reader/quasar_lr.rst", "api/hf_reader/quasar_mx.rst", "api/transponder.rst", "api/uhf_reader/deskid.rst", "api/uhf_reader/deskidv2.rst", "api/uhf_reader/dwarfg2v2.rst", "api/uhf_reader/plrm.rst", "api/uhf_reader/pulsar_lr.rst", "api/uhf_reader/pulsar_mx.rst", "api/uhf_reader/qrg2.rst", "api/uhf_reader/uhf_reader.rst", "api/utils.rst", "changelog.rst", "foreword.rst", "index.rst", "installation.rst", "license.rst", "quickstart.rst", "tutorials.rst"], "indexentries": {"__init__() (metratec_rfid.connection.serial_connection.serialconnection method)": [[1, "metratec_rfid.connection.serial_connection.SerialConnection.__init__", false]], "__init__() (metratec_rfid.connection.socket_connection.socketconnection method)": [[1, "metratec_rfid.connection.socket_connection.SocketConnection.__init__", false]], "__init__() (metratec_rfid.deskidiso method)": [[2, "metratec_rfid.DeskIdIso.__init__", false]], "__init__() (metratec_rfid.deskidnfc method)": [[3, "metratec_rfid.DeskIdNfc.__init__", false]], "__init__() (metratec_rfid.deskiduhf method)": [[9, "metratec_rfid.DeskIdUhf.__init__", false]], "__init__() (metratec_rfid.deskiduhfv2 method)": [[10, "metratec_rfid.DeskIdUhfv2.__init__", false]], "__init__() (metratec_rfid.deskiduhfv2fcc method)": [[10, "metratec_rfid.DeskIdUhfv2FCC.__init__", false]], "__init__() (metratec_rfid.dwarfg2v2 method)": [[11, "metratec_rfid.DwarfG2v2.__init__", false]], "__init__() (metratec_rfid.plrm method)": [[12, "metratec_rfid.Plrm.__init__", false]], "__init__() (metratec_rfid.pulsarlr method)": [[13, "metratec_rfid.PulsarLR.__init__", false]], "__init__() (metratec_rfid.pulsarmx method)": [[14, "metratec_rfid.PulsarMX.__init__", false]], "__init__() (metratec_rfid.qrg2 method)": [[15, "metratec_rfid.QRG2.__init__", false]], "__init__() (metratec_rfid.qrg2fcc method)": [[15, "metratec_rfid.QRG2FCC.__init__", false]], "__init__() (metratec_rfid.qrnfc method)": [[5, "metratec_rfid.QrNfc.__init__", false]], "__init__() (metratec_rfid.quasarlr method)": [[6, "metratec_rfid.QuasarLR.__init__", false]], "__init__() (metratec_rfid.quasarmx method)": [[7, "metratec_rfid.QuasarMX.__init__", false]], "activate_protected_mode() (metratec_rfid.deskiduhfv2 method)": [[10, "metratec_rfid.DeskIdUhfv2.activate_protected_mode", false]], "activate_protected_mode() (metratec_rfid.dwarfg2v2 method)": [[11, "metratec_rfid.DwarfG2v2.activate_protected_mode", false]], "activate_protected_mode() (metratec_rfid.plrm method)": [[12, "metratec_rfid.Plrm.activate_protected_mode", false]], "activate_protected_mode() (metratec_rfid.pulsarlr method)": [[13, "metratec_rfid.PulsarLR.activate_protected_mode", false]], "activate_protected_mode() (metratec_rfid.qrg2 method)": [[15, "metratec_rfid.QRG2.activate_protected_mode", false]], "activate_short_range_mode() (metratec_rfid.deskiduhfv2 method)": [[10, "metratec_rfid.DeskIdUhfv2.activate_short_range_mode", false]], "activate_short_range_mode() (metratec_rfid.dwarfg2v2 method)": [[11, "metratec_rfid.DwarfG2v2.activate_short_range_mode", false]], "activate_short_range_mode() (metratec_rfid.plrm method)": [[12, "metratec_rfid.Plrm.activate_short_range_mode", false]], "activate_short_range_mode() (metratec_rfid.pulsarlr method)": [[13, "metratec_rfid.PulsarLR.activate_short_range_mode", false]], "activate_short_range_mode() (metratec_rfid.qrg2 method)": [[15, "metratec_rfid.QRG2.activate_short_range_mode", false]], "authenticate_mifare_classic_block() (metratec_rfid.deskidnfc method)": [[3, "metratec_rfid.DeskIdNfc.authenticate_mifare_classic_block", false]], "authenticate_mifare_classic_block() (metratec_rfid.qrnfc method)": [[5, "metratec_rfid.QrNfc.authenticate_mifare_classic_block", false]], "authenticate_ntag() (metratec_rfid.deskidnfc method)": [[3, "metratec_rfid.DeskIdNfc.authenticate_ntag", false]], "authenticate_ntag() (metratec_rfid.qrnfc method)": [[5, "metratec_rfid.QrNfc.authenticate_ntag", false]], "call_impinj_authentication_service() (metratec_rfid.deskiduhfv2 method)": [[10, "metratec_rfid.DeskIdUhfv2.call_impinj_authentication_service", false]], "call_impinj_authentication_service() (metratec_rfid.dwarfg2v2 method)": [[11, "metratec_rfid.DwarfG2v2.call_impinj_authentication_service", false]], "call_impinj_authentication_service() (metratec_rfid.plrm method)": [[12, "metratec_rfid.Plrm.call_impinj_authentication_service", false]], "call_impinj_authentication_service() (metratec_rfid.pulsarlr method)": [[13, "metratec_rfid.PulsarLR.call_impinj_authentication_service", false]], "call_impinj_authentication_service() (metratec_rfid.qrg2 method)": [[15, "metratec_rfid.QRG2.call_impinj_authentication_service", false]], "check_antennas() (metratec_rfid.plrm method)": [[12, "metratec_rfid.Plrm.check_antennas", false]], "check_antennas() (metratec_rfid.pulsarlr method)": [[13, "metratec_rfid.PulsarLR.check_antennas", false]], "check_ndef_state() (metratec_rfid.deskidnfc method)": [[3, "metratec_rfid.DeskIdNfc.check_ndef_state", false]], "check_ndef_state() (metratec_rfid.qrnfc method)": [[5, "metratec_rfid.QrNfc.check_ndef_state", false]], "config_rf_interface() (metratec_rfid.deskidnfc method)": [[3, "metratec_rfid.DeskIdNfc.config_rf_interface", false]], "config_rf_interface() (metratec_rfid.qrnfc method)": [[5, "metratec_rfid.QrNfc.config_rf_interface", false]], "connect() (metratec_rfid.deskidiso method)": [[2, "metratec_rfid.DeskIdIso.connect", false]], "connect() (metratec_rfid.deskidnfc method)": [[3, "metratec_rfid.DeskIdNfc.connect", false]], "connect() (metratec_rfid.deskiduhf method)": [[9, "metratec_rfid.DeskIdUhf.connect", false]], "connect() (metratec_rfid.deskiduhfv2 method)": [[10, "metratec_rfid.DeskIdUhfv2.connect", false]], "connect() (metratec_rfid.dwarfg2v2 method)": [[11, "metratec_rfid.DwarfG2v2.connect", false]], "connect() (metratec_rfid.plrm method)": [[12, "metratec_rfid.Plrm.connect", false]], "connect() (metratec_rfid.pulsarlr method)": [[13, "metratec_rfid.PulsarLR.connect", false]], "connect() (metratec_rfid.pulsarmx method)": [[14, "metratec_rfid.PulsarMX.connect", false]], "connect() (metratec_rfid.qrg2 method)": [[15, "metratec_rfid.QRG2.connect", false]], "connect() (metratec_rfid.qrnfc method)": [[5, "metratec_rfid.QrNfc.connect", false]], "connect() (metratec_rfid.quasarlr method)": [[6, "metratec_rfid.QuasarLR.connect", false]], "connect() (metratec_rfid.quasarmx method)": [[7, "metratec_rfid.QuasarMX.connect", false]], "deactivate_protected_mode() (metratec_rfid.deskiduhfv2 method)": [[10, "metratec_rfid.DeskIdUhfv2.deactivate_protected_mode", false]], "deactivate_protected_mode() (metratec_rfid.dwarfg2v2 method)": [[11, "metratec_rfid.DwarfG2v2.deactivate_protected_mode", false]], "deactivate_protected_mode() (metratec_rfid.plrm method)": [[12, "metratec_rfid.Plrm.deactivate_protected_mode", false]], "deactivate_protected_mode() (metratec_rfid.pulsarlr method)": [[13, "metratec_rfid.PulsarLR.deactivate_protected_mode", false]], "deactivate_protected_mode() (metratec_rfid.qrg2 method)": [[15, "metratec_rfid.QRG2.deactivate_protected_mode", false]], "deactivate_short_range_mode() (metratec_rfid.deskiduhfv2 method)": [[10, "metratec_rfid.DeskIdUhfv2.deactivate_short_range_mode", false]], "deactivate_short_range_mode() (metratec_rfid.dwarfg2v2 method)": [[11, "metratec_rfid.DwarfG2v2.deactivate_short_range_mode", false]], "deactivate_short_range_mode() (metratec_rfid.plrm method)": [[12, "metratec_rfid.Plrm.deactivate_short_range_mode", false]], "deactivate_short_range_mode() (metratec_rfid.pulsarlr method)": [[13, "metratec_rfid.PulsarLR.deactivate_short_range_mode", false]], "deactivate_short_range_mode() (metratec_rfid.qrg2 method)": [[15, "metratec_rfid.QRG2.deactivate_short_range_mode", false]], "decrement_mifare_classic_value() (metratec_rfid.deskidnfc method)": [[3, "metratec_rfid.DeskIdNfc.decrement_mifare_classic_value", false]], "decrement_mifare_classic_value() (metratec_rfid.qrnfc method)": [[5, "metratec_rfid.QrNfc.decrement_mifare_classic_value", false]], "deselect_transponder() (metratec_rfid.deskidnfc method)": [[3, "metratec_rfid.DeskIdNfc.deselect_transponder", false]], "deselect_transponder() (metratec_rfid.qrnfc method)": [[5, "metratec_rfid.QrNfc.deselect_transponder", false]], "deskidiso (class in metratec_rfid)": [[2, "metratec_rfid.DeskIdIso", false]], "deskidnfc (class in metratec_rfid)": [[3, "metratec_rfid.DeskIdNfc", false]], "deskiduhf (class in metratec_rfid)": [[9, "metratec_rfid.DeskIdUhf", false]], "deskiduhfv2 (class in metratec_rfid)": [[10, "metratec_rfid.DeskIdUhfv2", false]], "deskiduhfv2fcc (class in metratec_rfid)": [[10, "metratec_rfid.DeskIdUhfv2FCC", false]], "detect_readers() (in module metratec_rfid)": [[17, "metratec_rfid.detect_readers", false]], "detect_tag_types() (metratec_rfid.deskidnfc method)": [[3, "metratec_rfid.DeskIdNfc.detect_tag_types", false]], "detect_tag_types() (metratec_rfid.qrnfc method)": [[5, "metratec_rfid.QrNfc.detect_tag_types", false]], "disable_access_password() (metratec_rfid.deskiduhf method)": [[9, "metratec_rfid.DeskIdUhf.disable_access_password", false]], "disable_access_password() (metratec_rfid.pulsarmx method)": [[14, "metratec_rfid.PulsarMX.disable_access_password", false]], "disable_hid_mode() (metratec_rfid.deskidnfc method)": [[3, "metratec_rfid.DeskIdNfc.disable_hid_mode", false]], "disable_hid_mode() (metratec_rfid.qrnfc method)": [[5, "metratec_rfid.QrNfc.disable_hid_mode", false]], "disable_high_on_tag() (metratec_rfid.dwarfg2v2 method)": [[11, "metratec_rfid.DwarfG2v2.disable_high_on_tag", false]], "disable_high_on_tag() (metratec_rfid.pulsarlr method)": [[13, "metratec_rfid.PulsarLR.disable_high_on_tag", false]], "disable_rf_interface() (metratec_rfid.deskidiso method)": [[2, "metratec_rfid.DeskIdIso.disable_rf_interface", false]], "disable_rf_interface() (metratec_rfid.deskidnfc method)": [[3, "metratec_rfid.DeskIdNfc.disable_rf_interface", false]], "disable_rf_interface() (metratec_rfid.qrnfc method)": [[5, "metratec_rfid.QrNfc.disable_rf_interface", false]], "disable_rf_interface() (metratec_rfid.quasarlr method)": [[6, "metratec_rfid.QuasarLR.disable_rf_interface", false]], "disable_rf_interface() (metratec_rfid.quasarmx method)": [[7, "metratec_rfid.QuasarMX.disable_rf_interface", false]], "disable_rfid_field() (metratec_rfid.deskiduhf method)": [[9, "metratec_rfid.DeskIdUhf.disable_rfid_field", false]], "disable_rfid_field() (metratec_rfid.pulsarmx method)": [[14, "metratec_rfid.PulsarMX.disable_rfid_field", false]], "disable_start_up_sound() (metratec_rfid.deskidnfc method)": [[3, "metratec_rfid.DeskIdNfc.disable_start_up_sound", false]], "disable_start_up_sound() (metratec_rfid.deskiduhfv2 method)": [[10, "metratec_rfid.DeskIdUhfv2.disable_start_up_sound", false]], "disconnect() (metratec_rfid.deskidiso method)": [[2, "metratec_rfid.DeskIdIso.disconnect", false]], "disconnect() (metratec_rfid.deskidnfc method)": [[3, "metratec_rfid.DeskIdNfc.disconnect", false]], "disconnect() (metratec_rfid.deskiduhf method)": [[9, "metratec_rfid.DeskIdUhf.disconnect", false]], "disconnect() (metratec_rfid.deskiduhfv2 method)": [[10, "metratec_rfid.DeskIdUhfv2.disconnect", false]], "disconnect() (metratec_rfid.dwarfg2v2 method)": [[11, "metratec_rfid.DwarfG2v2.disconnect", false]], "disconnect() (metratec_rfid.plrm method)": [[12, "metratec_rfid.Plrm.disconnect", false]], "disconnect() (metratec_rfid.pulsarlr method)": [[13, "metratec_rfid.PulsarLR.disconnect", false]], "disconnect() (metratec_rfid.pulsarmx method)": [[14, "metratec_rfid.PulsarMX.disconnect", false]], "disconnect() (metratec_rfid.qrg2 method)": [[15, "metratec_rfid.QRG2.disconnect", false]], "disconnect() (metratec_rfid.qrnfc method)": [[5, "metratec_rfid.QrNfc.disconnect", false]], "disconnect() (metratec_rfid.quasarlr method)": [[6, "metratec_rfid.QuasarLR.disconnect", false]], "disconnect() (metratec_rfid.quasarmx method)": [[7, "metratec_rfid.QuasarMX.disconnect", false]], "dwarfg2miniv2 (class in metratec_rfid)": [[11, "metratec_rfid.DwarfG2Miniv2", false]], "dwarfg2v2 (class in metratec_rfid)": [[11, "metratec_rfid.DwarfG2v2", false]], "dwarfg2xrv2 (class in metratec_rfid)": [[11, "metratec_rfid.DwarfG2XRv2", false]], "enable_antenna_report() (metratec_rfid.pulsarmx method)": [[14, "metratec_rfid.PulsarMX.enable_antenna_report", false]], "enable_antenna_report() (metratec_rfid.quasarlr method)": [[6, "metratec_rfid.QuasarLR.enable_antenna_report", false]], "enable_antenna_report() (metratec_rfid.quasarmx method)": [[7, "metratec_rfid.QuasarMX.enable_antenna_report", false]], "enable_fire_empty_inventory() (metratec_rfid.deskidiso method)": [[2, "metratec_rfid.DeskIdIso.enable_fire_empty_inventory", false]], "enable_fire_empty_inventory() (metratec_rfid.deskidnfc method)": [[3, "metratec_rfid.DeskIdNfc.enable_fire_empty_inventory", false]], "enable_fire_empty_inventory() (metratec_rfid.deskiduhf method)": [[9, "metratec_rfid.DeskIdUhf.enable_fire_empty_inventory", false]], "enable_fire_empty_inventory() (metratec_rfid.deskiduhfv2 method)": [[10, "metratec_rfid.DeskIdUhfv2.enable_fire_empty_inventory", false]], "enable_fire_empty_inventory() (metratec_rfid.dwarfg2v2 method)": [[11, "metratec_rfid.DwarfG2v2.enable_fire_empty_inventory", false]], "enable_fire_empty_inventory() (metratec_rfid.plrm method)": [[12, "metratec_rfid.Plrm.enable_fire_empty_inventory", false]], "enable_fire_empty_inventory() (metratec_rfid.pulsarlr method)": [[13, "metratec_rfid.PulsarLR.enable_fire_empty_inventory", false]], "enable_fire_empty_inventory() (metratec_rfid.pulsarmx method)": [[14, "metratec_rfid.PulsarMX.enable_fire_empty_inventory", false]], "enable_fire_empty_inventory() (metratec_rfid.qrg2 method)": [[15, "metratec_rfid.QRG2.enable_fire_empty_inventory", false]], "enable_fire_empty_inventory() (metratec_rfid.qrnfc method)": [[5, "metratec_rfid.QrNfc.enable_fire_empty_inventory", false]], "enable_fire_empty_inventory() (metratec_rfid.quasarlr method)": [[6, "metratec_rfid.QuasarLR.enable_fire_empty_inventory", false]], "enable_fire_empty_inventory() (metratec_rfid.quasarmx method)": [[7, "metratec_rfid.QuasarMX.enable_fire_empty_inventory", false]], "enable_fire_empty_reports() (metratec_rfid.deskiduhfv2 method)": [[10, "metratec_rfid.DeskIdUhfv2.enable_fire_empty_reports", false]], "enable_fire_empty_reports() (metratec_rfid.dwarfg2v2 method)": [[11, "metratec_rfid.DwarfG2v2.enable_fire_empty_reports", false]], "enable_fire_empty_reports() (metratec_rfid.plrm method)": [[12, "metratec_rfid.Plrm.enable_fire_empty_reports", false]], "enable_fire_empty_reports() (metratec_rfid.pulsarlr method)": [[13, "metratec_rfid.PulsarLR.enable_fire_empty_reports", false]], "enable_fire_empty_reports() (metratec_rfid.qrg2 method)": [[15, "metratec_rfid.QRG2.enable_fire_empty_reports", false]], "enable_input_events() (metratec_rfid.deskidiso method)": [[2, "metratec_rfid.DeskIdIso.enable_input_events", false]], "enable_input_events() (metratec_rfid.deskiduhf method)": [[9, "metratec_rfid.DeskIdUhf.enable_input_events", false]], "enable_input_events() (metratec_rfid.plrm method)": [[12, "metratec_rfid.Plrm.enable_input_events", false]], "enable_input_events() (metratec_rfid.pulsarlr method)": [[13, "metratec_rfid.PulsarLR.enable_input_events", false]], "enable_input_events() (metratec_rfid.pulsarmx method)": [[14, "metratec_rfid.PulsarMX.enable_input_events", false]], "enable_input_events() (metratec_rfid.quasarlr method)": [[6, "metratec_rfid.QuasarLR.enable_input_events", false]], "enable_input_events() (metratec_rfid.quasarmx method)": [[7, "metratec_rfid.QuasarMX.enable_input_events", false]], "enable_rf_interface() (metratec_rfid.deskidiso method)": [[2, "metratec_rfid.DeskIdIso.enable_rf_interface", false]], "enable_rf_interface() (metratec_rfid.deskidnfc method)": [[3, "metratec_rfid.DeskIdNfc.enable_rf_interface", false]], "enable_rf_interface() (metratec_rfid.qrnfc method)": [[5, "metratec_rfid.QrNfc.enable_rf_interface", false]], "enable_rf_interface() (metratec_rfid.quasarlr method)": [[6, "metratec_rfid.QuasarLR.enable_rf_interface", false]], "enable_rf_interface() (metratec_rfid.quasarmx method)": [[7, "metratec_rfid.QuasarMX.enable_rf_interface", false]], "enable_start_up_sound() (metratec_rfid.deskidnfc method)": [[3, "metratec_rfid.DeskIdNfc.enable_start_up_sound", false]], "enable_start_up_sound() (metratec_rfid.deskiduhfv2 method)": [[10, "metratec_rfid.DeskIdUhfv2.enable_start_up_sound", false]], "fetch_inventory() (metratec_rfid.deskidiso method)": [[2, "metratec_rfid.DeskIdIso.fetch_inventory", false]], "fetch_inventory() (metratec_rfid.deskidnfc method)": [[3, "metratec_rfid.DeskIdNfc.fetch_inventory", false]], "fetch_inventory() (metratec_rfid.deskiduhf method)": [[9, "metratec_rfid.DeskIdUhf.fetch_inventory", false]], "fetch_inventory() (metratec_rfid.deskiduhfv2 method)": [[10, "metratec_rfid.DeskIdUhfv2.fetch_inventory", false]], "fetch_inventory() (metratec_rfid.dwarfg2v2 method)": [[11, "metratec_rfid.DwarfG2v2.fetch_inventory", false]], "fetch_inventory() (metratec_rfid.plrm method)": [[12, "metratec_rfid.Plrm.fetch_inventory", false]], "fetch_inventory() (metratec_rfid.pulsarlr method)": [[13, "metratec_rfid.PulsarLR.fetch_inventory", false]], "fetch_inventory() (metratec_rfid.pulsarmx method)": [[14, "metratec_rfid.PulsarMX.fetch_inventory", false]], "fetch_inventory() (metratec_rfid.qrg2 method)": [[15, "metratec_rfid.QRG2.fetch_inventory", false]], "fetch_inventory() (metratec_rfid.qrnfc method)": [[5, "metratec_rfid.QrNfc.fetch_inventory", false]], "fetch_inventory() (metratec_rfid.quasarlr method)": [[6, "metratec_rfid.QuasarLR.fetch_inventory", false]], "fetch_inventory() (metratec_rfid.quasarmx method)": [[7, "metratec_rfid.QuasarMX.fetch_inventory", false]], "format_ndef_tag() (metratec_rfid.deskidnfc method)": [[3, "metratec_rfid.DeskIdNfc.format_ndef_tag", false]], "format_ndef_tag() (metratec_rfid.qrnfc method)": [[5, "metratec_rfid.QrNfc.format_ndef_tag", false]], "get_afi() (metratec_rfid.deskidnfc method)": [[3, "metratec_rfid.DeskIdNfc.get_afi", false]], "get_afi() (metratec_rfid.hftaginfo method)": [[8, "metratec_rfid.HfTagInfo.get_afi", false]], "get_afi() (metratec_rfid.qrnfc method)": [[5, "metratec_rfid.QrNfc.get_afi", false]], "get_antenna() (metratec_rfid.hftag method)": [[8, "metratec_rfid.HfTag.get_antenna", false]], "get_antenna() (metratec_rfid.plrm method)": [[12, "metratec_rfid.Plrm.get_antenna", false]], "get_antenna() (metratec_rfid.pulsarlr method)": [[13, "metratec_rfid.PulsarLR.get_antenna", false]], "get_antenna() (metratec_rfid.pulsarmx method)": [[14, "metratec_rfid.PulsarMX.get_antenna", false]], "get_antenna() (metratec_rfid.quasarlr method)": [[6, "metratec_rfid.QuasarLR.get_antenna", false]], "get_antenna() (metratec_rfid.quasarmx method)": [[7, "metratec_rfid.QuasarMX.get_antenna", false]], "get_antenna() (metratec_rfid.uhftag method)": [[8, "metratec_rfid.UhfTag.get_antenna", false]], "get_antenna_multiplex() (metratec_rfid.plrm method)": [[12, "metratec_rfid.Plrm.get_antenna_multiplex", false]], "get_antenna_multiplex() (metratec_rfid.pulsarlr method)": [[13, "metratec_rfid.PulsarLR.get_antenna_multiplex", false]], "get_antenna_multiplex() (metratec_rfid.pulsarmx method)": [[14, "metratec_rfid.PulsarMX.get_antenna_multiplex", false]], "get_antenna_multiplex() (metratec_rfid.quasarlr method)": [[6, "metratec_rfid.QuasarLR.get_antenna_multiplex", false]], "get_antenna_multiplex() (metratec_rfid.quasarmx method)": [[7, "metratec_rfid.QuasarMX.get_antenna_multiplex", false]], "get_antenna_power() (metratec_rfid.dwarfg2v2 method)": [[11, "metratec_rfid.DwarfG2v2.get_antenna_power", false]], "get_antenna_power() (metratec_rfid.plrm method)": [[12, "metratec_rfid.Plrm.get_antenna_power", false]], "get_antenna_power() (metratec_rfid.pulsarlr method)": [[13, "metratec_rfid.PulsarLR.get_antenna_power", false]], "get_antenna_powers() (metratec_rfid.dwarfg2v2 method)": [[11, "metratec_rfid.DwarfG2v2.get_antenna_powers", false]], "get_antenna_powers() (metratec_rfid.plrm method)": [[12, "metratec_rfid.Plrm.get_antenna_powers", false]], "get_antenna_powers() (metratec_rfid.pulsarlr method)": [[13, "metratec_rfid.PulsarLR.get_antenna_powers", false]], "get_atqa() (metratec_rfid.iso14atag method)": [[8, "metratec_rfid.ISO14ATag.get_atqa", false]], "get_channel_mask() (metratec_rfid.deskiduhfv2 method)": [[10, "metratec_rfid.DeskIdUhfv2.get_channel_mask", false]], "get_channel_mask() (metratec_rfid.dwarfg2v2 method)": [[11, "metratec_rfid.DwarfG2v2.get_channel_mask", false]], "get_channel_mask() (metratec_rfid.plrm method)": [[12, "metratec_rfid.Plrm.get_channel_mask", false]], "get_channel_mask() (metratec_rfid.pulsarlr method)": [[13, "metratec_rfid.PulsarLR.get_channel_mask", false]], "get_channel_mask() (metratec_rfid.qrg2 method)": [[15, "metratec_rfid.QRG2.get_channel_mask", false]], "get_custom_impinj_settings() (metratec_rfid.deskiduhfv2 method)": [[10, "metratec_rfid.DeskIdUhfv2.get_custom_impinj_settings", false]], "get_custom_impinj_settings() (metratec_rfid.dwarfg2v2 method)": [[11, "metratec_rfid.DwarfG2v2.get_custom_impinj_settings", false]], "get_custom_impinj_settings() (metratec_rfid.plrm method)": [[12, "metratec_rfid.Plrm.get_custom_impinj_settings", false]], "get_custom_impinj_settings() (metratec_rfid.pulsarlr method)": [[13, "metratec_rfid.PulsarLR.get_custom_impinj_settings", false]], "get_custom_impinj_settings() (metratec_rfid.qrg2 method)": [[15, "metratec_rfid.QRG2.get_custom_impinj_settings", false]], "get_data() (metratec_rfid.hftag method)": [[8, "metratec_rfid.HfTag.get_data", false]], "get_data() (metratec_rfid.uhftag method)": [[8, "metratec_rfid.UhfTag.get_data", false]], "get_dsfid() (metratec_rfid.hftaginfo method)": [[8, "metratec_rfid.HfTagInfo.get_dsfid", false]], "get_dsfid() (metratec_rfid.iso15tag method)": [[8, "metratec_rfid.ISO15Tag.get_dsfid", false]], "get_epc() (metratec_rfid.uhftag method)": [[8, "metratec_rfid.UhfTag.get_epc", false]], "get_error_message() (metratec_rfid.hftag method)": [[8, "metratec_rfid.HfTag.get_error_message", false]], "get_error_message() (metratec_rfid.uhftag method)": [[8, "metratec_rfid.UhfTag.get_error_message", false]], "get_first_seen() (metratec_rfid.hftag method)": [[8, "metratec_rfid.HfTag.get_first_seen", false]], "get_first_seen() (metratec_rfid.uhftag method)": [[8, "metratec_rfid.UhfTag.get_first_seen", false]], "get_hid_layout() (metratec_rfid.deskidnfc method)": [[3, "metratec_rfid.DeskIdNfc.get_hid_layout", false]], "get_hid_layout() (metratec_rfid.qrnfc method)": [[5, "metratec_rfid.QrNfc.get_hid_layout", false]], "get_hid_mode() (metratec_rfid.deskidnfc method)": [[3, "metratec_rfid.DeskIdNfc.get_hid_mode", false]], "get_hid_mode() (metratec_rfid.qrnfc method)": [[5, "metratec_rfid.QrNfc.get_hid_mode", false]], "get_high_on_tag_output() (metratec_rfid.dwarfg2v2 method)": [[11, "metratec_rfid.DwarfG2v2.get_high_on_tag_output", false]], "get_high_on_tag_output() (metratec_rfid.pulsarlr method)": [[13, "metratec_rfid.PulsarLR.get_high_on_tag_output", false]], "get_icr() (metratec_rfid.hftaginfo method)": [[8, "metratec_rfid.HfTagInfo.get_icr", false]], "get_id() (metratec_rfid.hftag method)": [[8, "metratec_rfid.HfTag.get_id", false]], "get_id() (metratec_rfid.uhftag method)": [[8, "metratec_rfid.UhfTag.get_id", false]], "get_input() (metratec_rfid.pulsarlr method)": [[13, "metratec_rfid.PulsarLR.get_input", false]], "get_input() (metratec_rfid.pulsarmx method)": [[14, "metratec_rfid.PulsarMX.get_input", false]], "get_input() (metratec_rfid.quasarlr method)": [[6, "metratec_rfid.QuasarLR.get_input", false]], "get_input() (metratec_rfid.quasarmx method)": [[7, "metratec_rfid.QuasarMX.get_input", false]], "get_inputs() (metratec_rfid.pulsarlr method)": [[13, "metratec_rfid.PulsarLR.get_inputs", false]], "get_inputs() (metratec_rfid.pulsarmx method)": [[14, "metratec_rfid.PulsarMX.get_inputs", false]], "get_inputs() (metratec_rfid.quasarlr method)": [[6, "metratec_rfid.QuasarLR.get_inputs", false]], "get_inputs() (metratec_rfid.quasarmx method)": [[7, "metratec_rfid.QuasarMX.get_inputs", false]], "get_inventory() (metratec_rfid.deskidiso method)": [[2, "metratec_rfid.DeskIdIso.get_inventory", false]], "get_inventory() (metratec_rfid.deskidnfc method)": [[3, "metratec_rfid.DeskIdNfc.get_inventory", false]], "get_inventory() (metratec_rfid.deskiduhf method)": [[9, "metratec_rfid.DeskIdUhf.get_inventory", false]], "get_inventory() (metratec_rfid.deskiduhfv2 method)": [[10, "metratec_rfid.DeskIdUhfv2.get_inventory", false]], "get_inventory() (metratec_rfid.dwarfg2v2 method)": [[11, "metratec_rfid.DwarfG2v2.get_inventory", false]], "get_inventory() (metratec_rfid.plrm method)": [[12, "metratec_rfid.Plrm.get_inventory", false]], "get_inventory() (metratec_rfid.pulsarlr method)": [[13, "metratec_rfid.PulsarLR.get_inventory", false]], "get_inventory() (metratec_rfid.pulsarmx method)": [[14, "metratec_rfid.PulsarMX.get_inventory", false]], "get_inventory() (metratec_rfid.qrg2 method)": [[15, "metratec_rfid.QRG2.get_inventory", false]], "get_inventory() (metratec_rfid.qrnfc method)": [[5, "metratec_rfid.QrNfc.get_inventory", false]], "get_inventory() (metratec_rfid.quasarlr method)": [[6, "metratec_rfid.QuasarLR.get_inventory", false]], "get_inventory() (metratec_rfid.quasarmx method)": [[7, "metratec_rfid.QuasarMX.get_inventory", false]], "get_inventory_multi() (metratec_rfid.plrm method)": [[12, "metratec_rfid.Plrm.get_inventory_multi", false]], "get_inventory_multi() (metratec_rfid.pulsarlr method)": [[13, "metratec_rfid.PulsarLR.get_inventory_multi", false]], "get_inventory_multi() (metratec_rfid.pulsarmx method)": [[14, "metratec_rfid.PulsarMX.get_inventory_multi", false]], "get_inventory_multi() (metratec_rfid.quasarlr method)": [[6, "metratec_rfid.QuasarLR.get_inventory_multi", false]], "get_inventory_multi() (metratec_rfid.quasarmx method)": [[7, "metratec_rfid.QuasarMX.get_inventory_multi", false]], "get_inventory_report() (metratec_rfid.deskiduhfv2 method)": [[10, "metratec_rfid.DeskIdUhfv2.get_inventory_report", false]], "get_inventory_report() (metratec_rfid.dwarfg2v2 method)": [[11, "metratec_rfid.DwarfG2v2.get_inventory_report", false]], "get_inventory_report() (metratec_rfid.plrm method)": [[12, "metratec_rfid.Plrm.get_inventory_report", false]], "get_inventory_report() (metratec_rfid.pulsarlr method)": [[13, "metratec_rfid.PulsarLR.get_inventory_report", false]], "get_inventory_report() (metratec_rfid.qrg2 method)": [[15, "metratec_rfid.QRG2.get_inventory_report", false]], "get_inventory_settings() (metratec_rfid.deskidnfc method)": [[3, "metratec_rfid.DeskIdNfc.get_inventory_settings", false]], "get_inventory_settings() (metratec_rfid.deskiduhfv2 method)": [[10, "metratec_rfid.DeskIdUhfv2.get_inventory_settings", false]], "get_inventory_settings() (metratec_rfid.dwarfg2v2 method)": [[11, "metratec_rfid.DwarfG2v2.get_inventory_settings", false]], "get_inventory_settings() (metratec_rfid.plrm method)": [[12, "metratec_rfid.Plrm.get_inventory_settings", false]], "get_inventory_settings() (metratec_rfid.pulsarlr method)": [[13, "metratec_rfid.PulsarLR.get_inventory_settings", false]], "get_inventory_settings() (metratec_rfid.qrg2 method)": [[15, "metratec_rfid.QRG2.get_inventory_settings", false]], "get_inventory_settings() (metratec_rfid.qrnfc method)": [[5, "metratec_rfid.QrNfc.get_inventory_settings", false]], "get_last_seen() (metratec_rfid.hftag method)": [[8, "metratec_rfid.HfTag.get_last_seen", false]], "get_last_seen() (metratec_rfid.uhftag method)": [[8, "metratec_rfid.UhfTag.get_last_seen", false]], "get_logger() (metratec_rfid.deskidiso method)": [[2, "metratec_rfid.DeskIdIso.get_logger", false]], "get_logger() (metratec_rfid.deskidnfc method)": [[3, "metratec_rfid.DeskIdNfc.get_logger", false]], "get_logger() (metratec_rfid.deskiduhf method)": [[9, "metratec_rfid.DeskIdUhf.get_logger", false]], "get_logger() (metratec_rfid.deskiduhfv2 method)": [[10, "metratec_rfid.DeskIdUhfv2.get_logger", false]], "get_logger() (metratec_rfid.dwarfg2v2 method)": [[11, "metratec_rfid.DwarfG2v2.get_logger", false]], "get_logger() (metratec_rfid.plrm method)": [[12, "metratec_rfid.Plrm.get_logger", false]], "get_logger() (metratec_rfid.pulsarlr method)": [[13, "metratec_rfid.PulsarLR.get_logger", false]], "get_logger() (metratec_rfid.pulsarmx method)": [[14, "metratec_rfid.PulsarMX.get_logger", false]], "get_logger() (metratec_rfid.qrg2 method)": [[15, "metratec_rfid.QRG2.get_logger", false]], "get_logger() (metratec_rfid.qrnfc method)": [[5, "metratec_rfid.QrNfc.get_logger", false]], "get_logger() (metratec_rfid.quasarlr method)": [[6, "metratec_rfid.QuasarLR.get_logger", false]], "get_logger() (metratec_rfid.quasarmx method)": [[7, "metratec_rfid.QuasarMX.get_logger", false]], "get_mask() (metratec_rfid.deskiduhfv2 method)": [[10, "metratec_rfid.DeskIdUhfv2.get_mask", false]], "get_mask() (metratec_rfid.dwarfg2v2 method)": [[11, "metratec_rfid.DwarfG2v2.get_mask", false]], "get_mask() (metratec_rfid.plrm method)": [[12, "metratec_rfid.Plrm.get_mask", false]], "get_mask() (metratec_rfid.pulsarlr method)": [[13, "metratec_rfid.PulsarLR.get_mask", false]], "get_mask() (metratec_rfid.qrg2 method)": [[15, "metratec_rfid.QRG2.get_mask", false]], "get_mifare_classic_access_bits() (metratec_rfid.deskidnfc method)": [[3, "metratec_rfid.DeskIdNfc.get_mifare_classic_access_bits", false]], "get_mifare_classic_access_bits() (metratec_rfid.qrnfc method)": [[5, "metratec_rfid.QrNfc.get_mifare_classic_access_bits", false]], "get_mode() (metratec_rfid.deskidnfc method)": [[3, "metratec_rfid.DeskIdNfc.get_mode", false]], "get_mode() (metratec_rfid.qrnfc method)": [[5, "metratec_rfid.QrNfc.get_mode", false]], "get_multiplexer() (metratec_rfid.dwarfg2v2 method)": [[11, "metratec_rfid.DwarfG2v2.get_multiplexer", false]], "get_multiplexer() (metratec_rfid.pulsarlr method)": [[13, "metratec_rfid.PulsarLR.get_multiplexer", false]], "get_name() (metratec_rfid.deskidiso method)": [[2, "metratec_rfid.DeskIdIso.get_name", false]], "get_name() (metratec_rfid.deskidnfc method)": [[3, "metratec_rfid.DeskIdNfc.get_name", false]], "get_name() (metratec_rfid.deskiduhf method)": [[9, "metratec_rfid.DeskIdUhf.get_name", false]], "get_name() (metratec_rfid.deskiduhfv2 method)": [[10, "metratec_rfid.DeskIdUhfv2.get_name", false]], "get_name() (metratec_rfid.dwarfg2v2 method)": [[11, "metratec_rfid.DwarfG2v2.get_name", false]], "get_name() (metratec_rfid.plrm method)": [[12, "metratec_rfid.Plrm.get_name", false]], "get_name() (metratec_rfid.pulsarlr method)": [[13, "metratec_rfid.PulsarLR.get_name", false]], "get_name() (metratec_rfid.pulsarmx method)": [[14, "metratec_rfid.PulsarMX.get_name", false]], "get_name() (metratec_rfid.qrg2 method)": [[15, "metratec_rfid.QRG2.get_name", false]], "get_name() (metratec_rfid.qrnfc method)": [[5, "metratec_rfid.QrNfc.get_name", false]], "get_name() (metratec_rfid.quasarlr method)": [[6, "metratec_rfid.QuasarLR.get_name", false]], "get_name() (metratec_rfid.quasarmx method)": [[7, "metratec_rfid.QuasarMX.get_name", false]], "get_output() (metratec_rfid.pulsarlr method)": [[13, "metratec_rfid.PulsarLR.get_output", false]], "get_output() (metratec_rfid.pulsarmx method)": [[14, "metratec_rfid.PulsarMX.get_output", false]], "get_output() (metratec_rfid.quasarlr method)": [[6, "metratec_rfid.QuasarLR.get_output", false]], "get_output() (metratec_rfid.quasarmx method)": [[7, "metratec_rfid.QuasarMX.get_output", false]], "get_outputs() (metratec_rfid.pulsarlr method)": [[13, "metratec_rfid.PulsarLR.get_outputs", false]], "get_outputs() (metratec_rfid.pulsarmx method)": [[14, "metratec_rfid.PulsarMX.get_outputs", false]], "get_outputs() (metratec_rfid.quasarlr method)": [[6, "metratec_rfid.QuasarLR.get_outputs", false]], "get_outputs() (metratec_rfid.quasarmx method)": [[7, "metratec_rfid.QuasarMX.get_outputs", false]], "get_power() (metratec_rfid.deskiduhf method)": [[9, "metratec_rfid.DeskIdUhf.get_power", false]], "get_power() (metratec_rfid.deskiduhfv2 method)": [[10, "metratec_rfid.DeskIdUhfv2.get_power", false]], "get_power() (metratec_rfid.dwarfg2v2 method)": [[11, "metratec_rfid.DwarfG2v2.get_power", false]], "get_power() (metratec_rfid.plrm method)": [[12, "metratec_rfid.Plrm.get_power", false]], "get_power() (metratec_rfid.pulsarlr method)": [[13, "metratec_rfid.PulsarLR.get_power", false]], "get_power() (metratec_rfid.pulsarmx method)": [[14, "metratec_rfid.PulsarMX.get_power", false]], "get_power() (metratec_rfid.qrg2 method)": [[15, "metratec_rfid.QRG2.get_power", false]], "get_profile_parameter() (metratec_rfid.deskiduhf method)": [[9, "metratec_rfid.DeskIdUhf.get_profile_parameter", false]], "get_profile_parameter() (metratec_rfid.pulsarmx method)": [[14, "metratec_rfid.PulsarMX.get_profile_parameter", false]], "get_q_value() (metratec_rfid.deskiduhfv2 method)": [[10, "metratec_rfid.DeskIdUhfv2.get_q_value", false]], "get_q_value() (metratec_rfid.dwarfg2v2 method)": [[11, "metratec_rfid.DwarfG2v2.get_q_value", false]], "get_q_value() (metratec_rfid.plrm method)": [[12, "metratec_rfid.Plrm.get_q_value", false]], "get_q_value() (metratec_rfid.pulsarlr method)": [[13, "metratec_rfid.PulsarLR.get_q_value", false]], "get_q_value() (metratec_rfid.qrg2 method)": [[15, "metratec_rfid.QRG2.get_q_value", false]], "get_reader_info() (metratec_rfid.deskidiso method)": [[2, "metratec_rfid.DeskIdIso.get_reader_info", false]], "get_reader_info() (metratec_rfid.deskidnfc method)": [[3, "metratec_rfid.DeskIdNfc.get_reader_info", false]], "get_reader_info() (metratec_rfid.deskiduhf method)": [[9, "metratec_rfid.DeskIdUhf.get_reader_info", false]], "get_reader_info() (metratec_rfid.deskiduhfv2 method)": [[10, "metratec_rfid.DeskIdUhfv2.get_reader_info", false]], "get_reader_info() (metratec_rfid.dwarfg2v2 method)": [[11, "metratec_rfid.DwarfG2v2.get_reader_info", false]], "get_reader_info() (metratec_rfid.plrm method)": [[12, "metratec_rfid.Plrm.get_reader_info", false]], "get_reader_info() (metratec_rfid.pulsarlr method)": [[13, "metratec_rfid.PulsarLR.get_reader_info", false]], "get_reader_info() (metratec_rfid.pulsarmx method)": [[14, "metratec_rfid.PulsarMX.get_reader_info", false]], "get_reader_info() (metratec_rfid.qrg2 method)": [[15, "metratec_rfid.QRG2.get_reader_info", false]], "get_reader_info() (metratec_rfid.qrnfc method)": [[5, "metratec_rfid.QrNfc.get_reader_info", false]], "get_reader_info() (metratec_rfid.quasarlr method)": [[6, "metratec_rfid.QuasarLR.get_reader_info", false]], "get_reader_info() (metratec_rfid.quasarmx method)": [[7, "metratec_rfid.QuasarMX.get_reader_info", false]], "get_region() (metratec_rfid.deskiduhfv2 method)": [[10, "metratec_rfid.DeskIdUhfv2.get_region", false]], "get_region() (metratec_rfid.dwarfg2v2 method)": [[11, "metratec_rfid.DwarfG2v2.get_region", false]], "get_region() (metratec_rfid.plrm method)": [[12, "metratec_rfid.Plrm.get_region", false]], "get_region() (metratec_rfid.pulsarlr method)": [[13, "metratec_rfid.PulsarLR.get_region", false]], "get_region() (metratec_rfid.qrg2 method)": [[15, "metratec_rfid.QRG2.get_region", false]], "get_rf_mode() (metratec_rfid.deskiduhfv2 method)": [[10, "metratec_rfid.DeskIdUhfv2.get_rf_mode", false]], "get_rf_mode() (metratec_rfid.dwarfg2v2 method)": [[11, "metratec_rfid.DwarfG2v2.get_rf_mode", false]], "get_rf_mode() (metratec_rfid.plrm method)": [[12, "metratec_rfid.Plrm.get_rf_mode", false]], "get_rf_mode() (metratec_rfid.pulsarlr method)": [[13, "metratec_rfid.PulsarLR.get_rf_mode", false]], "get_rf_mode() (metratec_rfid.qrg2 method)": [[15, "metratec_rfid.QRG2.get_rf_mode", false]], "get_rssi() (metratec_rfid.uhftag method)": [[8, "metratec_rfid.UhfTag.get_rssi", false]], "get_sak() (metratec_rfid.iso14atag method)": [[8, "metratec_rfid.ISO14ATag.get_sak", false]], "get_seen_count() (metratec_rfid.hftag method)": [[8, "metratec_rfid.HfTag.get_seen_count", false]], "get_seen_count() (metratec_rfid.uhftag method)": [[8, "metratec_rfid.UhfTag.get_seen_count", false]], "get_selected_session() (metratec_rfid.deskiduhfv2 method)": [[10, "metratec_rfid.DeskIdUhfv2.get_selected_session", false]], "get_selected_session() (metratec_rfid.dwarfg2v2 method)": [[11, "metratec_rfid.DwarfG2v2.get_selected_session", false]], "get_selected_session() (metratec_rfid.plrm method)": [[12, "metratec_rfid.Plrm.get_selected_session", false]], "get_selected_session() (metratec_rfid.pulsarlr method)": [[13, "metratec_rfid.PulsarLR.get_selected_session", false]], "get_selected_session() (metratec_rfid.qrg2 method)": [[15, "metratec_rfid.QRG2.get_selected_session", false]], "get_selected_transponder() (metratec_rfid.deskidnfc method)": [[3, "metratec_rfid.DeskIdNfc.get_selected_transponder", false]], "get_selected_transponder() (metratec_rfid.qrnfc method)": [[5, "metratec_rfid.QrNfc.get_selected_transponder", false]], "get_status() (metratec_rfid.deskidiso method)": [[2, "metratec_rfid.DeskIdIso.get_status", false]], "get_status() (metratec_rfid.deskidnfc method)": [[3, "metratec_rfid.DeskIdNfc.get_status", false]], "get_status() (metratec_rfid.deskiduhf method)": [[9, "metratec_rfid.DeskIdUhf.get_status", false]], "get_status() (metratec_rfid.deskiduhfv2 method)": [[10, "metratec_rfid.DeskIdUhfv2.get_status", false]], "get_status() (metratec_rfid.dwarfg2v2 method)": [[11, "metratec_rfid.DwarfG2v2.get_status", false]], "get_status() (metratec_rfid.plrm method)": [[12, "metratec_rfid.Plrm.get_status", false]], "get_status() (metratec_rfid.pulsarlr method)": [[13, "metratec_rfid.PulsarLR.get_status", false]], "get_status() (metratec_rfid.pulsarmx method)": [[14, "metratec_rfid.PulsarMX.get_status", false]], "get_status() (metratec_rfid.qrg2 method)": [[15, "metratec_rfid.QRG2.get_status", false]], "get_status() (metratec_rfid.qrnfc method)": [[5, "metratec_rfid.QrNfc.get_status", false]], "get_status() (metratec_rfid.quasarlr method)": [[6, "metratec_rfid.QuasarLR.get_status", false]], "get_status() (metratec_rfid.quasarmx method)": [[7, "metratec_rfid.QuasarMX.get_status", false]], "get_tag_size() (metratec_rfid.deskiduhfv2 method)": [[10, "metratec_rfid.DeskIdUhfv2.get_tag_size", false]], "get_tag_size() (metratec_rfid.dwarfg2v2 method)": [[11, "metratec_rfid.DwarfG2v2.get_tag_size", false]], "get_tag_size() (metratec_rfid.plrm method)": [[12, "metratec_rfid.Plrm.get_tag_size", false]], "get_tag_size() (metratec_rfid.pulsarlr method)": [[13, "metratec_rfid.PulsarLR.get_tag_size", false]], "get_tag_size() (metratec_rfid.qrg2 method)": [[15, "metratec_rfid.QRG2.get_tag_size", false]], "get_tag_size_settings() (metratec_rfid.deskiduhfv2 method)": [[10, "metratec_rfid.DeskIdUhfv2.get_tag_size_settings", false]], "get_tag_size_settings() (metratec_rfid.dwarfg2v2 method)": [[11, "metratec_rfid.DwarfG2v2.get_tag_size_settings", false]], "get_tag_size_settings() (metratec_rfid.plrm method)": [[12, "metratec_rfid.Plrm.get_tag_size_settings", false]], "get_tag_size_settings() (metratec_rfid.pulsarlr method)": [[13, "metratec_rfid.PulsarLR.get_tag_size_settings", false]], "get_tag_size_settings() (metratec_rfid.qrg2 method)": [[15, "metratec_rfid.QRG2.get_tag_size_settings", false]], "get_temperature() (metratec_rfid.deskidnfc method)": [[3, "metratec_rfid.DeskIdNfc.get_temperature", false]], "get_temperature() (metratec_rfid.deskiduhfv2 method)": [[10, "metratec_rfid.DeskIdUhfv2.get_temperature", false]], "get_temperature() (metratec_rfid.dwarfg2v2 method)": [[11, "metratec_rfid.DwarfG2v2.get_temperature", false]], "get_temperature() (metratec_rfid.plrm method)": [[12, "metratec_rfid.Plrm.get_temperature", false]], "get_temperature() (metratec_rfid.pulsarlr method)": [[13, "metratec_rfid.PulsarLR.get_temperature", false]], "get_temperature() (metratec_rfid.qrg2 method)": [[15, "metratec_rfid.QRG2.get_temperature", false]], "get_temperature() (metratec_rfid.qrnfc method)": [[5, "metratec_rfid.QrNfc.get_temperature", false]], "get_tid() (metratec_rfid.hftag method)": [[8, "metratec_rfid.HfTag.get_tid", false]], "get_tid() (metratec_rfid.uhftag method)": [[8, "metratec_rfid.UhfTag.get_tid", false]], "get_vicc_block_size() (metratec_rfid.hftaginfo method)": [[8, "metratec_rfid.HfTagInfo.get_vicc_block_size", false]], "get_vicc_number_of_block() (metratec_rfid.hftaginfo method)": [[8, "metratec_rfid.HfTagInfo.get_vicc_number_of_block", false]], "has_error() (metratec_rfid.hftag method)": [[8, "metratec_rfid.HfTag.has_error", false]], "has_error() (metratec_rfid.uhftag method)": [[8, "metratec_rfid.UhfTag.has_error", false]], "hftag (class in metratec_rfid)": [[8, "metratec_rfid.HfTag", false]], "hftaginfo (class in metratec_rfid)": [[8, "metratec_rfid.HfTagInfo", false]], "increment_mifare_classic_value() (metratec_rfid.deskidnfc method)": [[3, "metratec_rfid.DeskIdNfc.increment_mifare_classic_value", false]], "increment_mifare_classic_value() (metratec_rfid.qrnfc method)": [[5, "metratec_rfid.QrNfc.increment_mifare_classic_value", false]], "is_afi() (metratec_rfid.hftaginfo method)": [[8, "metratec_rfid.HfTagInfo.is_afi", false]], "is_connected() (metratec_rfid.deskidiso method)": [[2, "metratec_rfid.DeskIdIso.is_connected", false]], "is_connected() (metratec_rfid.deskidnfc method)": [[3, "metratec_rfid.DeskIdNfc.is_connected", false]], "is_connected() (metratec_rfid.deskiduhf method)": [[9, "metratec_rfid.DeskIdUhf.is_connected", false]], "is_connected() (metratec_rfid.deskiduhfv2 method)": [[10, "metratec_rfid.DeskIdUhfv2.is_connected", false]], "is_connected() (metratec_rfid.dwarfg2v2 method)": [[11, "metratec_rfid.DwarfG2v2.is_connected", false]], "is_connected() (metratec_rfid.plrm method)": [[12, "metratec_rfid.Plrm.is_connected", false]], "is_connected() (metratec_rfid.pulsarlr method)": [[13, "metratec_rfid.PulsarLR.is_connected", false]], "is_connected() (metratec_rfid.pulsarmx method)": [[14, "metratec_rfid.PulsarMX.is_connected", false]], "is_connected() (metratec_rfid.qrg2 method)": [[15, "metratec_rfid.QRG2.is_connected", false]], "is_connected() (metratec_rfid.qrnfc method)": [[5, "metratec_rfid.QrNfc.is_connected", false]], "is_connected() (metratec_rfid.quasarlr method)": [[6, "metratec_rfid.QuasarLR.is_connected", false]], "is_connected() (metratec_rfid.quasarmx method)": [[7, "metratec_rfid.QuasarMX.is_connected", false]], "is_dsfid() (metratec_rfid.hftaginfo method)": [[8, "metratec_rfid.HfTagInfo.is_dsfid", false]], "is_icr() (metratec_rfid.hftaginfo method)": [[8, "metratec_rfid.HfTagInfo.is_icr", false]], "is_ntag_config_locked() (metratec_rfid.deskidnfc method)": [[3, "metratec_rfid.DeskIdNfc.is_ntag_config_locked", false]], "is_ntag_config_locked() (metratec_rfid.qrnfc method)": [[5, "metratec_rfid.QrNfc.is_ntag_config_locked", false]], "is_running() (metratec_rfid.deskidiso method)": [[2, "metratec_rfid.DeskIdIso.is_running", false]], "is_running() (metratec_rfid.deskidnfc method)": [[3, "metratec_rfid.DeskIdNfc.is_running", false]], "is_running() (metratec_rfid.deskiduhf method)": [[9, "metratec_rfid.DeskIdUhf.is_running", false]], "is_running() (metratec_rfid.deskiduhfv2 method)": [[10, "metratec_rfid.DeskIdUhfv2.is_running", false]], "is_running() (metratec_rfid.dwarfg2v2 method)": [[11, "metratec_rfid.DwarfG2v2.is_running", false]], "is_running() (metratec_rfid.plrm method)": [[12, "metratec_rfid.Plrm.is_running", false]], "is_running() (metratec_rfid.pulsarlr method)": [[13, "metratec_rfid.PulsarLR.is_running", false]], "is_running() (metratec_rfid.pulsarmx method)": [[14, "metratec_rfid.PulsarMX.is_running", false]], "is_running() (metratec_rfid.qrg2 method)": [[15, "metratec_rfid.QRG2.is_running", false]], "is_running() (metratec_rfid.qrnfc method)": [[5, "metratec_rfid.QrNfc.is_running", false]], "is_running() (metratec_rfid.quasarlr method)": [[6, "metratec_rfid.QuasarLR.is_running", false]], "is_running() (metratec_rfid.quasarmx method)": [[7, "metratec_rfid.QuasarMX.is_running", false]], "is_vicc() (metratec_rfid.hftaginfo method)": [[8, "metratec_rfid.HfTagInfo.is_vicc", false]], "iso14atag (class in metratec_rfid)": [[8, "metratec_rfid.ISO14ATag", false]], "iso15tag (class in metratec_rfid)": [[8, "metratec_rfid.ISO15Tag", false]], "kill_tag() (metratec_rfid.deskiduhf method)": [[9, "metratec_rfid.DeskIdUhf.kill_tag", false]], "kill_tag() (metratec_rfid.deskiduhfv2 method)": [[10, "metratec_rfid.DeskIdUhfv2.kill_tag", false]], "kill_tag() (metratec_rfid.dwarfg2v2 method)": [[11, "metratec_rfid.DwarfG2v2.kill_tag", false]], "kill_tag() (metratec_rfid.plrm method)": [[12, "metratec_rfid.Plrm.kill_tag", false]], "kill_tag() (metratec_rfid.pulsarlr method)": [[13, "metratec_rfid.PulsarLR.kill_tag", false]], "kill_tag() (metratec_rfid.pulsarmx method)": [[14, "metratec_rfid.PulsarMX.kill_tag", false]], "kill_tag() (metratec_rfid.qrg2 method)": [[15, "metratec_rfid.QRG2.kill_tag", false]], "load_access_password() (metratec_rfid.deskiduhf method)": [[9, "metratec_rfid.DeskIdUhf.load_access_password", false]], "load_access_password() (metratec_rfid.pulsarmx method)": [[14, "metratec_rfid.PulsarMX.load_access_password", false]], "load_kill_password() (metratec_rfid.deskiduhf method)": [[9, "metratec_rfid.DeskIdUhf.load_kill_password", false]], "load_kill_password() (metratec_rfid.pulsarmx method)": [[14, "metratec_rfid.PulsarMX.load_kill_password", false]], "lock_epc_memory() (metratec_rfid.deskiduhfv2 method)": [[10, "metratec_rfid.DeskIdUhfv2.lock_epc_memory", false]], "lock_epc_memory() (metratec_rfid.dwarfg2v2 method)": [[11, "metratec_rfid.DwarfG2v2.lock_epc_memory", false]], "lock_epc_memory() (metratec_rfid.plrm method)": [[12, "metratec_rfid.Plrm.lock_epc_memory", false]], "lock_epc_memory() (metratec_rfid.pulsarlr method)": [[13, "metratec_rfid.PulsarLR.lock_epc_memory", false]], "lock_epc_memory() (metratec_rfid.qrg2 method)": [[15, "metratec_rfid.QRG2.lock_epc_memory", false]], "lock_epc_memory_permament() (metratec_rfid.deskiduhfv2 method)": [[10, "metratec_rfid.DeskIdUhfv2.lock_epc_memory_permament", false]], "lock_epc_memory_permament() (metratec_rfid.dwarfg2v2 method)": [[11, "metratec_rfid.DwarfG2v2.lock_epc_memory_permament", false]], "lock_epc_memory_permament() (metratec_rfid.plrm method)": [[12, "metratec_rfid.Plrm.lock_epc_memory_permament", false]], "lock_epc_memory_permament() (metratec_rfid.pulsarlr method)": [[13, "metratec_rfid.PulsarLR.lock_epc_memory_permament", false]], "lock_epc_memory_permament() (metratec_rfid.qrg2 method)": [[15, "metratec_rfid.QRG2.lock_epc_memory_permament", false]], "lock_ndef_tag() (metratec_rfid.deskidnfc method)": [[3, "metratec_rfid.DeskIdNfc.lock_ndef_tag", false]], "lock_ndef_tag() (metratec_rfid.qrnfc method)": [[5, "metratec_rfid.QrNfc.lock_ndef_tag", false]], "lock_ntag_block_lock() (metratec_rfid.deskidnfc method)": [[3, "metratec_rfid.DeskIdNfc.lock_ntag_block_lock", false]], "lock_ntag_block_lock() (metratec_rfid.qrnfc method)": [[5, "metratec_rfid.QrNfc.lock_ntag_block_lock", false]], "lock_ntag_config() (metratec_rfid.deskidnfc method)": [[3, "metratec_rfid.DeskIdNfc.lock_ntag_config", false]], "lock_ntag_config() (metratec_rfid.qrnfc method)": [[5, "metratec_rfid.QrNfc.lock_ntag_config", false]], "lock_ntag_page() (metratec_rfid.deskidnfc method)": [[3, "metratec_rfid.DeskIdNfc.lock_ntag_page", false]], "lock_ntag_page() (metratec_rfid.qrnfc method)": [[5, "metratec_rfid.QrNfc.lock_ntag_page", false]], "lock_tag() (metratec_rfid.deskiduhfv2 method)": [[10, "metratec_rfid.DeskIdUhfv2.lock_tag", false]], "lock_tag() (metratec_rfid.dwarfg2v2 method)": [[11, "metratec_rfid.DwarfG2v2.lock_tag", false]], "lock_tag() (metratec_rfid.plrm method)": [[12, "metratec_rfid.Plrm.lock_tag", false]], "lock_tag() (metratec_rfid.pulsarlr method)": [[13, "metratec_rfid.PulsarLR.lock_tag", false]], "lock_tag() (metratec_rfid.qrg2 method)": [[15, "metratec_rfid.QRG2.lock_tag", false]], "lock_tag_access_password() (metratec_rfid.deskiduhf method)": [[9, "metratec_rfid.DeskIdUhf.lock_tag_access_password", false]], "lock_tag_access_password() (metratec_rfid.pulsarmx method)": [[14, "metratec_rfid.PulsarMX.lock_tag_access_password", false]], "lock_tag_afi() (metratec_rfid.deskidiso method)": [[2, "metratec_rfid.DeskIdIso.lock_tag_afi", false]], "lock_tag_afi() (metratec_rfid.deskidnfc method)": [[3, "metratec_rfid.DeskIdNfc.lock_tag_afi", false]], "lock_tag_afi() (metratec_rfid.qrnfc method)": [[5, "metratec_rfid.QrNfc.lock_tag_afi", false]], "lock_tag_afi() (metratec_rfid.quasarlr method)": [[6, "metratec_rfid.QuasarLR.lock_tag_afi", false]], "lock_tag_afi() (metratec_rfid.quasarmx method)": [[7, "metratec_rfid.QuasarMX.lock_tag_afi", false]], "lock_tag_data() (metratec_rfid.deskiduhf method)": [[9, "metratec_rfid.DeskIdUhf.lock_tag_data", false]], "lock_tag_data() (metratec_rfid.pulsarmx method)": [[14, "metratec_rfid.PulsarMX.lock_tag_data", false]], "lock_tag_dsfid() (metratec_rfid.deskidiso method)": [[2, "metratec_rfid.DeskIdIso.lock_tag_dsfid", false]], "lock_tag_dsfid() (metratec_rfid.deskidnfc method)": [[3, "metratec_rfid.DeskIdNfc.lock_tag_dsfid", false]], "lock_tag_dsfid() (metratec_rfid.qrnfc method)": [[5, "metratec_rfid.QrNfc.lock_tag_dsfid", false]], "lock_tag_dsfid() (metratec_rfid.quasarlr method)": [[6, "metratec_rfid.QuasarLR.lock_tag_dsfid", false]], "lock_tag_dsfid() (metratec_rfid.quasarmx method)": [[7, "metratec_rfid.QuasarMX.lock_tag_dsfid", false]], "lock_tag_epc() (metratec_rfid.deskiduhf method)": [[9, "metratec_rfid.DeskIdUhf.lock_tag_epc", false]], "lock_tag_epc() (metratec_rfid.pulsarmx method)": [[14, "metratec_rfid.PulsarMX.lock_tag_epc", false]], "lock_tag_kill_password() (metratec_rfid.deskiduhf method)": [[9, "metratec_rfid.DeskIdUhf.lock_tag_kill_password", false]], "lock_tag_kill_password() (metratec_rfid.pulsarmx method)": [[14, "metratec_rfid.PulsarMX.lock_tag_kill_password", false]], "lock_tag_memory() (metratec_rfid.deskiduhf method)": [[9, "metratec_rfid.DeskIdUhf.lock_tag_memory", false]], "lock_tag_memory() (metratec_rfid.pulsarmx method)": [[14, "metratec_rfid.PulsarMX.lock_tag_memory", false]], "lock_tag_permament() (metratec_rfid.deskiduhfv2 method)": [[10, "metratec_rfid.DeskIdUhfv2.lock_tag_permament", false]], "lock_tag_permament() (metratec_rfid.dwarfg2v2 method)": [[11, "metratec_rfid.DwarfG2v2.lock_tag_permament", false]], "lock_tag_permament() (metratec_rfid.plrm method)": [[12, "metratec_rfid.Plrm.lock_tag_permament", false]], "lock_tag_permament() (metratec_rfid.pulsarlr method)": [[13, "metratec_rfid.PulsarLR.lock_tag_permament", false]], "lock_tag_permament() (metratec_rfid.qrg2 method)": [[15, "metratec_rfid.QRG2.lock_tag_permament", false]], "lock_user_memory() (metratec_rfid.deskiduhfv2 method)": [[10, "metratec_rfid.DeskIdUhfv2.lock_user_memory", false]], "lock_user_memory() (metratec_rfid.dwarfg2v2 method)": [[11, "metratec_rfid.DwarfG2v2.lock_user_memory", false]], "lock_user_memory() (metratec_rfid.plrm method)": [[12, "metratec_rfid.Plrm.lock_user_memory", false]], "lock_user_memory() (metratec_rfid.pulsarlr method)": [[13, "metratec_rfid.PulsarLR.lock_user_memory", false]], "lock_user_memory() (metratec_rfid.qrg2 method)": [[15, "metratec_rfid.QRG2.lock_user_memory", false]], "lock_user_memory_permament() (metratec_rfid.deskiduhfv2 method)": [[10, "metratec_rfid.DeskIdUhfv2.lock_user_memory_permament", false]], "lock_user_memory_permament() (metratec_rfid.dwarfg2v2 method)": [[11, "metratec_rfid.DwarfG2v2.lock_user_memory_permament", false]], "lock_user_memory_permament() (metratec_rfid.plrm method)": [[12, "metratec_rfid.Plrm.lock_user_memory_permament", false]], "lock_user_memory_permament() (metratec_rfid.pulsarlr method)": [[13, "metratec_rfid.PulsarLR.lock_user_memory_permament", false]], "lock_user_memory_permament() (metratec_rfid.qrg2 method)": [[15, "metratec_rfid.QRG2.lock_user_memory_permament", false]], "play_feedback() (metratec_rfid.deskidnfc method)": [[3, "metratec_rfid.DeskIdNfc.play_feedback", false]], "play_feedback() (metratec_rfid.deskiduhfv2 method)": [[10, "metratec_rfid.DeskIdUhfv2.play_feedback", false]], "play_notes() (metratec_rfid.deskidnfc method)": [[3, "metratec_rfid.DeskIdNfc.play_notes", false]], "play_notes() (metratec_rfid.deskiduhfv2 method)": [[10, "metratec_rfid.DeskIdUhfv2.play_notes", false]], "plrm (class in metratec_rfid)": [[12, "metratec_rfid.Plrm", false]], "pulsarlr (class in metratec_rfid)": [[13, "metratec_rfid.PulsarLR", false]], "pulsarmx (class in metratec_rfid)": [[14, "metratec_rfid.PulsarMX", false]], "qrg2 (class in metratec_rfid)": [[15, "metratec_rfid.QRG2", false]], "qrg2fcc (class in metratec_rfid)": [[15, "metratec_rfid.QRG2FCC", false]], "qrnfc (class in metratec_rfid)": [[5, "metratec_rfid.QrNfc", false]], "quasarlr (class in metratec_rfid)": [[6, "metratec_rfid.QuasarLR", false]], "quasarmx (class in metratec_rfid)": [[7, "metratec_rfid.QuasarMX", false]], "read_data() (metratec_rfid.deskidnfc method)": [[3, "metratec_rfid.DeskIdNfc.read_data", false]], "read_data() (metratec_rfid.qrnfc method)": [[5, "metratec_rfid.QrNfc.read_data", false]], "read_data_with_option_flag() (metratec_rfid.deskidnfc method)": [[3, "metratec_rfid.DeskIdNfc.read_data_with_option_flag", false]], "read_data_with_option_flag() (metratec_rfid.qrnfc method)": [[5, "metratec_rfid.QrNfc.read_data_with_option_flag", false]], "read_mifare_classic_value_block() (metratec_rfid.deskidnfc method)": [[3, "metratec_rfid.DeskIdNfc.read_mifare_classic_value_block", false]], "read_mifare_classic_value_block() (metratec_rfid.qrnfc method)": [[5, "metratec_rfid.QrNfc.read_mifare_classic_value_block", false]], "read_ndef_records() (metratec_rfid.deskidnfc method)": [[3, "metratec_rfid.DeskIdNfc.read_ndef_records", false]], "read_ndef_records() (metratec_rfid.qrnfc method)": [[5, "metratec_rfid.QrNfc.read_ndef_records", false]], "read_ntag_access_config() (metratec_rfid.deskidnfc method)": [[3, "metratec_rfid.DeskIdNfc.read_ntag_access_config", false]], "read_ntag_access_config() (metratec_rfid.qrnfc method)": [[5, "metratec_rfid.QrNfc.read_ntag_access_config", false]], "read_ntag_counter() (metratec_rfid.deskidnfc method)": [[3, "metratec_rfid.DeskIdNfc.read_ntag_counter", false]], "read_ntag_counter() (metratec_rfid.qrnfc method)": [[5, "metratec_rfid.QrNfc.read_ntag_counter", false]], "read_ntag_counter_config() (metratec_rfid.deskidnfc method)": [[3, "metratec_rfid.DeskIdNfc.read_ntag_counter_config", false]], "read_ntag_counter_config() (metratec_rfid.qrnfc method)": [[5, "metratec_rfid.QrNfc.read_ntag_counter_config", false]], "read_ntag_mirror_config() (metratec_rfid.deskidnfc method)": [[3, "metratec_rfid.DeskIdNfc.read_ntag_mirror_config", false]], "read_ntag_mirror_config() (metratec_rfid.qrnfc method)": [[5, "metratec_rfid.QrNfc.read_ntag_mirror_config", false]], "read_ntag_modulation_config() (metratec_rfid.deskidnfc method)": [[3, "metratec_rfid.DeskIdNfc.read_ntag_modulation_config", false]], "read_ntag_modulation_config() (metratec_rfid.qrnfc method)": [[5, "metratec_rfid.QrNfc.read_ntag_modulation_config", false]], "read_tag_access_password() (metratec_rfid.deskiduhf method)": [[9, "metratec_rfid.DeskIdUhf.read_tag_access_password", false]], "read_tag_access_password() (metratec_rfid.pulsarmx method)": [[14, "metratec_rfid.PulsarMX.read_tag_access_password", false]], "read_tag_data() (metratec_rfid.deskidiso method)": [[2, "metratec_rfid.DeskIdIso.read_tag_data", false]], "read_tag_data() (metratec_rfid.deskiduhf method)": [[9, "metratec_rfid.DeskIdUhf.read_tag_data", false]], "read_tag_data() (metratec_rfid.deskiduhfv2 method)": [[10, "metratec_rfid.DeskIdUhfv2.read_tag_data", false]], "read_tag_data() (metratec_rfid.dwarfg2v2 method)": [[11, "metratec_rfid.DwarfG2v2.read_tag_data", false]], "read_tag_data() (metratec_rfid.plrm method)": [[12, "metratec_rfid.Plrm.read_tag_data", false]], "read_tag_data() (metratec_rfid.pulsarlr method)": [[13, "metratec_rfid.PulsarLR.read_tag_data", false]], "read_tag_data() (metratec_rfid.pulsarmx method)": [[14, "metratec_rfid.PulsarMX.read_tag_data", false]], "read_tag_data() (metratec_rfid.qrg2 method)": [[15, "metratec_rfid.QRG2.read_tag_data", false]], "read_tag_data() (metratec_rfid.quasarlr method)": [[6, "metratec_rfid.QuasarLR.read_tag_data", false]], "read_tag_data() (metratec_rfid.quasarmx method)": [[7, "metratec_rfid.QuasarMX.read_tag_data", false]], "read_tag_information() (metratec_rfid.deskidiso method)": [[2, "metratec_rfid.DeskIdIso.read_tag_information", false]], "read_tag_information() (metratec_rfid.quasarlr method)": [[6, "metratec_rfid.QuasarLR.read_tag_information", false]], "read_tag_information() (metratec_rfid.quasarmx method)": [[7, "metratec_rfid.QuasarMX.read_tag_information", false]], "read_tag_kill_password() (metratec_rfid.deskiduhf method)": [[9, "metratec_rfid.DeskIdUhf.read_tag_kill_password", false]], "read_tag_kill_password() (metratec_rfid.pulsarmx method)": [[14, "metratec_rfid.PulsarMX.read_tag_kill_password", false]], "read_tag_memory() (metratec_rfid.deskiduhf method)": [[9, "metratec_rfid.DeskIdUhf.read_tag_memory", false]], "read_tag_memory() (metratec_rfid.pulsarmx method)": [[14, "metratec_rfid.PulsarMX.read_tag_memory", false]], "read_tag_tid() (metratec_rfid.deskiduhf method)": [[9, "metratec_rfid.DeskIdUhf.read_tag_tid", false]], "read_tag_tid() (metratec_rfid.deskiduhfv2 method)": [[10, "metratec_rfid.DeskIdUhfv2.read_tag_tid", false]], "read_tag_tid() (metratec_rfid.dwarfg2v2 method)": [[11, "metratec_rfid.DwarfG2v2.read_tag_tid", false]], "read_tag_tid() (metratec_rfid.plrm method)": [[12, "metratec_rfid.Plrm.read_tag_tid", false]], "read_tag_tid() (metratec_rfid.pulsarlr method)": [[13, "metratec_rfid.PulsarLR.read_tag_tid", false]], "read_tag_tid() (metratec_rfid.pulsarmx method)": [[14, "metratec_rfid.PulsarMX.read_tag_tid", false]], "read_tag_tid() (metratec_rfid.qrg2 method)": [[15, "metratec_rfid.QRG2.read_tag_tid", false]], "read_tag_usr() (metratec_rfid.deskiduhfv2 method)": [[10, "metratec_rfid.DeskIdUhfv2.read_tag_usr", false]], "read_tag_usr() (metratec_rfid.dwarfg2v2 method)": [[11, "metratec_rfid.DwarfG2v2.read_tag_usr", false]], "read_tag_usr() (metratec_rfid.plrm method)": [[12, "metratec_rfid.Plrm.read_tag_usr", false]], "read_tag_usr() (metratec_rfid.pulsarlr method)": [[13, "metratec_rfid.PulsarLR.read_tag_usr", false]], "read_tag_usr() (metratec_rfid.qrg2 method)": [[15, "metratec_rfid.QRG2.read_tag_usr", false]], "reset() (metratec_rfid.deskidiso method)": [[2, "metratec_rfid.DeskIdIso.reset", false]], "reset() (metratec_rfid.deskiduhf method)": [[9, "metratec_rfid.DeskIdUhf.reset", false]], "reset() (metratec_rfid.pulsarmx method)": [[14, "metratec_rfid.PulsarMX.reset", false]], "reset() (metratec_rfid.quasarlr method)": [[6, "metratec_rfid.QuasarLR.reset", false]], "reset() (metratec_rfid.quasarmx method)": [[7, "metratec_rfid.QuasarMX.reset", false]], "reset_channel_mask() (metratec_rfid.deskiduhfv2 method)": [[10, "metratec_rfid.DeskIdUhfv2.reset_channel_mask", false]], "reset_channel_mask() (metratec_rfid.dwarfg2v2 method)": [[11, "metratec_rfid.DwarfG2v2.reset_channel_mask", false]], "reset_channel_mask() (metratec_rfid.plrm method)": [[12, "metratec_rfid.Plrm.reset_channel_mask", false]], "reset_channel_mask() (metratec_rfid.pulsarlr method)": [[13, "metratec_rfid.PulsarLR.reset_channel_mask", false]], "reset_channel_mask() (metratec_rfid.qrg2 method)": [[15, "metratec_rfid.QRG2.reset_channel_mask", false]], "reset_mask() (metratec_rfid.deskiduhf method)": [[9, "metratec_rfid.DeskIdUhf.reset_mask", false]], "reset_mask() (metratec_rfid.deskiduhfv2 method)": [[10, "metratec_rfid.DeskIdUhfv2.reset_mask", false]], "reset_mask() (metratec_rfid.dwarfg2v2 method)": [[11, "metratec_rfid.DwarfG2v2.reset_mask", false]], "reset_mask() (metratec_rfid.plrm method)": [[12, "metratec_rfid.Plrm.reset_mask", false]], "reset_mask() (metratec_rfid.pulsarlr method)": [[13, "metratec_rfid.PulsarLR.reset_mask", false]], "reset_mask() (metratec_rfid.pulsarmx method)": [[14, "metratec_rfid.PulsarMX.reset_mask", false]], "reset_mask() (metratec_rfid.qrg2 method)": [[15, "metratec_rfid.QRG2.reset_mask", false]], "restore_mifare_classic_value() (metratec_rfid.deskidnfc method)": [[3, "metratec_rfid.DeskIdNfc.restore_mifare_classic_value", false]], "restore_mifare_classic_value() (metratec_rfid.qrnfc method)": [[5, "metratec_rfid.QrNfc.restore_mifare_classic_value", false]], "save_access_password() (metratec_rfid.deskiduhf method)": [[9, "metratec_rfid.DeskIdUhf.save_access_password", false]], "save_access_password() (metratec_rfid.pulsarmx method)": [[14, "metratec_rfid.PulsarMX.save_access_password", false]], "save_kill_password() (metratec_rfid.deskiduhf method)": [[9, "metratec_rfid.DeskIdUhf.save_kill_password", false]], "save_kill_password() (metratec_rfid.pulsarmx method)": [[14, "metratec_rfid.PulsarMX.save_kill_password", false]], "select_transponder() (metratec_rfid.deskidnfc method)": [[3, "metratec_rfid.DeskIdNfc.select_transponder", false]], "select_transponder() (metratec_rfid.qrnfc method)": [[5, "metratec_rfid.QrNfc.select_transponder", false]], "send_custom_command() (metratec_rfid.deskidiso method)": [[2, "metratec_rfid.DeskIdIso.send_custom_command", false]], "send_custom_command() (metratec_rfid.deskidnfc method)": [[3, "metratec_rfid.DeskIdNfc.send_custom_command", false]], "send_custom_command() (metratec_rfid.deskiduhf method)": [[9, "metratec_rfid.DeskIdUhf.send_custom_command", false]], "send_custom_command() (metratec_rfid.deskiduhfv2 method)": [[10, "metratec_rfid.DeskIdUhfv2.send_custom_command", false]], "send_custom_command() (metratec_rfid.dwarfg2v2 method)": [[11, "metratec_rfid.DwarfG2v2.send_custom_command", false]], "send_custom_command() (metratec_rfid.plrm method)": [[12, "metratec_rfid.Plrm.send_custom_command", false]], "send_custom_command() (metratec_rfid.pulsarlr method)": [[13, "metratec_rfid.PulsarLR.send_custom_command", false]], "send_custom_command() (metratec_rfid.pulsarmx method)": [[14, "metratec_rfid.PulsarMX.send_custom_command", false]], "send_custom_command() (metratec_rfid.qrg2 method)": [[15, "metratec_rfid.QRG2.send_custom_command", false]], "send_custom_command() (metratec_rfid.qrnfc method)": [[5, "metratec_rfid.QrNfc.send_custom_command", false]], "send_custom_command() (metratec_rfid.quasarlr method)": [[6, "metratec_rfid.QuasarLR.send_custom_command", false]], "send_custom_command() (metratec_rfid.quasarmx method)": [[7, "metratec_rfid.QuasarMX.send_custom_command", false]], "send_read_request_iso15693() (metratec_rfid.deskidnfc method)": [[3, "metratec_rfid.DeskIdNfc.send_read_request_iso15693", false]], "send_read_request_iso15693() (metratec_rfid.qrnfc method)": [[5, "metratec_rfid.QrNfc.send_read_request_iso15693", false]], "send_request_iso14a() (metratec_rfid.deskidnfc method)": [[3, "metratec_rfid.DeskIdNfc.send_request_iso14a", false]], "send_request_iso14a() (metratec_rfid.qrnfc method)": [[5, "metratec_rfid.QrNfc.send_request_iso14a", false]], "send_select() (metratec_rfid.deskiduhfv2 method)": [[10, "metratec_rfid.DeskIdUhfv2.send_select", false]], "send_select() (metratec_rfid.dwarfg2v2 method)": [[11, "metratec_rfid.DwarfG2v2.send_select", false]], "send_select() (metratec_rfid.plrm method)": [[12, "metratec_rfid.Plrm.send_select", false]], "send_select() (metratec_rfid.pulsarlr method)": [[13, "metratec_rfid.PulsarLR.send_select", false]], "send_select() (metratec_rfid.qrg2 method)": [[15, "metratec_rfid.QRG2.send_select", false]], "send_write_request_iso15693() (metratec_rfid.deskidnfc method)": [[3, "metratec_rfid.DeskIdNfc.send_write_request_iso15693", false]], "send_write_request_iso15693() (metratec_rfid.qrnfc method)": [[5, "metratec_rfid.QrNfc.send_write_request_iso15693", false]], "serialconnection (class in metratec_rfid.connection.serial_connection)": [[1, "metratec_rfid.connection.serial_connection.SerialConnection", false]], "set_access_password() (metratec_rfid.deskiduhf method)": [[9, "metratec_rfid.DeskIdUhf.set_access_password", false]], "set_access_password() (metratec_rfid.pulsarmx method)": [[14, "metratec_rfid.PulsarMX.set_access_password", false]], "set_afi() (metratec_rfid.deskidnfc method)": [[3, "metratec_rfid.DeskIdNfc.set_afi", false]], "set_afi() (metratec_rfid.qrnfc method)": [[5, "metratec_rfid.QrNfc.set_afi", false]], "set_antenna() (metratec_rfid.plrm method)": [[12, "metratec_rfid.Plrm.set_antenna", false]], "set_antenna() (metratec_rfid.pulsarlr method)": [[13, "metratec_rfid.PulsarLR.set_antenna", false]], "set_antenna() (metratec_rfid.pulsarmx method)": [[14, "metratec_rfid.PulsarMX.set_antenna", false]], "set_antenna() (metratec_rfid.quasarlr method)": [[6, "metratec_rfid.QuasarLR.set_antenna", false]], "set_antenna() (metratec_rfid.quasarmx method)": [[7, "metratec_rfid.QuasarMX.set_antenna", false]], "set_antenna_multiplex() (metratec_rfid.plrm method)": [[12, "metratec_rfid.Plrm.set_antenna_multiplex", false]], "set_antenna_multiplex() (metratec_rfid.pulsarlr method)": [[13, "metratec_rfid.PulsarLR.set_antenna_multiplex", false]], "set_antenna_multiplex() (metratec_rfid.pulsarmx method)": [[14, "metratec_rfid.PulsarMX.set_antenna_multiplex", false]], "set_antenna_multiplex() (metratec_rfid.quasarlr method)": [[6, "metratec_rfid.QuasarLR.set_antenna_multiplex", false]], "set_antenna_multiplex() (metratec_rfid.quasarmx method)": [[7, "metratec_rfid.QuasarMX.set_antenna_multiplex", false]], "set_antenna_outputs() (metratec_rfid.pulsarmx method)": [[14, "metratec_rfid.PulsarMX.set_antenna_outputs", false]], "set_antenna_outputs() (metratec_rfid.quasarlr method)": [[6, "metratec_rfid.QuasarLR.set_antenna_outputs", false]], "set_antenna_outputs() (metratec_rfid.quasarmx method)": [[7, "metratec_rfid.QuasarMX.set_antenna_outputs", false]], "set_antenna_power() (metratec_rfid.dwarfg2v2 method)": [[11, "metratec_rfid.DwarfG2v2.set_antenna_power", false]], "set_antenna_power() (metratec_rfid.plrm method)": [[12, "metratec_rfid.Plrm.set_antenna_power", false]], "set_antenna_power() (metratec_rfid.pulsarlr method)": [[13, "metratec_rfid.PulsarLR.set_antenna_power", false]], "set_antenna_powers() (metratec_rfid.dwarfg2v2 method)": [[11, "metratec_rfid.DwarfG2v2.set_antenna_powers", false]], "set_antenna_powers() (metratec_rfid.plrm method)": [[12, "metratec_rfid.Plrm.set_antenna_powers", false]], "set_antenna_powers() (metratec_rfid.pulsarlr method)": [[13, "metratec_rfid.PulsarLR.set_antenna_powers", false]], "set_authenticate_ntag() (metratec_rfid.deskidnfc method)": [[3, "metratec_rfid.DeskIdNfc.set_authenticate_ntag", false]], "set_authenticate_ntag() (metratec_rfid.qrnfc method)": [[5, "metratec_rfid.QrNfc.set_authenticate_ntag", false]], "set_cb_input_changed() (metratec_rfid.plrm method)": [[12, "metratec_rfid.Plrm.set_cb_input_changed", false]], "set_cb_input_changed() (metratec_rfid.pulsarlr method)": [[13, "metratec_rfid.PulsarLR.set_cb_input_changed", false]], "set_cb_input_changed() (metratec_rfid.pulsarmx method)": [[14, "metratec_rfid.PulsarMX.set_cb_input_changed", false]], "set_cb_input_changed() (metratec_rfid.quasarlr method)": [[6, "metratec_rfid.QuasarLR.set_cb_input_changed", false]], "set_cb_input_changed() (metratec_rfid.quasarmx method)": [[7, "metratec_rfid.QuasarMX.set_cb_input_changed", false]], "set_cb_inventory() (metratec_rfid.deskidiso method)": [[2, "metratec_rfid.DeskIdIso.set_cb_inventory", false]], "set_cb_inventory() (metratec_rfid.deskidnfc method)": [[3, "metratec_rfid.DeskIdNfc.set_cb_inventory", false]], "set_cb_inventory() (metratec_rfid.deskiduhf method)": [[9, "metratec_rfid.DeskIdUhf.set_cb_inventory", false]], "set_cb_inventory() (metratec_rfid.deskiduhfv2 method)": [[10, "metratec_rfid.DeskIdUhfv2.set_cb_inventory", false]], "set_cb_inventory() (metratec_rfid.dwarfg2v2 method)": [[11, "metratec_rfid.DwarfG2v2.set_cb_inventory", false]], "set_cb_inventory() (metratec_rfid.plrm method)": [[12, "metratec_rfid.Plrm.set_cb_inventory", false]], "set_cb_inventory() (metratec_rfid.pulsarlr method)": [[13, "metratec_rfid.PulsarLR.set_cb_inventory", false]], "set_cb_inventory() (metratec_rfid.pulsarmx method)": [[14, "metratec_rfid.PulsarMX.set_cb_inventory", false]], "set_cb_inventory() (metratec_rfid.qrg2 method)": [[15, "metratec_rfid.QRG2.set_cb_inventory", false]], "set_cb_inventory() (metratec_rfid.qrnfc method)": [[5, "metratec_rfid.QrNfc.set_cb_inventory", false]], "set_cb_inventory() (metratec_rfid.quasarlr method)": [[6, "metratec_rfid.QuasarLR.set_cb_inventory", false]], "set_cb_inventory() (metratec_rfid.quasarmx method)": [[7, "metratec_rfid.QuasarMX.set_cb_inventory", false]], "set_cb_inventory_report() (metratec_rfid.deskiduhfv2 method)": [[10, "metratec_rfid.DeskIdUhfv2.set_cb_inventory_report", false]], "set_cb_inventory_report() (metratec_rfid.dwarfg2v2 method)": [[11, "metratec_rfid.DwarfG2v2.set_cb_inventory_report", false]], "set_cb_inventory_report() (metratec_rfid.plrm method)": [[12, "metratec_rfid.Plrm.set_cb_inventory_report", false]], "set_cb_inventory_report() (metratec_rfid.pulsarlr method)": [[13, "metratec_rfid.PulsarLR.set_cb_inventory_report", false]], "set_cb_inventory_report() (metratec_rfid.qrg2 method)": [[15, "metratec_rfid.QRG2.set_cb_inventory_report", false]], "set_cb_request() (metratec_rfid.deskidiso method)": [[2, "metratec_rfid.DeskIdIso.set_cb_request", false]], "set_cb_request() (metratec_rfid.quasarlr method)": [[6, "metratec_rfid.QuasarLR.set_cb_request", false]], "set_cb_request() (metratec_rfid.quasarmx method)": [[7, "metratec_rfid.QuasarMX.set_cb_request", false]], "set_cb_status() (metratec_rfid.deskidiso method)": [[2, "metratec_rfid.DeskIdIso.set_cb_status", false]], "set_cb_status() (metratec_rfid.deskidnfc method)": [[3, "metratec_rfid.DeskIdNfc.set_cb_status", false]], "set_cb_status() (metratec_rfid.deskiduhf method)": [[9, "metratec_rfid.DeskIdUhf.set_cb_status", false]], "set_cb_status() (metratec_rfid.deskiduhfv2 method)": [[10, "metratec_rfid.DeskIdUhfv2.set_cb_status", false]], "set_cb_status() (metratec_rfid.dwarfg2v2 method)": [[11, "metratec_rfid.DwarfG2v2.set_cb_status", false]], "set_cb_status() (metratec_rfid.plrm method)": [[12, "metratec_rfid.Plrm.set_cb_status", false]], "set_cb_status() (metratec_rfid.pulsarlr method)": [[13, "metratec_rfid.PulsarLR.set_cb_status", false]], "set_cb_status() (metratec_rfid.pulsarmx method)": [[14, "metratec_rfid.PulsarMX.set_cb_status", false]], "set_cb_status() (metratec_rfid.qrg2 method)": [[15, "metratec_rfid.QRG2.set_cb_status", false]], "set_cb_status() (metratec_rfid.qrnfc method)": [[5, "metratec_rfid.QrNfc.set_cb_status", false]], "set_cb_status() (metratec_rfid.quasarlr method)": [[6, "metratec_rfid.QuasarLR.set_cb_status", false]], "set_cb_status() (metratec_rfid.quasarmx method)": [[7, "metratec_rfid.QuasarMX.set_cb_status", false]], "set_channel_mask() (metratec_rfid.deskiduhfv2 method)": [[10, "metratec_rfid.DeskIdUhfv2.set_channel_mask", false]], "set_channel_mask() (metratec_rfid.dwarfg2v2 method)": [[11, "metratec_rfid.DwarfG2v2.set_channel_mask", false]], "set_channel_mask() (metratec_rfid.plrm method)": [[12, "metratec_rfid.Plrm.set_channel_mask", false]], "set_channel_mask() (metratec_rfid.pulsarlr method)": [[13, "metratec_rfid.PulsarLR.set_channel_mask", false]], "set_channel_mask() (metratec_rfid.qrg2 method)": [[15, "metratec_rfid.QRG2.set_channel_mask", false]], "set_custom_impinj_settings() (metratec_rfid.deskiduhfv2 method)": [[10, "metratec_rfid.DeskIdUhfv2.set_custom_impinj_settings", false]], "set_custom_impinj_settings() (metratec_rfid.dwarfg2v2 method)": [[11, "metratec_rfid.DwarfG2v2.set_custom_impinj_settings", false]], "set_custom_impinj_settings() (metratec_rfid.plrm method)": [[12, "metratec_rfid.Plrm.set_custom_impinj_settings", false]], "set_custom_impinj_settings() (metratec_rfid.pulsarlr method)": [[13, "metratec_rfid.PulsarLR.set_custom_impinj_settings", false]], "set_custom_impinj_settings() (metratec_rfid.qrg2 method)": [[15, "metratec_rfid.QRG2.set_custom_impinj_settings", false]], "set_epc_mask() (metratec_rfid.deskiduhf method)": [[9, "metratec_rfid.DeskIdUhf.set_epc_mask", false]], "set_epc_mask() (metratec_rfid.pulsarmx method)": [[14, "metratec_rfid.PulsarMX.set_epc_mask", false]], "set_heartbeat() (metratec_rfid.deskidiso method)": [[2, "metratec_rfid.DeskIdIso.set_heartbeat", false]], "set_heartbeat() (metratec_rfid.deskidnfc method)": [[3, "metratec_rfid.DeskIdNfc.set_heartbeat", false]], "set_heartbeat() (metratec_rfid.deskiduhf method)": [[9, "metratec_rfid.DeskIdUhf.set_heartbeat", false]], "set_heartbeat() (metratec_rfid.deskiduhfv2 method)": [[10, "metratec_rfid.DeskIdUhfv2.set_heartbeat", false]], "set_heartbeat() (metratec_rfid.dwarfg2v2 method)": [[11, "metratec_rfid.DwarfG2v2.set_heartbeat", false]], "set_heartbeat() (metratec_rfid.plrm method)": [[12, "metratec_rfid.Plrm.set_heartbeat", false]], "set_heartbeat() (metratec_rfid.pulsarlr method)": [[13, "metratec_rfid.PulsarLR.set_heartbeat", false]], "set_heartbeat() (metratec_rfid.pulsarmx method)": [[14, "metratec_rfid.PulsarMX.set_heartbeat", false]], "set_heartbeat() (metratec_rfid.qrg2 method)": [[15, "metratec_rfid.QRG2.set_heartbeat", false]], "set_heartbeat() (metratec_rfid.qrnfc method)": [[5, "metratec_rfid.QrNfc.set_heartbeat", false]], "set_heartbeat() (metratec_rfid.quasarlr method)": [[6, "metratec_rfid.QuasarLR.set_heartbeat", false]], "set_heartbeat() (metratec_rfid.quasarmx method)": [[7, "metratec_rfid.QuasarMX.set_heartbeat", false]], "set_hid_layout() (metratec_rfid.deskidnfc method)": [[3, "metratec_rfid.DeskIdNfc.set_hid_layout", false]], "set_hid_layout() (metratec_rfid.qrnfc method)": [[5, "metratec_rfid.QrNfc.set_hid_layout", false]], "set_hid_mode() (metratec_rfid.deskidnfc method)": [[3, "metratec_rfid.DeskIdNfc.set_hid_mode", false]], "set_hid_mode() (metratec_rfid.qrnfc method)": [[5, "metratec_rfid.QrNfc.set_hid_mode", false]], "set_high_on_tag_output() (metratec_rfid.dwarfg2v2 method)": [[11, "metratec_rfid.DwarfG2v2.set_high_on_tag_output", false]], "set_high_on_tag_output() (metratec_rfid.pulsarlr method)": [[13, "metratec_rfid.PulsarLR.set_high_on_tag_output", false]], "set_input_debounce_time() (metratec_rfid.deskiduhf method)": [[9, "metratec_rfid.DeskIdUhf.set_input_debounce_time", false]], "set_input_debounce_time() (metratec_rfid.pulsarmx method)": [[14, "metratec_rfid.PulsarMX.set_input_debounce_time", false]], "set_inventory_settings() (metratec_rfid.deskidnfc method)": [[3, "metratec_rfid.DeskIdNfc.set_inventory_settings", false]], "set_inventory_settings() (metratec_rfid.deskiduhfv2 method)": [[10, "metratec_rfid.DeskIdUhfv2.set_inventory_settings", false]], "set_inventory_settings() (metratec_rfid.dwarfg2v2 method)": [[11, "metratec_rfid.DwarfG2v2.set_inventory_settings", false]], "set_inventory_settings() (metratec_rfid.plrm method)": [[12, "metratec_rfid.Plrm.set_inventory_settings", false]], "set_inventory_settings() (metratec_rfid.pulsarlr method)": [[13, "metratec_rfid.PulsarLR.set_inventory_settings", false]], "set_inventory_settings() (metratec_rfid.qrg2 method)": [[15, "metratec_rfid.QRG2.set_inventory_settings", false]], "set_inventory_settings() (metratec_rfid.qrnfc method)": [[5, "metratec_rfid.QrNfc.set_inventory_settings", false]], "set_kill_password() (metratec_rfid.deskiduhf method)": [[9, "metratec_rfid.DeskIdUhf.set_kill_password", false]], "set_kill_password() (metratec_rfid.deskiduhfv2 method)": [[10, "metratec_rfid.DeskIdUhfv2.set_kill_password", false]], "set_kill_password() (metratec_rfid.dwarfg2v2 method)": [[11, "metratec_rfid.DwarfG2v2.set_kill_password", false]], "set_kill_password() (metratec_rfid.plrm method)": [[12, "metratec_rfid.Plrm.set_kill_password", false]], "set_kill_password() (metratec_rfid.pulsarlr method)": [[13, "metratec_rfid.PulsarLR.set_kill_password", false]], "set_kill_password() (metratec_rfid.pulsarmx method)": [[14, "metratec_rfid.PulsarMX.set_kill_password", false]], "set_kill_password() (metratec_rfid.qrg2 method)": [[15, "metratec_rfid.QRG2.set_kill_password", false]], "set_lock_password() (metratec_rfid.deskiduhfv2 method)": [[10, "metratec_rfid.DeskIdUhfv2.set_lock_password", false]], "set_lock_password() (metratec_rfid.dwarfg2v2 method)": [[11, "metratec_rfid.DwarfG2v2.set_lock_password", false]], "set_lock_password() (metratec_rfid.plrm method)": [[12, "metratec_rfid.Plrm.set_lock_password", false]], "set_lock_password() (metratec_rfid.pulsarlr method)": [[13, "metratec_rfid.PulsarLR.set_lock_password", false]], "set_lock_password() (metratec_rfid.qrg2 method)": [[15, "metratec_rfid.QRG2.set_lock_password", false]], "set_mask() (metratec_rfid.deskiduhf method)": [[9, "metratec_rfid.DeskIdUhf.set_mask", false]], "set_mask() (metratec_rfid.deskiduhfv2 method)": [[10, "metratec_rfid.DeskIdUhfv2.set_mask", false]], "set_mask() (metratec_rfid.dwarfg2v2 method)": [[11, "metratec_rfid.DwarfG2v2.set_mask", false]], "set_mask() (metratec_rfid.plrm method)": [[12, "metratec_rfid.Plrm.set_mask", false]], "set_mask() (metratec_rfid.pulsarlr method)": [[13, "metratec_rfid.PulsarLR.set_mask", false]], "set_mask() (metratec_rfid.pulsarmx method)": [[14, "metratec_rfid.PulsarMX.set_mask", false]], "set_mask() (metratec_rfid.qrg2 method)": [[15, "metratec_rfid.QRG2.set_mask", false]], "set_mifare_classic_keys() (metratec_rfid.deskidnfc method)": [[3, "metratec_rfid.DeskIdNfc.set_mifare_classic_keys", false]], "set_mifare_classic_keys() (metratec_rfid.qrnfc method)": [[5, "metratec_rfid.QrNfc.set_mifare_classic_keys", false]], "set_mode() (metratec_rfid.deskidiso method)": [[2, "metratec_rfid.DeskIdIso.set_mode", false]], "set_mode() (metratec_rfid.deskidnfc method)": [[3, "metratec_rfid.DeskIdNfc.set_mode", false]], "set_mode() (metratec_rfid.qrnfc method)": [[5, "metratec_rfid.QrNfc.set_mode", false]], "set_mode() (metratec_rfid.quasarlr method)": [[6, "metratec_rfid.QuasarLR.set_mode", false]], "set_mode() (metratec_rfid.quasarmx method)": [[7, "metratec_rfid.QuasarMX.set_mode", false]], "set_multiplexer() (metratec_rfid.dwarfg2v2 method)": [[11, "metratec_rfid.DwarfG2v2.set_multiplexer", false]], "set_multiplexer() (metratec_rfid.pulsarlr method)": [[13, "metratec_rfid.PulsarLR.set_multiplexer", false]], "set_output() (metratec_rfid.deskidiso method)": [[2, "metratec_rfid.DeskIdIso.set_output", false]], "set_output() (metratec_rfid.deskiduhf method)": [[9, "metratec_rfid.DeskIdUhf.set_output", false]], "set_output() (metratec_rfid.pulsarlr method)": [[13, "metratec_rfid.PulsarLR.set_output", false]], "set_output() (metratec_rfid.pulsarmx method)": [[14, "metratec_rfid.PulsarMX.set_output", false]], "set_output() (metratec_rfid.quasarlr method)": [[6, "metratec_rfid.QuasarLR.set_output", false]], "set_output() (metratec_rfid.quasarmx method)": [[7, "metratec_rfid.QuasarMX.set_output", false]], "set_outputs() (metratec_rfid.deskidiso method)": [[2, "metratec_rfid.DeskIdIso.set_outputs", false]], "set_outputs() (metratec_rfid.deskiduhf method)": [[9, "metratec_rfid.DeskIdUhf.set_outputs", false]], "set_outputs() (metratec_rfid.pulsarlr method)": [[13, "metratec_rfid.PulsarLR.set_outputs", false]], "set_outputs() (metratec_rfid.pulsarmx method)": [[14, "metratec_rfid.PulsarMX.set_outputs", false]], "set_outputs() (metratec_rfid.quasarlr method)": [[6, "metratec_rfid.QuasarLR.set_outputs", false]], "set_outputs() (metratec_rfid.quasarmx method)": [[7, "metratec_rfid.QuasarMX.set_outputs", false]], "set_power() (metratec_rfid.deskidiso method)": [[2, "metratec_rfid.DeskIdIso.set_power", false]], "set_power() (metratec_rfid.deskiduhf method)": [[9, "metratec_rfid.DeskIdUhf.set_power", false]], "set_power() (metratec_rfid.deskiduhfv2 method)": [[10, "metratec_rfid.DeskIdUhfv2.set_power", false]], "set_power() (metratec_rfid.dwarfg2miniv2 method)": [[11, "metratec_rfid.DwarfG2Miniv2.set_power", false]], "set_power() (metratec_rfid.dwarfg2v2 method)": [[11, "metratec_rfid.DwarfG2v2.set_power", false]], "set_power() (metratec_rfid.dwarfg2xrv2 method)": [[11, "metratec_rfid.DwarfG2XRv2.set_power", false]], "set_power() (metratec_rfid.plrm method)": [[12, "metratec_rfid.Plrm.set_power", false]], "set_power() (metratec_rfid.pulsarlr method)": [[13, "metratec_rfid.PulsarLR.set_power", false]], "set_power() (metratec_rfid.pulsarmx method)": [[14, "metratec_rfid.PulsarMX.set_power", false]], "set_power() (metratec_rfid.qrg2 method)": [[15, "metratec_rfid.QRG2.set_power", false]], "set_power() (metratec_rfid.quasarlr method)": [[6, "metratec_rfid.QuasarLR.set_power", false]], "set_power() (metratec_rfid.quasarmx method)": [[7, "metratec_rfid.QuasarMX.set_power", false]], "set_profile_parameter() (metratec_rfid.deskiduhf method)": [[9, "metratec_rfid.DeskIdUhf.set_profile_parameter", false]], "set_profile_parameter() (metratec_rfid.pulsarmx method)": [[14, "metratec_rfid.PulsarMX.set_profile_parameter", false]], "set_q_value() (metratec_rfid.deskiduhfv2 method)": [[10, "metratec_rfid.DeskIdUhfv2.set_q_value", false]], "set_q_value() (metratec_rfid.dwarfg2v2 method)": [[11, "metratec_rfid.DwarfG2v2.set_q_value", false]], "set_q_value() (metratec_rfid.plrm method)": [[12, "metratec_rfid.Plrm.set_q_value", false]], "set_q_value() (metratec_rfid.pulsarlr method)": [[13, "metratec_rfid.PulsarLR.set_q_value", false]], "set_q_value() (metratec_rfid.qrg2 method)": [[15, "metratec_rfid.QRG2.set_q_value", false]], "set_region() (metratec_rfid.deskiduhf method)": [[9, "metratec_rfid.DeskIdUhf.set_region", false]], "set_region() (metratec_rfid.deskiduhfv2 method)": [[10, "metratec_rfid.DeskIdUhfv2.set_region", false]], "set_region() (metratec_rfid.dwarfg2v2 method)": [[11, "metratec_rfid.DwarfG2v2.set_region", false]], "set_region() (metratec_rfid.plrm method)": [[12, "metratec_rfid.Plrm.set_region", false]], "set_region() (metratec_rfid.pulsarlr method)": [[13, "metratec_rfid.PulsarLR.set_region", false]], "set_region() (metratec_rfid.pulsarmx method)": [[14, "metratec_rfid.PulsarMX.set_region", false]], "set_region() (metratec_rfid.qrg2 method)": [[15, "metratec_rfid.QRG2.set_region", false]], "set_rf_mode() (metratec_rfid.deskiduhfv2 method)": [[10, "metratec_rfid.DeskIdUhfv2.set_rf_mode", false]], "set_rf_mode() (metratec_rfid.dwarfg2v2 method)": [[11, "metratec_rfid.DwarfG2v2.set_rf_mode", false]], "set_rf_mode() (metratec_rfid.plrm method)": [[12, "metratec_rfid.Plrm.set_rf_mode", false]], "set_rf_mode() (metratec_rfid.pulsarlr method)": [[13, "metratec_rfid.PulsarLR.set_rf_mode", false]], "set_rf_mode() (metratec_rfid.qrg2 method)": [[15, "metratec_rfid.QRG2.set_rf_mode", false]], "set_selected_session() (metratec_rfid.deskiduhfv2 method)": [[10, "metratec_rfid.DeskIdUhfv2.set_selected_session", false]], "set_selected_session() (metratec_rfid.dwarfg2v2 method)": [[11, "metratec_rfid.DwarfG2v2.set_selected_session", false]], "set_selected_session() (metratec_rfid.plrm method)": [[12, "metratec_rfid.Plrm.set_selected_session", false]], "set_selected_session() (metratec_rfid.pulsarlr method)": [[13, "metratec_rfid.PulsarLR.set_selected_session", false]], "set_selected_session() (metratec_rfid.qrg2 method)": [[15, "metratec_rfid.QRG2.set_selected_session", false]], "set_tag_size() (metratec_rfid.deskiduhf method)": [[9, "metratec_rfid.DeskIdUhf.set_tag_size", false]], "set_tag_size() (metratec_rfid.deskiduhfv2 method)": [[10, "metratec_rfid.DeskIdUhfv2.set_tag_size", false]], "set_tag_size() (metratec_rfid.dwarfg2v2 method)": [[11, "metratec_rfid.DwarfG2v2.set_tag_size", false]], "set_tag_size() (metratec_rfid.plrm method)": [[12, "metratec_rfid.Plrm.set_tag_size", false]], "set_tag_size() (metratec_rfid.pulsarlr method)": [[13, "metratec_rfid.PulsarLR.set_tag_size", false]], "set_tag_size() (metratec_rfid.pulsarmx method)": [[14, "metratec_rfid.PulsarMX.set_tag_size", false]], "set_tag_size() (metratec_rfid.qrg2 method)": [[15, "metratec_rfid.QRG2.set_tag_size", false]], "socketconnection (class in metratec_rfid.connection.socket_connection)": [[1, "metratec_rfid.connection.socket_connection.SocketConnection", false]], "start_inventory() (metratec_rfid.deskidiso method)": [[2, "metratec_rfid.DeskIdIso.start_inventory", false]], "start_inventory() (metratec_rfid.deskidnfc method)": [[3, "metratec_rfid.DeskIdNfc.start_inventory", false]], "start_inventory() (metratec_rfid.deskiduhf method)": [[9, "metratec_rfid.DeskIdUhf.start_inventory", false]], "start_inventory() (metratec_rfid.deskiduhfv2 method)": [[10, "metratec_rfid.DeskIdUhfv2.start_inventory", false]], "start_inventory() (metratec_rfid.dwarfg2v2 method)": [[11, "metratec_rfid.DwarfG2v2.start_inventory", false]], "start_inventory() (metratec_rfid.plrm method)": [[12, "metratec_rfid.Plrm.start_inventory", false]], "start_inventory() (metratec_rfid.pulsarlr method)": [[13, "metratec_rfid.PulsarLR.start_inventory", false]], "start_inventory() (metratec_rfid.pulsarmx method)": [[14, "metratec_rfid.PulsarMX.start_inventory", false]], "start_inventory() (metratec_rfid.qrg2 method)": [[15, "metratec_rfid.QRG2.start_inventory", false]], "start_inventory() (metratec_rfid.qrnfc method)": [[5, "metratec_rfid.QrNfc.start_inventory", false]], "start_inventory() (metratec_rfid.quasarlr method)": [[6, "metratec_rfid.QuasarLR.start_inventory", false]], "start_inventory() (metratec_rfid.quasarmx method)": [[7, "metratec_rfid.QuasarMX.start_inventory", false]], "start_inventory_multi() (metratec_rfid.plrm method)": [[12, "metratec_rfid.Plrm.start_inventory_multi", false]], "start_inventory_multi() (metratec_rfid.pulsarlr method)": [[13, "metratec_rfid.PulsarLR.start_inventory_multi", false]], "start_inventory_multi() (metratec_rfid.pulsarmx method)": [[14, "metratec_rfid.PulsarMX.start_inventory_multi", false]], "start_inventory_multi() (metratec_rfid.quasarlr method)": [[6, "metratec_rfid.QuasarLR.start_inventory_multi", false]], "start_inventory_multi() (metratec_rfid.quasarmx method)": [[7, "metratec_rfid.QuasarMX.start_inventory_multi", false]], "start_inventory_report() (metratec_rfid.deskiduhfv2 method)": [[10, "metratec_rfid.DeskIdUhfv2.start_inventory_report", false]], "start_inventory_report() (metratec_rfid.dwarfg2v2 method)": [[11, "metratec_rfid.DwarfG2v2.start_inventory_report", false]], "start_inventory_report() (metratec_rfid.plrm method)": [[12, "metratec_rfid.Plrm.start_inventory_report", false]], "start_inventory_report() (metratec_rfid.pulsarlr method)": [[13, "metratec_rfid.PulsarLR.start_inventory_report", false]], "start_inventory_report() (metratec_rfid.qrg2 method)": [[15, "metratec_rfid.QRG2.start_inventory_report", false]], "stop_inventory() (metratec_rfid.deskidiso method)": [[2, "metratec_rfid.DeskIdIso.stop_inventory", false]], "stop_inventory() (metratec_rfid.deskidnfc method)": [[3, "metratec_rfid.DeskIdNfc.stop_inventory", false]], "stop_inventory() (metratec_rfid.deskiduhf method)": [[9, "metratec_rfid.DeskIdUhf.stop_inventory", false]], "stop_inventory() (metratec_rfid.deskiduhfv2 method)": [[10, "metratec_rfid.DeskIdUhfv2.stop_inventory", false]], "stop_inventory() (metratec_rfid.dwarfg2v2 method)": [[11, "metratec_rfid.DwarfG2v2.stop_inventory", false]], "stop_inventory() (metratec_rfid.plrm method)": [[12, "metratec_rfid.Plrm.stop_inventory", false]], "stop_inventory() (metratec_rfid.pulsarlr method)": [[13, "metratec_rfid.PulsarLR.stop_inventory", false]], "stop_inventory() (metratec_rfid.pulsarmx method)": [[14, "metratec_rfid.PulsarMX.stop_inventory", false]], "stop_inventory() (metratec_rfid.qrg2 method)": [[15, "metratec_rfid.QRG2.stop_inventory", false]], "stop_inventory() (metratec_rfid.qrnfc method)": [[5, "metratec_rfid.QrNfc.stop_inventory", false]], "stop_inventory() (metratec_rfid.quasarlr method)": [[6, "metratec_rfid.QuasarLR.stop_inventory", false]], "stop_inventory() (metratec_rfid.quasarmx method)": [[7, "metratec_rfid.QuasarMX.stop_inventory", false]], "stop_inventory_multi() (metratec_rfid.plrm method)": [[12, "metratec_rfid.Plrm.stop_inventory_multi", false]], "stop_inventory_multi() (metratec_rfid.pulsarlr method)": [[13, "metratec_rfid.PulsarLR.stop_inventory_multi", false]], "stop_inventory_multi() (metratec_rfid.pulsarmx method)": [[14, "metratec_rfid.PulsarMX.stop_inventory_multi", false]], "stop_inventory_multi() (metratec_rfid.quasarlr method)": [[6, "metratec_rfid.QuasarLR.stop_inventory_multi", false]], "stop_inventory_multi() (metratec_rfid.quasarmx method)": [[7, "metratec_rfid.QuasarMX.stop_inventory_multi", false]], "stop_inventory_report() (metratec_rfid.deskiduhfv2 method)": [[10, "metratec_rfid.DeskIdUhfv2.stop_inventory_report", false]], "stop_inventory_report() (metratec_rfid.dwarfg2v2 method)": [[11, "metratec_rfid.DwarfG2v2.stop_inventory_report", false]], "stop_inventory_report() (metratec_rfid.plrm method)": [[12, "metratec_rfid.Plrm.stop_inventory_report", false]], "stop_inventory_report() (metratec_rfid.pulsarlr method)": [[13, "metratec_rfid.PulsarLR.stop_inventory_report", false]], "stop_inventory_report() (metratec_rfid.qrg2 method)": [[15, "metratec_rfid.QRG2.stop_inventory_report", false]], "store_mifare_classic_authenticate_key() (metratec_rfid.deskidnfc method)": [[3, "metratec_rfid.DeskIdNfc.store_mifare_classic_authenticate_key", false]], "store_mifare_classic_authenticate_key() (metratec_rfid.qrnfc method)": [[5, "metratec_rfid.QrNfc.store_mifare_classic_authenticate_key", false]], "transfer_mifare_classic_value() (metratec_rfid.deskidnfc method)": [[3, "metratec_rfid.DeskIdNfc.transfer_mifare_classic_value", false]], "transfer_mifare_classic_value() (metratec_rfid.qrnfc method)": [[5, "metratec_rfid.QrNfc.transfer_mifare_classic_value", false]], "uhftag (class in metratec_rfid)": [[8, "metratec_rfid.UhfTag", false]], "unlock_epc_memory() (metratec_rfid.deskiduhfv2 method)": [[10, "metratec_rfid.DeskIdUhfv2.unlock_epc_memory", false]], "unlock_epc_memory() (metratec_rfid.dwarfg2v2 method)": [[11, "metratec_rfid.DwarfG2v2.unlock_epc_memory", false]], "unlock_epc_memory() (metratec_rfid.plrm method)": [[12, "metratec_rfid.Plrm.unlock_epc_memory", false]], "unlock_epc_memory() (metratec_rfid.pulsarlr method)": [[13, "metratec_rfid.PulsarLR.unlock_epc_memory", false]], "unlock_epc_memory() (metratec_rfid.qrg2 method)": [[15, "metratec_rfid.QRG2.unlock_epc_memory", false]], "unlock_tag() (metratec_rfid.deskiduhfv2 method)": [[10, "metratec_rfid.DeskIdUhfv2.unlock_tag", false]], "unlock_tag() (metratec_rfid.dwarfg2v2 method)": [[11, "metratec_rfid.DwarfG2v2.unlock_tag", false]], "unlock_tag() (metratec_rfid.plrm method)": [[12, "metratec_rfid.Plrm.unlock_tag", false]], "unlock_tag() (metratec_rfid.pulsarlr method)": [[13, "metratec_rfid.PulsarLR.unlock_tag", false]], "unlock_tag() (metratec_rfid.qrg2 method)": [[15, "metratec_rfid.QRG2.unlock_tag", false]], "unlock_user_memory() (metratec_rfid.deskiduhfv2 method)": [[10, "metratec_rfid.DeskIdUhfv2.unlock_user_memory", false]], "unlock_user_memory() (metratec_rfid.dwarfg2v2 method)": [[11, "metratec_rfid.DwarfG2v2.unlock_user_memory", false]], "unlock_user_memory() (metratec_rfid.plrm method)": [[12, "metratec_rfid.Plrm.unlock_user_memory", false]], "unlock_user_memory() (metratec_rfid.pulsarlr method)": [[13, "metratec_rfid.PulsarLR.unlock_user_memory", false]], "unlock_user_memory() (metratec_rfid.qrg2 method)": [[15, "metratec_rfid.QRG2.unlock_user_memory", false]], "write_data() (metratec_rfid.deskidnfc method)": [[3, "metratec_rfid.DeskIdNfc.write_data", false]], "write_data() (metratec_rfid.qrnfc method)": [[5, "metratec_rfid.QrNfc.write_data", false]], "write_mifare_classic_value_block() (metratec_rfid.deskidnfc method)": [[3, "metratec_rfid.DeskIdNfc.write_mifare_classic_value_block", false]], "write_mifare_classic_value_block() (metratec_rfid.qrnfc method)": [[5, "metratec_rfid.QrNfc.write_mifare_classic_value_block", false]], "write_ndef_records() (metratec_rfid.deskidnfc method)": [[3, "metratec_rfid.DeskIdNfc.write_ndef_records", false]], "write_ndef_records() (metratec_rfid.qrnfc method)": [[5, "metratec_rfid.QrNfc.write_ndef_records", false]], "write_ntag_access_config() (metratec_rfid.deskidnfc method)": [[3, "metratec_rfid.DeskIdNfc.write_ntag_access_config", false]], "write_ntag_access_config() (metratec_rfid.qrnfc method)": [[5, "metratec_rfid.QrNfc.write_ntag_access_config", false]], "write_ntag_counter_config() (metratec_rfid.deskidnfc method)": [[3, "metratec_rfid.DeskIdNfc.write_ntag_counter_config", false]], "write_ntag_counter_config() (metratec_rfid.qrnfc method)": [[5, "metratec_rfid.QrNfc.write_ntag_counter_config", false]], "write_ntag_mirror_config() (metratec_rfid.deskidnfc method)": [[3, "metratec_rfid.DeskIdNfc.write_ntag_mirror_config", false]], "write_ntag_mirror_config() (metratec_rfid.qrnfc method)": [[5, "metratec_rfid.QrNfc.write_ntag_mirror_config", false]], "write_ntag_modulation_config() (metratec_rfid.deskidnfc method)": [[3, "metratec_rfid.DeskIdNfc.write_ntag_modulation_config", false]], "write_ntag_modulation_config() (metratec_rfid.qrnfc method)": [[5, "metratec_rfid.QrNfc.write_ntag_modulation_config", false]], "write_tag_access_password() (metratec_rfid.deskiduhf method)": [[9, "metratec_rfid.DeskIdUhf.write_tag_access_password", false]], "write_tag_access_password() (metratec_rfid.pulsarmx method)": [[14, "metratec_rfid.PulsarMX.write_tag_access_password", false]], "write_tag_afi() (metratec_rfid.deskidiso method)": [[2, "metratec_rfid.DeskIdIso.write_tag_afi", false]], "write_tag_afi() (metratec_rfid.deskidnfc method)": [[3, "metratec_rfid.DeskIdNfc.write_tag_afi", false]], "write_tag_afi() (metratec_rfid.qrnfc method)": [[5, "metratec_rfid.QrNfc.write_tag_afi", false]], "write_tag_afi() (metratec_rfid.quasarlr method)": [[6, "metratec_rfid.QuasarLR.write_tag_afi", false]], "write_tag_afi() (metratec_rfid.quasarmx method)": [[7, "metratec_rfid.QuasarMX.write_tag_afi", false]], "write_tag_data() (metratec_rfid.deskidiso method)": [[2, "metratec_rfid.DeskIdIso.write_tag_data", false]], "write_tag_data() (metratec_rfid.deskiduhf method)": [[9, "metratec_rfid.DeskIdUhf.write_tag_data", false]], "write_tag_data() (metratec_rfid.deskiduhfv2 method)": [[10, "metratec_rfid.DeskIdUhfv2.write_tag_data", false]], "write_tag_data() (metratec_rfid.dwarfg2v2 method)": [[11, "metratec_rfid.DwarfG2v2.write_tag_data", false]], "write_tag_data() (metratec_rfid.plrm method)": [[12, "metratec_rfid.Plrm.write_tag_data", false]], "write_tag_data() (metratec_rfid.pulsarlr method)": [[13, "metratec_rfid.PulsarLR.write_tag_data", false]], "write_tag_data() (metratec_rfid.pulsarmx method)": [[14, "metratec_rfid.PulsarMX.write_tag_data", false]], "write_tag_data() (metratec_rfid.qrg2 method)": [[15, "metratec_rfid.QRG2.write_tag_data", false]], "write_tag_data() (metratec_rfid.quasarlr method)": [[6, "metratec_rfid.QuasarLR.write_tag_data", false]], "write_tag_data() (metratec_rfid.quasarmx method)": [[7, "metratec_rfid.QuasarMX.write_tag_data", false]], "write_tag_dsfid() (metratec_rfid.deskidiso method)": [[2, "metratec_rfid.DeskIdIso.write_tag_dsfid", false]], "write_tag_dsfid() (metratec_rfid.deskidnfc method)": [[3, "metratec_rfid.DeskIdNfc.write_tag_dsfid", false]], "write_tag_dsfid() (metratec_rfid.qrnfc method)": [[5, "metratec_rfid.QrNfc.write_tag_dsfid", false]], "write_tag_dsfid() (metratec_rfid.quasarlr method)": [[6, "metratec_rfid.QuasarLR.write_tag_dsfid", false]], "write_tag_dsfid() (metratec_rfid.quasarmx method)": [[7, "metratec_rfid.QuasarMX.write_tag_dsfid", false]], "write_tag_epc() (metratec_rfid.deskiduhf method)": [[9, "metratec_rfid.DeskIdUhf.write_tag_epc", false]], "write_tag_epc() (metratec_rfid.deskiduhfv2 method)": [[10, "metratec_rfid.DeskIdUhfv2.write_tag_epc", false]], "write_tag_epc() (metratec_rfid.dwarfg2v2 method)": [[11, "metratec_rfid.DwarfG2v2.write_tag_epc", false]], "write_tag_epc() (metratec_rfid.plrm method)": [[12, "metratec_rfid.Plrm.write_tag_epc", false]], "write_tag_epc() (metratec_rfid.pulsarlr method)": [[13, "metratec_rfid.PulsarLR.write_tag_epc", false]], "write_tag_epc() (metratec_rfid.pulsarmx method)": [[14, "metratec_rfid.PulsarMX.write_tag_epc", false]], "write_tag_epc() (metratec_rfid.qrg2 method)": [[15, "metratec_rfid.QRG2.write_tag_epc", false]], "write_tag_kill_password() (metratec_rfid.deskiduhf method)": [[9, "metratec_rfid.DeskIdUhf.write_tag_kill_password", false]], "write_tag_kill_password() (metratec_rfid.pulsarmx method)": [[14, "metratec_rfid.PulsarMX.write_tag_kill_password", false]], "write_tag_memory() (metratec_rfid.deskiduhf method)": [[9, "metratec_rfid.DeskIdUhf.write_tag_memory", false]], "write_tag_memory() (metratec_rfid.pulsarmx method)": [[14, "metratec_rfid.PulsarMX.write_tag_memory", false]], "write_tag_usr() (metratec_rfid.deskiduhfv2 method)": [[10, "metratec_rfid.DeskIdUhfv2.write_tag_usr", false]], "write_tag_usr() (metratec_rfid.dwarfg2v2 method)": [[11, "metratec_rfid.DwarfG2v2.write_tag_usr", false]], "write_tag_usr() (metratec_rfid.plrm method)": [[12, "metratec_rfid.Plrm.write_tag_usr", false]], "write_tag_usr() (metratec_rfid.pulsarlr method)": [[13, "metratec_rfid.PulsarLR.write_tag_usr", false]], "write_tag_usr() (metratec_rfid.qrg2 method)": [[15, "metratec_rfid.QRG2.write_tag_usr", false]]}, "objects": {"metratec_rfid": [[2, 0, 1, "", "DeskIdIso"], [3, 0, 1, "", "DeskIdNfc"], [9, 0, 1, "", "DeskIdUhf"], [10, 0, 1, "", "DeskIdUhfv2"], [10, 0, 1, "", "DeskIdUhfv2FCC"], [11, 0, 1, "", "DwarfG2Miniv2"], [11, 0, 1, "", "DwarfG2XRv2"], [11, 0, 1, "", "DwarfG2v2"], [8, 0, 1, "", "HfTag"], [8, 0, 1, "", "HfTagInfo"], [8, 0, 1, "", "ISO14ATag"], [8, 0, 1, "", "ISO15Tag"], [12, 0, 1, "", "Plrm"], [13, 0, 1, "", "PulsarLR"], [14, 0, 1, "", "PulsarMX"], [15, 0, 1, "", "QRG2"], [15, 0, 1, "", "QRG2FCC"], [5, 0, 1, "", "QrNfc"], [6, 0, 1, "", "QuasarLR"], [7, 0, 1, "", "QuasarMX"], [8, 0, 1, "", "UhfTag"], [17, 2, 1, "", "detect_readers"]], "metratec_rfid.DeskIdIso": [[2, 1, 1, "", "__init__"], [2, 1, 1, "", "connect"], [2, 1, 1, "", "disable_rf_interface"], [2, 1, 1, "", "disconnect"], [2, 1, 1, "", "enable_fire_empty_inventory"], [2, 1, 1, "", "enable_input_events"], [2, 1, 1, "", "enable_rf_interface"], [2, 1, 1, "", "fetch_inventory"], [2, 1, 1, "", "get_inventory"], [2, 1, 1, "", "get_logger"], [2, 1, 1, "", "get_name"], [2, 1, 1, "", "get_reader_info"], [2, 1, 1, "", "get_status"], [2, 1, 1, "", "is_connected"], [2, 1, 1, "", "is_running"], [2, 1, 1, "", "lock_tag_afi"], [2, 1, 1, "", "lock_tag_dsfid"], [2, 1, 1, "", "read_tag_data"], [2, 1, 1, "", "read_tag_information"], [2, 1, 1, "", "reset"], [2, 1, 1, "", "send_custom_command"], [2, 1, 1, "", "set_cb_inventory"], [2, 1, 1, "", "set_cb_request"], [2, 1, 1, "", "set_cb_status"], [2, 1, 1, "", "set_heartbeat"], [2, 1, 1, "", "set_mode"], [2, 1, 1, "", "set_output"], [2, 1, 1, "", "set_outputs"], [2, 1, 1, "", "set_power"], [2, 1, 1, "", "start_inventory"], [2, 1, 1, "", "stop_inventory"], [2, 1, 1, "", "write_tag_afi"], [2, 1, 1, "", "write_tag_data"], [2, 1, 1, "", "write_tag_dsfid"]], "metratec_rfid.DeskIdNfc": [[3, 1, 1, "", "__init__"], [3, 1, 1, "", "authenticate_mifare_classic_block"], [3, 1, 1, "", "authenticate_ntag"], [3, 1, 1, "", "check_ndef_state"], [3, 1, 1, "", "config_rf_interface"], [3, 1, 1, "", "connect"], [3, 1, 1, "", "decrement_mifare_classic_value"], [3, 1, 1, "", "deselect_transponder"], [3, 1, 1, "", "detect_tag_types"], [3, 1, 1, "", "disable_hid_mode"], [3, 1, 1, "", "disable_rf_interface"], [3, 1, 1, "", "disable_start_up_sound"], [3, 1, 1, "", "disconnect"], [3, 1, 1, "", "enable_fire_empty_inventory"], [3, 1, 1, "", "enable_rf_interface"], [3, 1, 1, "", "enable_start_up_sound"], [3, 1, 1, "", "fetch_inventory"], [3, 1, 1, "", "format_ndef_tag"], [3, 1, 1, "", "get_afi"], [3, 1, 1, "", "get_hid_layout"], [3, 1, 1, "", "get_hid_mode"], [3, 1, 1, "", "get_inventory"], [3, 1, 1, "", "get_inventory_settings"], [3, 1, 1, "", "get_logger"], [3, 1, 1, "", "get_mifare_classic_access_bits"], [3, 1, 1, "", "get_mode"], [3, 1, 1, "", "get_name"], [3, 1, 1, "", "get_reader_info"], [3, 1, 1, "", "get_selected_transponder"], [3, 1, 1, "", "get_status"], [3, 1, 1, "", "get_temperature"], [3, 1, 1, "", "increment_mifare_classic_value"], [3, 1, 1, "", "is_connected"], [3, 1, 1, "", "is_ntag_config_locked"], [3, 1, 1, "", "is_running"], [3, 1, 1, "", "lock_ndef_tag"], [3, 1, 1, "", "lock_ntag_block_lock"], [3, 1, 1, "", "lock_ntag_config"], [3, 1, 1, "", "lock_ntag_page"], [3, 1, 1, "", "lock_tag_afi"], [3, 1, 1, "", "lock_tag_dsfid"], [3, 1, 1, "", "play_feedback"], [3, 1, 1, "", "play_notes"], [3, 1, 1, "", "read_data"], [3, 1, 1, "", "read_data_with_option_flag"], [3, 1, 1, "", "read_mifare_classic_value_block"], [3, 1, 1, "", "read_ndef_records"], [3, 1, 1, "", "read_ntag_access_config"], [3, 1, 1, "", "read_ntag_counter"], [3, 1, 1, "", "read_ntag_counter_config"], [3, 1, 1, "", "read_ntag_mirror_config"], [3, 1, 1, "", "read_ntag_modulation_config"], [3, 1, 1, "", "restore_mifare_classic_value"], [3, 1, 1, "", "select_transponder"], [3, 1, 1, "", "send_custom_command"], [3, 1, 1, "", "send_read_request_iso15693"], [3, 1, 1, "", "send_request_iso14a"], [3, 1, 1, "", "send_write_request_iso15693"], [3, 1, 1, "", "set_afi"], [3, 1, 1, "", "set_authenticate_ntag"], [3, 1, 1, "", "set_cb_inventory"], [3, 1, 1, "", "set_cb_status"], [3, 1, 1, "", "set_heartbeat"], [3, 1, 1, "", "set_hid_layout"], [3, 1, 1, "", "set_hid_mode"], [3, 1, 1, "", "set_inventory_settings"], [3, 1, 1, "", "set_mifare_classic_keys"], [3, 1, 1, "", "set_mode"], [3, 1, 1, "", "start_inventory"], [3, 1, 1, "", "stop_inventory"], [3, 1, 1, "", "store_mifare_classic_authenticate_key"], [3, 1, 1, "", "transfer_mifare_classic_value"], [3, 1, 1, "", "write_data"], [3, 1, 1, "", "write_mifare_classic_value_block"], [3, 1, 1, "", "write_ndef_records"], [3, 1, 1, "", "write_ntag_access_config"], [3, 1, 1, "", "write_ntag_counter_config"], [3, 1, 1, "", "write_ntag_mirror_config"], [3, 1, 1, "", "write_ntag_modulation_config"], [3, 1, 1, "", "write_tag_afi"], [3, 1, 1, "", "write_tag_dsfid"]], "metratec_rfid.DeskIdUhf": [[9, 1, 1, "", "__init__"], [9, 1, 1, "", "connect"], [9, 1, 1, "", "disable_access_password"], [9, 1, 1, "", "disable_rfid_field"], [9, 1, 1, "", "disconnect"], [9, 1, 1, "", "enable_fire_empty_inventory"], [9, 1, 1, "", "enable_input_events"], [9, 1, 1, "", "fetch_inventory"], [9, 1, 1, "", "get_inventory"], [9, 1, 1, "", "get_logger"], [9, 1, 1, "", "get_name"], [9, 1, 1, "", "get_power"], [9, 1, 1, "", "get_profile_parameter"], [9, 1, 1, "", "get_reader_info"], [9, 1, 1, "", "get_status"], [9, 1, 1, "", "is_connected"], [9, 1, 1, "", "is_running"], [9, 1, 1, "", "kill_tag"], [9, 1, 1, "", "load_access_password"], [9, 1, 1, "", "load_kill_password"], [9, 1, 1, "", "lock_tag_access_password"], [9, 1, 1, "", "lock_tag_data"], [9, 1, 1, "", "lock_tag_epc"], [9, 1, 1, "", "lock_tag_kill_password"], [9, 1, 1, "", "lock_tag_memory"], [9, 1, 1, "", "read_tag_access_password"], [9, 1, 1, "", "read_tag_data"], [9, 1, 1, "", "read_tag_kill_password"], [9, 1, 1, "", "read_tag_memory"], [9, 1, 1, "", "read_tag_tid"], [9, 1, 1, "", "reset"], [9, 1, 1, "", "reset_mask"], [9, 1, 1, "", "save_access_password"], [9, 1, 1, "", "save_kill_password"], [9, 1, 1, "", "send_custom_command"], [9, 1, 1, "", "set_access_password"], [9, 1, 1, "", "set_cb_inventory"], [9, 1, 1, "", "set_cb_status"], [9, 1, 1, "", "set_epc_mask"], [9, 1, 1, "", "set_heartbeat"], [9, 1, 1, "", "set_input_debounce_time"], [9, 1, 1, "", "set_kill_password"], [9, 1, 1, "", "set_mask"], [9, 1, 1, "", "set_output"], [9, 1, 1, "", "set_outputs"], [9, 1, 1, "", "set_power"], [9, 1, 1, "", "set_profile_parameter"], [9, 1, 1, "", "set_region"], [9, 1, 1, "", "set_tag_size"], [9, 1, 1, "", "start_inventory"], [9, 1, 1, "", "stop_inventory"], [9, 1, 1, "", "write_tag_access_password"], [9, 1, 1, "", "write_tag_data"], [9, 1, 1, "", "write_tag_epc"], [9, 1, 1, "", "write_tag_kill_password"], [9, 1, 1, "", "write_tag_memory"]], "metratec_rfid.DeskIdUhfv2": [[10, 1, 1, "", "__init__"], [10, 1, 1, "", "activate_protected_mode"], [10, 1, 1, "", "activate_short_range_mode"], [10, 1, 1, "", "call_impinj_authentication_service"], [10, 1, 1, "", "connect"], [10, 1, 1, "", "deactivate_protected_mode"], [10, 1, 1, "", "deactivate_short_range_mode"], [10, 1, 1, "", "disable_start_up_sound"], [10, 1, 1, "", "disconnect"], [10, 1, 1, "", "enable_fire_empty_inventory"], [10, 1, 1, "", "enable_fire_empty_reports"], [10, 1, 1, "", "enable_start_up_sound"], [10, 1, 1, "", "fetch_inventory"], [10, 1, 1, "", "get_channel_mask"], [10, 1, 1, "", "get_custom_impinj_settings"], [10, 1, 1, "", "get_inventory"], [10, 1, 1, "", "get_inventory_report"], [10, 1, 1, "", "get_inventory_settings"], [10, 1, 1, "", "get_logger"], [10, 1, 1, "", "get_mask"], [10, 1, 1, "", "get_name"], [10, 1, 1, "", "get_power"], [10, 1, 1, "", "get_q_value"], [10, 1, 1, "", "get_reader_info"], [10, 1, 1, "", "get_region"], [10, 1, 1, "", "get_rf_mode"], [10, 1, 1, "", "get_selected_session"], [10, 1, 1, "", "get_status"], [10, 1, 1, "", "get_tag_size"], [10, 1, 1, "", "get_tag_size_settings"], [10, 1, 1, "", "get_temperature"], [10, 1, 1, "", "is_connected"], [10, 1, 1, "", "is_running"], [10, 1, 1, "", "kill_tag"], [10, 1, 1, "", "lock_epc_memory"], [10, 1, 1, "", "lock_epc_memory_permament"], [10, 1, 1, "", "lock_tag"], [10, 1, 1, "", "lock_tag_permament"], [10, 1, 1, "", "lock_user_memory"], [10, 1, 1, "", "lock_user_memory_permament"], [10, 1, 1, "", "play_feedback"], [10, 1, 1, "", "play_notes"], [10, 1, 1, "", "read_tag_data"], [10, 1, 1, "", "read_tag_tid"], [10, 1, 1, "", "read_tag_usr"], [10, 1, 1, "", "reset_channel_mask"], [10, 1, 1, "", "reset_mask"], [10, 1, 1, "", "send_custom_command"], [10, 1, 1, "", "send_select"], [10, 1, 1, "", "set_cb_inventory"], [10, 1, 1, "", "set_cb_inventory_report"], [10, 1, 1, "", "set_cb_status"], [10, 1, 1, "", "set_channel_mask"], [10, 1, 1, "", "set_custom_impinj_settings"], [10, 1, 1, "", "set_heartbeat"], [10, 1, 1, "", "set_inventory_settings"], [10, 1, 1, "", "set_kill_password"], [10, 1, 1, "", "set_lock_password"], [10, 1, 1, "", "set_mask"], [10, 1, 1, "", "set_power"], [10, 1, 1, "", "set_q_value"], [10, 1, 1, "", "set_region"], [10, 1, 1, "", "set_rf_mode"], [10, 1, 1, "", "set_selected_session"], [10, 1, 1, "", "set_tag_size"], [10, 1, 1, "", "start_inventory"], [10, 1, 1, "", "start_inventory_report"], [10, 1, 1, "", "stop_inventory"], [10, 1, 1, "", "stop_inventory_report"], [10, 1, 1, "", "unlock_epc_memory"], [10, 1, 1, "", "unlock_tag"], [10, 1, 1, "", "unlock_user_memory"], [10, 1, 1, "", "write_tag_data"], [10, 1, 1, "", "write_tag_epc"], [10, 1, 1, "", "write_tag_usr"]], "metratec_rfid.DeskIdUhfv2FCC": [[10, 1, 1, "", "__init__"]], "metratec_rfid.DwarfG2Miniv2": [[11, 1, 1, "", "set_power"]], "metratec_rfid.DwarfG2XRv2": [[11, 1, 1, "", "set_power"]], "metratec_rfid.DwarfG2v2": [[11, 1, 1, "", "__init__"], [11, 1, 1, "", "activate_protected_mode"], [11, 1, 1, "", "activate_short_range_mode"], [11, 1, 1, "", "call_impinj_authentication_service"], [11, 1, 1, "", "connect"], [11, 1, 1, "", "deactivate_protected_mode"], [11, 1, 1, "", "deactivate_short_range_mode"], [11, 1, 1, "", "disable_high_on_tag"], [11, 1, 1, "", "disconnect"], [11, 1, 1, "", "enable_fire_empty_inventory"], [11, 1, 1, "", "enable_fire_empty_reports"], [11, 1, 1, "", "fetch_inventory"], [11, 1, 1, "", "get_antenna_power"], [11, 1, 1, "", "get_antenna_powers"], [11, 1, 1, "", "get_channel_mask"], [11, 1, 1, "", "get_custom_impinj_settings"], [11, 1, 1, "", "get_high_on_tag_output"], [11, 1, 1, "", "get_inventory"], [11, 1, 1, "", "get_inventory_report"], [11, 1, 1, "", "get_inventory_settings"], [11, 1, 1, "", "get_logger"], [11, 1, 1, "", "get_mask"], [11, 1, 1, "", "get_multiplexer"], [11, 1, 1, "", "get_name"], [11, 1, 1, "", "get_power"], [11, 1, 1, "", "get_q_value"], [11, 1, 1, "", "get_reader_info"], [11, 1, 1, "", "get_region"], [11, 1, 1, "", "get_rf_mode"], [11, 1, 1, "", "get_selected_session"], [11, 1, 1, "", "get_status"], [11, 1, 1, "", "get_tag_size"], [11, 1, 1, "", "get_tag_size_settings"], [11, 1, 1, "", "get_temperature"], [11, 1, 1, "", "is_connected"], [11, 1, 1, "", "is_running"], [11, 1, 1, "", "kill_tag"], [11, 1, 1, "", "lock_epc_memory"], [11, 1, 1, "", "lock_epc_memory_permament"], [11, 1, 1, "", "lock_tag"], [11, 1, 1, "", "lock_tag_permament"], [11, 1, 1, "", "lock_user_memory"], [11, 1, 1, "", "lock_user_memory_permament"], [11, 1, 1, "", "read_tag_data"], [11, 1, 1, "", "read_tag_tid"], [11, 1, 1, "", "read_tag_usr"], [11, 1, 1, "", "reset_channel_mask"], [11, 1, 1, "", "reset_mask"], [11, 1, 1, "", "send_custom_command"], [11, 1, 1, "", "send_select"], [11, 1, 1, "", "set_antenna_power"], [11, 1, 1, "", "set_antenna_powers"], [11, 1, 1, "", "set_cb_inventory"], [11, 1, 1, "", "set_cb_inventory_report"], [11, 1, 1, "", "set_cb_status"], [11, 1, 1, "", "set_channel_mask"], [11, 1, 1, "", "set_custom_impinj_settings"], [11, 1, 1, "", "set_heartbeat"], [11, 1, 1, "", "set_high_on_tag_output"], [11, 1, 1, "", "set_inventory_settings"], [11, 1, 1, "", "set_kill_password"], [11, 1, 1, "", "set_lock_password"], [11, 1, 1, "", "set_mask"], [11, 1, 1, "", "set_multiplexer"], [11, 1, 1, "", "set_power"], [11, 1, 1, "", "set_q_value"], [11, 1, 1, "", "set_region"], [11, 1, 1, "", "set_rf_mode"], [11, 1, 1, "", "set_selected_session"], [11, 1, 1, "", "set_tag_size"], [11, 1, 1, "", "start_inventory"], [11, 1, 1, "", "start_inventory_report"], [11, 1, 1, "", "stop_inventory"], [11, 1, 1, "", "stop_inventory_report"], [11, 1, 1, "", "unlock_epc_memory"], [11, 1, 1, "", "unlock_tag"], [11, 1, 1, "", "unlock_user_memory"], [11, 1, 1, "", "write_tag_data"], [11, 1, 1, "", "write_tag_epc"], [11, 1, 1, "", "write_tag_usr"]], "metratec_rfid.HfTag": [[8, 1, 1, "", "get_antenna"], [8, 1, 1, "", "get_data"], [8, 1, 1, "", "get_error_message"], [8, 1, 1, "", "get_first_seen"], [8, 1, 1, "", "get_id"], [8, 1, 1, "", "get_last_seen"], [8, 1, 1, "", "get_seen_count"], [8, 1, 1, "", "get_tid"], [8, 1, 1, "", "has_error"]], "metratec_rfid.HfTagInfo": [[8, 1, 1, "", "get_afi"], [8, 1, 1, "", "get_dsfid"], [8, 1, 1, "", "get_icr"], [8, 1, 1, "", "get_vicc_block_size"], [8, 1, 1, "", "get_vicc_number_of_block"], [8, 1, 1, "", "is_afi"], [8, 1, 1, "", "is_dsfid"], [8, 1, 1, "", "is_icr"], [8, 1, 1, "", "is_vicc"]], "metratec_rfid.ISO14ATag": [[8, 1, 1, "", "get_atqa"], [8, 1, 1, "", "get_sak"]], "metratec_rfid.ISO15Tag": [[8, 1, 1, "", "get_dsfid"]], "metratec_rfid.Plrm": [[12, 1, 1, "", "__init__"], [12, 1, 1, "", "activate_protected_mode"], [12, 1, 1, "", "activate_short_range_mode"], [12, 1, 1, "", "call_impinj_authentication_service"], [12, 1, 1, "", "check_antennas"], [12, 1, 1, "", "connect"], [12, 1, 1, "", "deactivate_protected_mode"], [12, 1, 1, "", "deactivate_short_range_mode"], [12, 1, 1, "", "disconnect"], [12, 1, 1, "", "enable_fire_empty_inventory"], [12, 1, 1, "", "enable_fire_empty_reports"], [12, 1, 1, "", "enable_input_events"], [12, 1, 1, "", "fetch_inventory"], [12, 1, 1, "", "get_antenna"], [12, 1, 1, "", "get_antenna_multiplex"], [12, 1, 1, "", "get_antenna_power"], [12, 1, 1, "", "get_antenna_powers"], [12, 1, 1, "", "get_channel_mask"], [12, 1, 1, "", "get_custom_impinj_settings"], [12, 1, 1, "", "get_inventory"], [12, 1, 1, "", "get_inventory_multi"], [12, 1, 1, "", "get_inventory_report"], [12, 1, 1, "", "get_inventory_settings"], [12, 1, 1, "", "get_logger"], [12, 1, 1, "", "get_mask"], [12, 1, 1, "", "get_name"], [12, 1, 1, "", "get_power"], [12, 1, 1, "", "get_q_value"], [12, 1, 1, "", "get_reader_info"], [12, 1, 1, "", "get_region"], [12, 1, 1, "", "get_rf_mode"], [12, 1, 1, "", "get_selected_session"], [12, 1, 1, "", "get_status"], [12, 1, 1, "", "get_tag_size"], [12, 1, 1, "", "get_tag_size_settings"], [12, 1, 1, "", "get_temperature"], [12, 1, 1, "", "is_connected"], [12, 1, 1, "", "is_running"], [12, 1, 1, "", "kill_tag"], [12, 1, 1, "", "lock_epc_memory"], [12, 1, 1, "", "lock_epc_memory_permament"], [12, 1, 1, "", "lock_tag"], [12, 1, 1, "", "lock_tag_permament"], [12, 1, 1, "", "lock_user_memory"], [12, 1, 1, "", "lock_user_memory_permament"], [12, 1, 1, "", "read_tag_data"], [12, 1, 1, "", "read_tag_tid"], [12, 1, 1, "", "read_tag_usr"], [12, 1, 1, "", "reset_channel_mask"], [12, 1, 1, "", "reset_mask"], [12, 1, 1, "", "send_custom_command"], [12, 1, 1, "", "send_select"], [12, 1, 1, "", "set_antenna"], [12, 1, 1, "", "set_antenna_multiplex"], [12, 1, 1, "", "set_antenna_power"], [12, 1, 1, "", "set_antenna_powers"], [12, 1, 1, "", "set_cb_input_changed"], [12, 1, 1, "", "set_cb_inventory"], [12, 1, 1, "", "set_cb_inventory_report"], [12, 1, 1, "", "set_cb_status"], [12, 1, 1, "", "set_channel_mask"], [12, 1, 1, "", "set_custom_impinj_settings"], [12, 1, 1, "", "set_heartbeat"], [12, 1, 1, "", "set_inventory_settings"], [12, 1, 1, "", "set_kill_password"], [12, 1, 1, "", "set_lock_password"], [12, 1, 1, "", "set_mask"], [12, 1, 1, "", "set_power"], [12, 1, 1, "", "set_q_value"], [12, 1, 1, "", "set_region"], [12, 1, 1, "", "set_rf_mode"], [12, 1, 1, "", "set_selected_session"], [12, 1, 1, "", "set_tag_size"], [12, 1, 1, "", "start_inventory"], [12, 1, 1, "", "start_inventory_multi"], [12, 1, 1, "", "start_inventory_report"], [12, 1, 1, "", "stop_inventory"], [12, 1, 1, "", "stop_inventory_multi"], [12, 1, 1, "", "stop_inventory_report"], [12, 1, 1, "", "unlock_epc_memory"], [12, 1, 1, "", "unlock_tag"], [12, 1, 1, "", "unlock_user_memory"], [12, 1, 1, "", "write_tag_data"], [12, 1, 1, "", "write_tag_epc"], [12, 1, 1, "", "write_tag_usr"]], "metratec_rfid.PulsarLR": [[13, 1, 1, "", "__init__"], [13, 1, 1, "", "activate_protected_mode"], [13, 1, 1, "", "activate_short_range_mode"], [13, 1, 1, "", "call_impinj_authentication_service"], [13, 1, 1, "", "check_antennas"], [13, 1, 1, "", "connect"], [13, 1, 1, "", "deactivate_protected_mode"], [13, 1, 1, "", "deactivate_short_range_mode"], [13, 1, 1, "", "disable_high_on_tag"], [13, 1, 1, "", "disconnect"], [13, 1, 1, "", "enable_fire_empty_inventory"], [13, 1, 1, "", "enable_fire_empty_reports"], [13, 1, 1, "", "enable_input_events"], [13, 1, 1, "", "fetch_inventory"], [13, 1, 1, "", "get_antenna"], [13, 1, 1, "", "get_antenna_multiplex"], [13, 1, 1, "", "get_antenna_power"], [13, 1, 1, "", "get_antenna_powers"], [13, 1, 1, "", "get_channel_mask"], [13, 1, 1, "", "get_custom_impinj_settings"], [13, 1, 1, "", "get_high_on_tag_output"], [13, 1, 1, "", "get_input"], [13, 1, 1, "", "get_inputs"], [13, 1, 1, "", "get_inventory"], [13, 1, 1, "", "get_inventory_multi"], [13, 1, 1, "", "get_inventory_report"], [13, 1, 1, "", "get_inventory_settings"], [13, 1, 1, "", "get_logger"], [13, 1, 1, "", "get_mask"], [13, 1, 1, "", "get_multiplexer"], [13, 1, 1, "", "get_name"], [13, 1, 1, "", "get_output"], [13, 1, 1, "", "get_outputs"], [13, 1, 1, "", "get_power"], [13, 1, 1, "", "get_q_value"], [13, 1, 1, "", "get_reader_info"], [13, 1, 1, "", "get_region"], [13, 1, 1, "", "get_rf_mode"], [13, 1, 1, "", "get_selected_session"], [13, 1, 1, "", "get_status"], [13, 1, 1, "", "get_tag_size"], [13, 1, 1, "", "get_tag_size_settings"], [13, 1, 1, "", "get_temperature"], [13, 1, 1, "", "is_connected"], [13, 1, 1, "", "is_running"], [13, 1, 1, "", "kill_tag"], [13, 1, 1, "", "lock_epc_memory"], [13, 1, 1, "", "lock_epc_memory_permament"], [13, 1, 1, "", "lock_tag"], [13, 1, 1, "", "lock_tag_permament"], [13, 1, 1, "", "lock_user_memory"], [13, 1, 1, "", "lock_user_memory_permament"], [13, 1, 1, "", "read_tag_data"], [13, 1, 1, "", "read_tag_tid"], [13, 1, 1, "", "read_tag_usr"], [13, 1, 1, "", "reset_channel_mask"], [13, 1, 1, "", "reset_mask"], [13, 1, 1, "", "send_custom_command"], [13, 1, 1, "", "send_select"], [13, 1, 1, "", "set_antenna"], [13, 1, 1, "", "set_antenna_multiplex"], [13, 1, 1, "", "set_antenna_power"], [13, 1, 1, "", "set_antenna_powers"], [13, 1, 1, "", "set_cb_input_changed"], [13, 1, 1, "", "set_cb_inventory"], [13, 1, 1, "", "set_cb_inventory_report"], [13, 1, 1, "", "set_cb_status"], [13, 1, 1, "", "set_channel_mask"], [13, 1, 1, "", "set_custom_impinj_settings"], [13, 1, 1, "", "set_heartbeat"], [13, 1, 1, "", "set_high_on_tag_output"], [13, 1, 1, "", "set_inventory_settings"], [13, 1, 1, "", "set_kill_password"], [13, 1, 1, "", "set_lock_password"], [13, 1, 1, "", "set_mask"], [13, 1, 1, "", "set_multiplexer"], [13, 1, 1, "", "set_output"], [13, 1, 1, "", "set_outputs"], [13, 1, 1, "", "set_power"], [13, 1, 1, "", "set_q_value"], [13, 1, 1, "", "set_region"], [13, 1, 1, "", "set_rf_mode"], [13, 1, 1, "", "set_selected_session"], [13, 1, 1, "", "set_tag_size"], [13, 1, 1, "", "start_inventory"], [13, 1, 1, "", "start_inventory_multi"], [13, 1, 1, "", "start_inventory_report"], [13, 1, 1, "", "stop_inventory"], [13, 1, 1, "", "stop_inventory_multi"], [13, 1, 1, "", "stop_inventory_report"], [13, 1, 1, "", "unlock_epc_memory"], [13, 1, 1, "", "unlock_tag"], [13, 1, 1, "", "unlock_user_memory"], [13, 1, 1, "", "write_tag_data"], [13, 1, 1, "", "write_tag_epc"], [13, 1, 1, "", "write_tag_usr"]], "metratec_rfid.PulsarMX": [[14, 1, 1, "", "__init__"], [14, 1, 1, "", "connect"], [14, 1, 1, "", "disable_access_password"], [14, 1, 1, "", "disable_rfid_field"], [14, 1, 1, "", "disconnect"], [14, 1, 1, "", "enable_antenna_report"], [14, 1, 1, "", "enable_fire_empty_inventory"], [14, 1, 1, "", "enable_input_events"], [14, 1, 1, "", "fetch_inventory"], [14, 1, 1, "", "get_antenna"], [14, 1, 1, "", "get_antenna_multiplex"], [14, 1, 1, "", "get_input"], [14, 1, 1, "", "get_inputs"], [14, 1, 1, "", "get_inventory"], [14, 1, 1, "", "get_inventory_multi"], [14, 1, 1, "", "get_logger"], [14, 1, 1, "", "get_name"], [14, 1, 1, "", "get_output"], [14, 1, 1, "", "get_outputs"], [14, 1, 1, "", "get_power"], [14, 1, 1, "", "get_profile_parameter"], [14, 1, 1, "", "get_reader_info"], [14, 1, 1, "", "get_status"], [14, 1, 1, "", "is_connected"], [14, 1, 1, "", "is_running"], [14, 1, 1, "", "kill_tag"], [14, 1, 1, "", "load_access_password"], [14, 1, 1, "", "load_kill_password"], [14, 1, 1, "", "lock_tag_access_password"], [14, 1, 1, "", "lock_tag_data"], [14, 1, 1, "", "lock_tag_epc"], [14, 1, 1, "", "lock_tag_kill_password"], [14, 1, 1, "", "lock_tag_memory"], [14, 1, 1, "", "read_tag_access_password"], [14, 1, 1, "", "read_tag_data"], [14, 1, 1, "", "read_tag_kill_password"], [14, 1, 1, "", "read_tag_memory"], [14, 1, 1, "", "read_tag_tid"], [14, 1, 1, "", "reset"], [14, 1, 1, "", "reset_mask"], [14, 1, 1, "", "save_access_password"], [14, 1, 1, "", "save_kill_password"], [14, 1, 1, "", "send_custom_command"], [14, 1, 1, "", "set_access_password"], [14, 1, 1, "", "set_antenna"], [14, 1, 1, "", "set_antenna_multiplex"], [14, 1, 1, "", "set_antenna_outputs"], [14, 1, 1, "", "set_cb_input_changed"], [14, 1, 1, "", "set_cb_inventory"], [14, 1, 1, "", "set_cb_status"], [14, 1, 1, "", "set_epc_mask"], [14, 1, 1, "", "set_heartbeat"], [14, 1, 1, "", "set_input_debounce_time"], [14, 1, 1, "", "set_kill_password"], [14, 1, 1, "", "set_mask"], [14, 1, 1, "", "set_output"], [14, 1, 1, "", "set_outputs"], [14, 1, 1, "", "set_power"], [14, 1, 1, "", "set_profile_parameter"], [14, 1, 1, "", "set_region"], [14, 1, 1, "", "set_tag_size"], [14, 1, 1, "", "start_inventory"], [14, 1, 1, "", "start_inventory_multi"], [14, 1, 1, "", "stop_inventory"], [14, 1, 1, "", "stop_inventory_multi"], [14, 1, 1, "", "write_tag_access_password"], [14, 1, 1, "", "write_tag_data"], [14, 1, 1, "", "write_tag_epc"], [14, 1, 1, "", "write_tag_kill_password"], [14, 1, 1, "", "write_tag_memory"]], "metratec_rfid.QRG2": [[15, 1, 1, "", "__init__"], [15, 1, 1, "", "activate_protected_mode"], [15, 1, 1, "", "activate_short_range_mode"], [15, 1, 1, "", "call_impinj_authentication_service"], [15, 1, 1, "", "connect"], [15, 1, 1, "", "deactivate_protected_mode"], [15, 1, 1, "", "deactivate_short_range_mode"], [15, 1, 1, "", "disconnect"], [15, 1, 1, "", "enable_fire_empty_inventory"], [15, 1, 1, "", "enable_fire_empty_reports"], [15, 1, 1, "", "fetch_inventory"], [15, 1, 1, "", "get_channel_mask"], [15, 1, 1, "", "get_custom_impinj_settings"], [15, 1, 1, "", "get_inventory"], [15, 1, 1, "", "get_inventory_report"], [15, 1, 1, "", "get_inventory_settings"], [15, 1, 1, "", "get_logger"], [15, 1, 1, "", "get_mask"], [15, 1, 1, "", "get_name"], [15, 1, 1, "", "get_power"], [15, 1, 1, "", "get_q_value"], [15, 1, 1, "", "get_reader_info"], [15, 1, 1, "", "get_region"], [15, 1, 1, "", "get_rf_mode"], [15, 1, 1, "", "get_selected_session"], [15, 1, 1, "", "get_status"], [15, 1, 1, "", "get_tag_size"], [15, 1, 1, "", "get_tag_size_settings"], [15, 1, 1, "", "get_temperature"], [15, 1, 1, "", "is_connected"], [15, 1, 1, "", "is_running"], [15, 1, 1, "", "kill_tag"], [15, 1, 1, "", "lock_epc_memory"], [15, 1, 1, "", "lock_epc_memory_permament"], [15, 1, 1, "", "lock_tag"], [15, 1, 1, "", "lock_tag_permament"], [15, 1, 1, "", "lock_user_memory"], [15, 1, 1, "", "lock_user_memory_permament"], [15, 1, 1, "", "read_tag_data"], [15, 1, 1, "", "read_tag_tid"], [15, 1, 1, "", "read_tag_usr"], [15, 1, 1, "", "reset_channel_mask"], [15, 1, 1, "", "reset_mask"], [15, 1, 1, "", "send_custom_command"], [15, 1, 1, "", "send_select"], [15, 1, 1, "", "set_cb_inventory"], [15, 1, 1, "", "set_cb_inventory_report"], [15, 1, 1, "", "set_cb_status"], [15, 1, 1, "", "set_channel_mask"], [15, 1, 1, "", "set_custom_impinj_settings"], [15, 1, 1, "", "set_heartbeat"], [15, 1, 1, "", "set_inventory_settings"], [15, 1, 1, "", "set_kill_password"], [15, 1, 1, "", "set_lock_password"], [15, 1, 1, "", "set_mask"], [15, 1, 1, "", "set_power"], [15, 1, 1, "", "set_q_value"], [15, 1, 1, "", "set_region"], [15, 1, 1, "", "set_rf_mode"], [15, 1, 1, "", "set_selected_session"], [15, 1, 1, "", "set_tag_size"], [15, 1, 1, "", "start_inventory"], [15, 1, 1, "", "start_inventory_report"], [15, 1, 1, "", "stop_inventory"], [15, 1, 1, "", "stop_inventory_report"], [15, 1, 1, "", "unlock_epc_memory"], [15, 1, 1, "", "unlock_tag"], [15, 1, 1, "", "unlock_user_memory"], [15, 1, 1, "", "write_tag_data"], [15, 1, 1, "", "write_tag_epc"], [15, 1, 1, "", "write_tag_usr"]], "metratec_rfid.QRG2FCC": [[15, 1, 1, "", "__init__"]], "metratec_rfid.QrNfc": [[5, 1, 1, "", "__init__"], [5, 1, 1, "", "authenticate_mifare_classic_block"], [5, 1, 1, "", "authenticate_ntag"], [5, 1, 1, "", "check_ndef_state"], [5, 1, 1, "", "config_rf_interface"], [5, 1, 1, "", "connect"], [5, 1, 1, "", "decrement_mifare_classic_value"], [5, 1, 1, "", "deselect_transponder"], [5, 1, 1, "", "detect_tag_types"], [5, 1, 1, "", "disable_hid_mode"], [5, 1, 1, "", "disable_rf_interface"], [5, 1, 1, "", "disconnect"], [5, 1, 1, "", "enable_fire_empty_inventory"], [5, 1, 1, "", "enable_rf_interface"], [5, 1, 1, "", "fetch_inventory"], [5, 1, 1, "", "format_ndef_tag"], [5, 1, 1, "", "get_afi"], [5, 1, 1, "", "get_hid_layout"], [5, 1, 1, "", "get_hid_mode"], [5, 1, 1, "", "get_inventory"], [5, 1, 1, "", "get_inventory_settings"], [5, 1, 1, "", "get_logger"], [5, 1, 1, "", "get_mifare_classic_access_bits"], [5, 1, 1, "", "get_mode"], [5, 1, 1, "", "get_name"], [5, 1, 1, "", "get_reader_info"], [5, 1, 1, "", "get_selected_transponder"], [5, 1, 1, "", "get_status"], [5, 1, 1, "", "get_temperature"], [5, 1, 1, "", "increment_mifare_classic_value"], [5, 1, 1, "", "is_connected"], [5, 1, 1, "", "is_ntag_config_locked"], [5, 1, 1, "", "is_running"], [5, 1, 1, "", "lock_ndef_tag"], [5, 1, 1, "", "lock_ntag_block_lock"], [5, 1, 1, "", "lock_ntag_config"], [5, 1, 1, "", "lock_ntag_page"], [5, 1, 1, "", "lock_tag_afi"], [5, 1, 1, "", "lock_tag_dsfid"], [5, 1, 1, "", "read_data"], [5, 1, 1, "", "read_data_with_option_flag"], [5, 1, 1, "", "read_mifare_classic_value_block"], [5, 1, 1, "", "read_ndef_records"], [5, 1, 1, "", "read_ntag_access_config"], [5, 1, 1, "", "read_ntag_counter"], [5, 1, 1, "", "read_ntag_counter_config"], [5, 1, 1, "", "read_ntag_mirror_config"], [5, 1, 1, "", "read_ntag_modulation_config"], [5, 1, 1, "", "restore_mifare_classic_value"], [5, 1, 1, "", "select_transponder"], [5, 1, 1, "", "send_custom_command"], [5, 1, 1, "", "send_read_request_iso15693"], [5, 1, 1, "", "send_request_iso14a"], [5, 1, 1, "", "send_write_request_iso15693"], [5, 1, 1, "", "set_afi"], [5, 1, 1, "", "set_authenticate_ntag"], [5, 1, 1, "", "set_cb_inventory"], [5, 1, 1, "", "set_cb_status"], [5, 1, 1, "", "set_heartbeat"], [5, 1, 1, "", "set_hid_layout"], [5, 1, 1, "", "set_hid_mode"], [5, 1, 1, "", "set_inventory_settings"], [5, 1, 1, "", "set_mifare_classic_keys"], [5, 1, 1, "", "set_mode"], [5, 1, 1, "", "start_inventory"], [5, 1, 1, "", "stop_inventory"], [5, 1, 1, "", "store_mifare_classic_authenticate_key"], [5, 1, 1, "", "transfer_mifare_classic_value"], [5, 1, 1, "", "write_data"], [5, 1, 1, "", "write_mifare_classic_value_block"], [5, 1, 1, "", "write_ndef_records"], [5, 1, 1, "", "write_ntag_access_config"], [5, 1, 1, "", "write_ntag_counter_config"], [5, 1, 1, "", "write_ntag_mirror_config"], [5, 1, 1, "", "write_ntag_modulation_config"], [5, 1, 1, "", "write_tag_afi"], [5, 1, 1, "", "write_tag_dsfid"]], "metratec_rfid.QuasarLR": [[6, 1, 1, "", "__init__"], [6, 1, 1, "", "connect"], [6, 1, 1, "", "disable_rf_interface"], [6, 1, 1, "", "disconnect"], [6, 1, 1, "", "enable_antenna_report"], [6, 1, 1, "", "enable_fire_empty_inventory"], [6, 1, 1, "", "enable_input_events"], [6, 1, 1, "", "enable_rf_interface"], [6, 1, 1, "", "fetch_inventory"], [6, 1, 1, "", "get_antenna"], [6, 1, 1, "", "get_antenna_multiplex"], [6, 1, 1, "", "get_input"], [6, 1, 1, "", "get_inputs"], [6, 1, 1, "", "get_inventory"], [6, 1, 1, "", "get_inventory_multi"], [6, 1, 1, "", "get_logger"], [6, 1, 1, "", "get_name"], [6, 1, 1, "", "get_output"], [6, 1, 1, "", "get_outputs"], [6, 1, 1, "", "get_reader_info"], [6, 1, 1, "", "get_status"], [6, 1, 1, "", "is_connected"], [6, 1, 1, "", "is_running"], [6, 1, 1, "", "lock_tag_afi"], [6, 1, 1, "", "lock_tag_dsfid"], [6, 1, 1, "", "read_tag_data"], [6, 1, 1, "", "read_tag_information"], [6, 1, 1, "", "reset"], [6, 1, 1, "", "send_custom_command"], [6, 1, 1, "", "set_antenna"], [6, 1, 1, "", "set_antenna_multiplex"], [6, 1, 1, "", "set_antenna_outputs"], [6, 1, 1, "", "set_cb_input_changed"], [6, 1, 1, "", "set_cb_inventory"], [6, 1, 1, "", "set_cb_request"], [6, 1, 1, "", "set_cb_status"], [6, 1, 1, "", "set_heartbeat"], [6, 1, 1, "", "set_mode"], [6, 1, 1, "", "set_output"], [6, 1, 1, "", "set_outputs"], [6, 1, 1, "", "set_power"], [6, 1, 1, "", "start_inventory"], [6, 1, 1, "", "start_inventory_multi"], [6, 1, 1, "", "stop_inventory"], [6, 1, 1, "", "stop_inventory_multi"], [6, 1, 1, "", "write_tag_afi"], [6, 1, 1, "", "write_tag_data"], [6, 1, 1, "", "write_tag_dsfid"]], "metratec_rfid.QuasarMX": [[7, 1, 1, "", "__init__"], [7, 1, 1, "", "connect"], [7, 1, 1, "", "disable_rf_interface"], [7, 1, 1, "", "disconnect"], [7, 1, 1, "", "enable_antenna_report"], [7, 1, 1, "", "enable_fire_empty_inventory"], [7, 1, 1, "", "enable_input_events"], [7, 1, 1, "", "enable_rf_interface"], [7, 1, 1, "", "fetch_inventory"], [7, 1, 1, "", "get_antenna"], [7, 1, 1, "", "get_antenna_multiplex"], [7, 1, 1, "", "get_input"], [7, 1, 1, "", "get_inputs"], [7, 1, 1, "", "get_inventory"], [7, 1, 1, "", "get_inventory_multi"], [7, 1, 1, "", "get_logger"], [7, 1, 1, "", "get_name"], [7, 1, 1, "", "get_output"], [7, 1, 1, "", "get_outputs"], [7, 1, 1, "", "get_reader_info"], [7, 1, 1, "", "get_status"], [7, 1, 1, "", "is_connected"], [7, 1, 1, "", "is_running"], [7, 1, 1, "", "lock_tag_afi"], [7, 1, 1, "", "lock_tag_dsfid"], [7, 1, 1, "", "read_tag_data"], [7, 1, 1, "", "read_tag_information"], [7, 1, 1, "", "reset"], [7, 1, 1, "", "send_custom_command"], [7, 1, 1, "", "set_antenna"], [7, 1, 1, "", "set_antenna_multiplex"], [7, 1, 1, "", "set_antenna_outputs"], [7, 1, 1, "", "set_cb_input_changed"], [7, 1, 1, "", "set_cb_inventory"], [7, 1, 1, "", "set_cb_request"], [7, 1, 1, "", "set_cb_status"], [7, 1, 1, "", "set_heartbeat"], [7, 1, 1, "", "set_mode"], [7, 1, 1, "", "set_output"], [7, 1, 1, "", "set_outputs"], [7, 1, 1, "", "set_power"], [7, 1, 1, "", "start_inventory"], [7, 1, 1, "", "start_inventory_multi"], [7, 1, 1, "", "stop_inventory"], [7, 1, 1, "", "stop_inventory_multi"], [7, 1, 1, "", "write_tag_afi"], [7, 1, 1, "", "write_tag_data"], [7, 1, 1, "", "write_tag_dsfid"]], "metratec_rfid.UhfTag": [[8, 1, 1, "", "get_antenna"], [8, 1, 1, "", "get_data"], [8, 1, 1, "", "get_epc"], [8, 1, 1, "", "get_error_message"], [8, 1, 1, "", "get_first_seen"], [8, 1, 1, "", "get_id"], [8, 1, 1, "", "get_last_seen"], [8, 1, 1, "", "get_rssi"], [8, 1, 1, "", "get_seen_count"], [8, 1, 1, "", "get_tid"], [8, 1, 1, "", "has_error"]], "metratec_rfid.connection.serial_connection": [[1, 0, 1, "", "SerialConnection"]], "metratec_rfid.connection.serial_connection.SerialConnection": [[1, 1, 1, "", "__init__"]], "metratec_rfid.connection.socket_connection": [[1, 0, 1, "", "SocketConnection"]], "metratec_rfid.connection.socket_connection.SocketConnection": [[1, 1, 1, "", "__init__"]]}, "objnames": {"0": ["py", "class", "Python class"], "1": ["py", "method", "Python method"], "2": ["py", "function", "Python function"]}, "objtypes": {"0": "py:class", "1": "py:method", "2": "py:function"}, "terms": {"": [3, 9, 10, 11, 12, 13, 14, 15, 23], "0": [2, 3, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 24], "00": [2, 3, 5, 6, 7], "00000000": [9, 14], "001": [3, 5], "01": [10, 11, 12, 13, 15], "02": [2, 6, 7], "04": 18, "05": [9, 14], "06": 18, "07": 18, "08": 18, "09": 18, "1": [1, 2, 3, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 24], "10": [2, 3, 5, 6, 7, 9, 10, 11, 12, 13, 15, 18, 19, 21, 24], "100": [2, 3, 5, 6, 7, 11, 13, 14], "10000": [11, 13], "10001": [6, 7, 13, 14], "11": 18, "115200": 1, "12": [18, 24], "12345678": 24, "12m": 13, "13": [3, 5], "14a": [2, 3, 5, 6, 7], "14b": [2, 6, 7], "15": [3, 5], "153": 24, "156": [2, 6, 7], "15693": [2, 6, 7], "16": [3, 5, 18], "168": 24, "17": 24, "19": 18, "192": 24, "2": [2, 3, 5, 6, 7, 9, 10, 11, 12, 13, 14, 15, 21, 24], "200": [2, 6, 7], "2023": [18, 22], "2024": 18, "21": 11, "239": 24, "25": [10, 11, 12, 13, 15], "250": [2, 6, 7], "27": 11, "29": 18, "3": [3, 5, 9, 10, 11, 12, 13, 14, 15, 19, 20, 21], "30": [9, 11, 12, 13, 18], "32": [9, 10, 11, 12, 13, 14, 15], "32bit": [9, 14], "4": [3, 5, 6, 7, 9, 10, 11, 12, 13, 14, 15, 24], "40": 6, "4000": [2, 6, 7], "5": [2, 3, 5, 6, 7, 9, 10, 11, 12, 13, 14, 15, 24], "50": [10, 11, 15], "500": [2, 6, 7], "5000": [3, 5], "56": [3, 5], "6": [3, 5, 10, 11, 12, 13, 15], "60": [2, 3, 5, 6, 7, 9, 10, 11, 12, 13, 14, 15], "60cm": 6, "64": [3, 10, 11, 12, 13, 15], "7": [9, 10, 11, 12, 13, 14, 15], "750": 24, "8": [1, 9, 10, 11, 12, 13, 14, 15], "80": [10, 15], "868": [9, 10, 15], "9": [10, 11, 15], "902": [10, 15], "928": [10, 15], "A": [2, 3, 5, 6, 7, 9, 10, 11, 12, 13, 14, 15, 22], "AND": 22, "AS": 22, "AT": [3, 5, 10, 11, 12, 13, 15, 23], "As": [9, 24], "BE": 22, "BUT": 22, "By": [2, 3, 5, 6, 7, 9, 10, 11, 12, 13, 14, 15], "FOR": 22, "For": [2, 3, 5, 6, 7, 9, 10, 11, 12, 13, 14, 15, 24], "IN": 22, "If": [2, 3, 5, 6, 7, 9, 10, 11, 12, 13, 14, 15, 20, 24], "In": [2, 3, 5, 6, 7, 9, 10, 11, 12, 13, 14, 15, 21], "It": [8, 9, 10, 11, 12, 13, 14, 15, 19, 21], "Its": [10, 15], "NO": 22, "NOT": [10, 11, 12, 13, 15, 22], "Not": [10, 11, 12, 13, 15], "OF": 22, "OR": 22, "On": [11, 13], "THE": 22, "TO": 22, "The": [1, 2, 3, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 17, 19, 20, 22, 23, 24], "There": [3, 5, 8, 24], "These": [8, 24], "To": [3, 5, 9, 14, 21, 24], "WITH": 22, "With": [3, 5, 14, 19], "__class__": 23, "__init__": [1, 2, 3, 5, 6, 7, 9, 10, 11, 12, 13, 14, 15], "__main__": 24, "__name__": [23, 24], "_type_": [1, 10, 11, 12, 13, 15], "ab01": [10, 11, 12, 13, 15], "abcd": [10, 11, 12, 13, 15], "abcd0123": 24, "about": [2, 3, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 23, 24], "abov": [10, 11, 12, 13, 15, 22], "absolut": [10, 11, 12, 13, 15], "access": [2, 3, 5, 9, 10, 11, 12, 13, 14, 15, 18], "access_bit": [3, 5], "accord": [2, 6, 7, 10, 11, 12, 13, 14, 15, 23], "acknowledg": [3, 5], "acp": [9, 14], "acsii": 18, "action": 22, "activ": [6, 7, 9, 10, 11, 12, 13, 14, 15, 21], "activate_protected_mod": [10, 11, 12, 13, 15], "activate_short_range_mod": [10, 11, 12, 13, 15], "ad": [3, 10, 11, 12, 13, 15, 18], "adapt": [10, 11, 12, 13, 15, 23], "add": [3, 5], "addit": [3, 5], "addition": 8, "address": [1, 3, 5, 7, 13], "affect": [12, 13], "afi": [2, 3, 5, 6, 7, 8], "after": [3, 5, 24], "again": [3, 5, 24], "alik": [3, 5], "all": [0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 19, 20, 22, 23, 24], "allow": [2, 6, 7, 9, 10, 11, 12, 13, 15, 24], "alon": 17, "alphabet": 20, "alreadi": 21, "also": [2, 3, 5, 6, 7, 9, 10, 11, 12, 13, 14, 15, 18, 24], "altern": [10, 11, 12, 13, 15, 21, 24], "alwai": [3, 10], "an": [2, 3, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 20, 22, 23, 24], "ani": [2, 3, 5, 6, 7, 9, 10, 11, 12, 13, 14, 15, 17, 22, 24], "anoth": 24, "answer": [2, 6, 7, 10, 11, 12, 13, 15], "antenna": [2, 3, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 24], "antenna_port": [11, 13], "antenna_pow": [11, 12, 13], "anti": [2, 3, 5, 6, 7, 9, 10, 11, 12, 13, 14, 15], "anyth": [2, 3, 5, 6, 7, 9, 10, 11, 12, 13, 14, 15], "api": [23, 24], "append": [3, 5, 10, 11, 12, 13, 15], "applic": [2, 3, 5, 6, 7, 8, 9, 10, 13, 14, 15], "appropri": 23, "ar": [2, 3, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 20, 23, 24], "arbitrari": [2, 3, 5, 6, 7, 9, 10, 11, 12, 13, 14, 15], "argument": [2, 3, 5, 6, 7, 9, 10, 11, 12, 13, 14, 15], "aris": 22, "around": [10, 11, 12, 13, 15], "arrai": [2, 3, 5, 6, 7, 9, 10, 11, 12, 13, 14, 15], "ascii": [2, 6, 7, 9, 14, 18, 23], "assert": [10, 11, 12, 13, 15], "associ": 22, "assum": [10, 11, 12, 13, 15, 21], "async": [2, 3, 5, 6, 7, 9, 10, 11, 12, 13, 14, 15, 17, 23, 24], "asyncio": [19, 20, 23, 24], "atqa": 8, "attempt": [2, 3, 5, 6, 7, 9, 10, 11, 12, 13, 14, 15], "attent": [9, 14, 23], "attribut": [6, 7, 14], "authent": [3, 5, 9, 10, 11, 12, 13, 14, 15], "authenticate_mifare_classic_block": [3, 5], "authenticate_ntag": [3, 5], "author": 22, "auto": [3, 5, 10, 11, 12, 13, 15], "automat": [0, 2, 3, 5, 6, 7, 9, 10, 11, 12, 13, 14, 15, 18, 20, 24], "avail": [2, 3, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 18, 24], "await": [23, 24], "b": [3, 5, 10, 11, 12, 13, 15], "background": 24, "backup": [3, 5], "backup_address": [3, 5], "bank": [9, 10, 11, 12, 13, 14, 15], "base": [3, 5, 11, 20], "basic": [3, 8, 10], "bat": 21, "baud_rat": 1, "baudrat": 1, "becaus": [10, 11, 12, 13, 15], "been": [2, 3, 5, 6, 7, 9, 10, 11, 12, 13, 14, 15, 24], "befor": [3, 5, 9, 14], "begin": [9, 14], "being": [10, 11, 12, 13, 15], "belt": [6, 7, 14], "between": [2, 10, 11, 12, 13, 14, 15, 24], "big": [9, 14], "bin": 21, "bit": [1, 3, 5, 9, 10, 11, 12, 13, 14, 15], "bit_length": [9, 10, 11, 12, 13, 14, 15], "block": [2, 3, 5, 6, 7, 8, 9, 14, 24], "block_numb": [2, 6, 7, 24], "blue": [11, 13], "bool": [2, 3, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 17, 24], "boolean": [6, 7, 12, 13, 14], "both": 19, "bring": 11, "bug": 18, "bugfix": 18, "build": [13, 21], "busi": [2, 3, 5, 6, 7, 9, 10, 11, 12, 13, 14, 15, 24], "byte": [1, 3, 5, 8, 9, 10, 11, 12, 13, 14, 15, 24], "byte_s": 1, "c": [10, 15, 22], "c4": [3, 10], "cabinet": 7, "cabl": [6, 7, 10, 14, 15], "call": [2, 3, 5, 6, 7, 9, 10, 11, 12, 13, 14, 15, 24], "call_impinj_authentication_servic": [10, 11, 12, 13, 15], "callabl": [2, 3, 5, 6, 7, 9, 10, 11, 12, 13, 14, 15], "callback": [2, 3, 5, 6, 7, 9, 10, 11, 12, 13, 14, 15, 24], "can": [2, 3, 5, 6, 7, 9, 10, 11, 12, 13, 14, 15, 19, 23, 24], "cannot": 17, "capit": [3, 10], "card": [3, 5], "carrier": [2, 3, 5, 6, 7], "case": [2, 3, 5, 6, 7, 9, 10, 11, 12, 13, 14, 15, 21], "caus": [2, 3, 5, 6, 7, 9, 10, 11, 12, 13, 14, 15, 24], "cd": 21, "celsiu": [3, 5, 10, 11, 12, 13, 15], "certain": [12, 13], "challeng": [10, 11, 12, 13, 15], "chang": [2, 3, 5, 6, 7, 9, 10, 11, 12, 13, 14, 15, 21, 23, 24], "changelog": 20, "channel": [10, 11, 12, 13, 15, 18], "chapter": 20, "charact": [3, 5, 9, 14], "charg": 22, "check": [2, 3, 5, 6, 7, 9, 10, 11, 12, 13, 14, 15, 18, 21], "check_antenna": [12, 13], "check_ndef_st": [3, 5], "checkout": 21, "chosen": [6, 7, 10, 11, 12, 13, 14, 15], "claim": 22, "class": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 20, 23], "classic": [3, 5], "clean": 24, "clone": 21, "cm": [2, 5, 9, 10, 11, 15], "code": [9, 10, 11, 12, 13, 14, 15, 18, 23, 24], "collect": 24, "collis": [2, 3, 5, 6, 7, 9, 10, 11, 12, 13, 14, 15], "com": 21, "com1": 24, "com41": 23, "command": [2, 3, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 17, 18, 24], "commun": [2, 6, 7, 10, 11, 12, 13, 15], "compact": [2, 5, 10, 15], "compat": [10, 11, 12, 13, 15], "complet": [9, 10, 11, 12, 13, 14, 15, 20], "complex": 13, "comput": [2, 9], "condit": [22, 23], "config_rf_interfac": [3, 5], "configur": [2, 3, 5, 9, 10, 11, 12, 13, 14, 15, 24], "confirm": [3, 5], "connect": [0, 2, 3, 5, 6, 7, 9, 10, 11, 12, 13, 14, 15, 17, 20, 22, 23, 24], "consid": 21, "consol": 24, "contact": [10, 11, 12, 13, 15], "contain": [2, 3, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 20, 23, 24], "content": [3, 5], "continu": [2, 3, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 20], "contract": 22, "control": [2, 7, 10, 11, 12, 13, 15, 19], "conveyor": [6, 7, 14], "copi": 22, "copyright": 22, "core": [0, 4, 16], "correct": [3, 5, 9, 14, 24], "correctli": [2, 3, 5, 6, 7, 9, 10, 11, 12, 13, 14, 15, 18], "correspond": [2, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15], "cost": 14, "count": 8, "counter": [3, 5], "counter_en": [3, 5], "cover": [0, 4, 16], "cpu": [3, 5, 10, 11, 12, 13, 15], "creat": [1, 2, 3, 5, 6, 7, 9, 10, 11, 12, 13, 14, 15, 20, 23, 24], "current": [2, 3, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15], "custom": [2, 10, 11, 12, 13, 15, 24], "d5": [3, 10], "damag": 22, "data": [2, 3, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 18, 20], "date": [10, 11, 12, 13, 15, 18], "dbm": [8, 9, 10, 11, 12, 13, 14, 15, 24], "de": [10, 11, 12, 13, 15], "deactiv": [10, 11, 12, 13, 15, 21], "deactivate_protected_mod": [10, 11, 12, 13, 15], "deactivate_short_range_mod": [10, 11, 12, 13, 15], "deal": 22, "debounc": [9, 14], "debounce_tim": [9, 14], "debug": [10, 15, 17], "decrement": [3, 5], "decrement_mifare_classic_valu": [3, 5], "def": [2, 3, 5, 6, 7, 9, 10, 11, 12, 13, 14, 15, 23, 24], "default": [1, 2, 3, 5, 6, 7, 9, 10, 11, 12, 13, 14, 15, 17], "defin": [2, 3, 5, 6, 7, 9, 10, 11, 12, 13, 14, 15, 24], "degre": [3, 5, 10, 11, 12, 13, 15], "deliv": 11, "demand": [6, 7, 24], "denot": [3, 10], "depend": [2, 3, 5, 8, 9, 10, 11, 12, 13, 15, 24], "depth": [2, 3, 5, 6, 7], "descript": [2, 6, 7, 9, 10, 11, 12, 13, 14, 15, 18], "deselect": [3, 5], "deselect_transpond": [3, 5], "desfir": [3, 5], "design": [2, 9, 10, 15], "deskid": [0, 4, 6, 7, 8, 15, 16, 18, 19, 20, 24], "deskidiso": [2, 23, 24], "deskidnfc": [3, 23], "deskiduhf": [9, 23], "deskiduhfv2": [10, 23], "deskiduhfv2fcc": [10, 23], "desktop": [0, 4, 15, 16, 20], "detail": [3, 5, 9, 10, 11, 12, 13, 14, 15, 20, 23, 24], "detect": [0, 3, 5, 18, 20], "detect_read": [17, 23], "detect_tag_typ": [3, 5], "determin": [2, 3, 5, 6, 7, 9, 10, 11, 12, 13, 14, 15], "dev": [23, 24], "develop": 11, "devic": [2, 3, 5, 6, 7, 10, 11, 12, 13, 15, 17, 18, 23, 24], "dict": [2, 3, 5, 6, 7, 9, 10, 11, 12, 13, 14, 15, 17], "dictat": [12, 13], "dictionari": [2, 3, 5, 6, 7, 9, 10, 11, 12, 13, 14, 15, 17, 24], "differ": [2, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 24], "difficult": 6, "digit": [10, 11, 12, 13, 15], "directli": [6, 7, 9, 10, 11, 12, 13, 15, 21], "directori": 21, "disabl": [2, 3, 5, 6, 7, 9, 10, 11, 12, 13, 14, 15], "disable_access_password": [9, 14], "disable_hid_mod": [3, 5], "disable_high_on_tag": [11, 13], "disable_rf_interfac": [2, 3, 5, 6, 7], "disable_rfid_field": [9, 14], "disable_start_up_sound": [3, 10], "disconnect": [2, 3, 5, 6, 7, 9, 10, 11, 12, 13, 14, 15, 23, 24], "distanc": 13, "distribut": 22, "do": [10, 11, 12, 13, 15, 22, 24], "document": [0, 4, 16, 20, 22], "doe": [10, 11, 12, 13, 15, 17], "don": [9, 14], "doubl": [2, 3, 5, 6, 7], "down": 24, "drastic": [10, 11, 12, 13, 15], "ds4": [3, 10], "dsfid": [2, 3, 5, 6, 7, 8], "durat": [10, 11, 12, 13, 15], "dure": [2, 3, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 24], "dwarf15": [2, 6, 7], "dwarfg2": [0, 16, 20], "dwarfg2miniv2": [11, 23], "dwarfg2v2": [11, 23], "dwarfg2xrv2": [11, 23], "e": [2, 3, 5, 6, 9, 10, 11, 12, 13, 14, 15, 23, 24], "e2804704": 24, "e310": [10, 11, 15], "each": [2, 3, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 23, 24], "easi": 9, "easier": [10, 11, 12, 13, 15], "easili": [9, 13], "eb4": [3, 10], "econom": [9, 14], "effect": [3, 5], "eightbit": 1, "either": [3, 5], "electr": 7, "electron": [10, 11, 12, 13, 15], "element": 20, "els": 24, "embed": [0, 4, 11, 16, 20], "empti": [2, 3, 5, 6, 7, 9, 10, 11, 12, 13, 14, 15], "en": [2, 3, 5, 6, 7, 9, 10, 11, 12, 13, 14, 15], "enabl": [2, 3, 5, 6, 7, 9, 10, 11, 12, 13, 14, 15, 24], "enable_antenna_report": [6, 7, 14], "enable_count": [3, 5], "enable_fire_empty_inventori": [2, 3, 5, 6, 7, 9, 10, 11, 12, 13, 14, 15], "enable_fire_empty_report": [10, 11, 12, 13, 15], "enable_input_ev": [2, 6, 7, 9, 12, 13, 14, 24], "enable_password": [3, 5], "enable_rf_interfac": [2, 3, 5, 6, 7], "enable_start_up_sound": [3, 10], "enable_tag_detail": [3, 5], "encod": [3, 10, 11, 12, 13, 15], "encount": 8, "end_tim": 24, "ensur": 24, "entri": [10, 11, 12, 13, 15], "enum": [2, 3, 5, 6, 7, 9, 10, 11, 12, 13, 14, 15, 18, 24], "env": 21, "environ": [2, 20], "eol": [3, 5], "epc": [8, 9, 10, 11, 12, 13, 14, 15, 18, 24], "epc_mask": [9, 10, 11, 12, 13, 14, 15], "err": 24, "error": [2, 3, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 18, 20], "error_messag": 8, "especi": [2, 9, 24], "establish": [1, 17], "et": [9, 14], "ethernet": [6, 7, 14], "etsi": [11, 12, 13], "eu": [9, 10, 15], "even": [2, 3, 5, 6, 7, 9, 10, 11, 12, 13, 14, 15], "event": [2, 3, 5, 6, 7, 9, 10, 11, 12, 13, 14, 15, 20, 22], "everi": [2, 3, 8, 10, 15, 23, 24], "exampl": [2, 3, 5, 6, 7, 9, 10, 11, 12, 13, 14, 15, 18, 20, 21], "except": [10, 15, 18, 23, 24], "execut": [3, 5, 8, 9, 12, 13, 14, 24], "expect": [9, 10, 11, 12, 13, 14, 15, 18], "explan": [3, 5], "expon": [10, 11, 12, 13, 15], "express": [2, 3, 5, 6, 7, 9, 10, 11, 12, 13, 14, 15, 17, 22], "extens": [6, 7], "extern": [11, 13], "f": [23, 24], "failur": [2, 3, 5, 6, 7, 9, 10, 11, 12, 13, 14, 15], "fals": [2, 3, 5, 6, 7, 9, 10, 11, 12, 13, 14, 15, 17], "famili": [2, 3, 5, 6, 7, 8], "fast_id": [10, 11, 12, 13, 15], "fast_start": [10, 11, 12, 13, 15], "faster": [2, 3, 5, 6, 7, 9, 14], "fastid": 11, "fcc": [9, 11, 12, 13, 14], "featur": [2, 6, 7, 10, 11, 12, 13, 15, 18, 24], "feedback": [3, 10], "fetch": 24, "fetch_inventori": [2, 3, 5, 6, 7, 9, 10, 11, 12, 13, 14, 15, 24], "few": [5, 13], "ff": [3, 5], "field": [2, 3, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15], "file": 22, "filter": [2, 3, 5, 6, 7, 9, 10, 11, 12, 13, 14, 15, 17, 24], "final": 24, "find": [2, 3, 5, 6, 7, 9, 10, 11, 12, 13, 14, 15, 23], "firmwar": [2, 3, 5, 6, 7, 9, 10, 11, 12, 13, 14, 15, 17], "firmware_vers": [2, 3, 5, 6, 7, 9, 10, 11, 12, 13, 14, 15], "first": [3, 8, 24], "fit": [10, 11, 12, 13, 15, 22], "fix": 18, "flag": [3, 5, 10, 11, 12, 13, 15], "flexibl": 13, "float": [2, 3, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 24], "follow": [2, 3, 5, 6, 7, 9, 10, 11, 12, 13, 14, 15, 18, 22, 23, 24], "foreword": 20, "format": [2, 3, 5, 6, 7, 8], "format_ndef_tag": [3, 5], "found": [2, 3, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 24], "four": 13, "fr": [3, 5], "free": 22, "frequenc": [9, 11], "from": [2, 3, 5, 6, 7, 9, 10, 11, 12, 13, 14, 15, 21, 22, 23, 24], "frontend": 11, "function": [2, 3, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 17, 18, 20, 23, 24], "furnish": 22, "further": [9, 10, 11, 12, 13, 14, 15], "g": [2, 3, 5, 6, 9, 10, 11, 12, 13, 14, 15, 24], "gate": [10, 13, 15], "gen": [9, 10, 11, 12, 13, 14, 15], "gen2": [9, 10, 11, 12, 13, 14, 15, 18], "gener": [2, 6, 7], "get": [2, 3, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15], "get_afi": [3, 5, 8], "get_antenna": [6, 7, 8, 12, 13, 14], "get_antenna_multiplex": [6, 7, 12, 13, 14], "get_antenna_pow": [11, 12, 13], "get_atqa": 8, "get_channel_mask": [10, 11, 12, 13, 15], "get_custom_impinj_set": [10, 11, 12, 13, 15], "get_data": 8, "get_dsfid": 8, "get_epc": [2, 3, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 24], "get_error_messag": [8, 24], "get_first_seen": 8, "get_hid_layout": [3, 5], "get_hid_mod": [3, 5], "get_high_on_tag_output": [11, 13], "get_icr": 8, "get_id": [8, 24], "get_input": [6, 7, 13, 14, 24], "get_inventori": [2, 3, 5, 6, 7, 9, 10, 11, 12, 13, 14, 15, 23, 24], "get_inventory_multi": [6, 7, 12, 13, 14], "get_inventory_report": [10, 11, 12, 13, 15], "get_inventory_set": [3, 5, 10, 11, 12, 13, 15], "get_last_seen": 8, "get_logg": [2, 3, 5, 6, 7, 9, 10, 11, 12, 13, 14, 15], "get_mask": [10, 11, 12, 13, 15], "get_mifare_classic_access_bit": [3, 5], "get_mod": [3, 5], "get_multiplex": [11, 13], "get_nam": [2, 3, 5, 6, 7, 9, 10, 11, 12, 13, 14, 15], "get_output": [6, 7, 13, 14], "get_pow": [9, 10, 11, 12, 13, 14, 15], "get_profile_paramet": [9, 14], "get_q_valu": [10, 11, 12, 13, 15], "get_reader_info": [2, 3, 5, 6, 7, 9, 10, 11, 12, 13, 14, 15], "get_region": [10, 11, 12, 13, 15], "get_rf_mod": [10, 11, 12, 13, 15], "get_rssi": 8, "get_sak": 8, "get_seen_count": 8, "get_selected_sess": [10, 11, 12, 13, 15], "get_selected_transpond": [3, 5], "get_statu": [2, 3, 5, 6, 7, 9, 10, 11, 12, 13, 14, 15, 24], "get_tag_s": [10, 11, 12, 13, 15], "get_tag_size_set": [10, 11, 12, 13, 15], "get_temperatur": [3, 5, 10, 11, 12, 13, 15], "get_tid": [8, 24], "get_vicc_block_s": 8, "get_vicc_number_of_block": 8, "getter": 18, "git": 21, "github": 21, "give": 13, "given": [2, 3, 5, 6, 7, 10, 11, 12, 13, 15], "global": 21, "gmbh": 22, "go": [11, 13], "good": 3, "grant": 22, "great": [9, 11], "gru300": 18, "guid": [3, 5, 10, 11, 12, 13, 15], "ha": [2, 3, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 24], "half": [3, 10], "handi": [10, 15], "handl": [10, 11, 12, 13, 15, 18, 20], "handler": [2, 3, 5, 6, 7, 9, 10, 11, 12, 13, 14, 15], "happen": [10, 11, 12, 13, 15], "hard": [2, 3, 5, 6, 7, 9, 10, 11, 12, 13, 14, 15], "hardest": 13, "hardwar": [2, 3, 5, 6, 7, 9, 10, 11, 12, 13, 14, 15], "hardware_vers": [2, 3, 5, 6, 7, 9, 10, 11, 12, 13, 14, 15], "has_error": [8, 10, 11, 12, 13, 15, 24], "have": [2, 3, 5, 6, 7, 9, 10, 11, 12, 13, 14, 15, 23, 24], "heartbeat": [2, 3, 5, 6, 7, 9, 10, 11, 12, 13, 14, 15], "heat": 11, "henc": [10, 11, 12, 13, 15], "here": 24, "herebi": 22, "hex": [3, 5, 8, 9, 10, 11, 12, 13, 14, 15], "hexadecim": [9, 14], "hf": [0, 2, 18, 19, 20, 23], "hftag": [2, 3, 5, 6, 7, 8], "hftaginfo": [2, 6, 7, 8], "hid": [3, 5, 18], "hide": [10, 11, 12, 13, 15], "high": [6, 7, 10, 11, 12, 13, 14, 15], "higher": [9, 12, 13, 14, 21], "highlight": [6, 7], "holder": 22, "home": 2, "hostnam": [6, 7, 14, 24], "hous": [2, 3, 9, 10, 15], "how": [6, 7, 14, 20], "http": 21, "hundr": 13, "i": [2, 3, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 18, 19, 20, 21, 22, 23, 24], "ic": [8, 10, 11, 12, 13, 15], "id": [2, 3, 5, 6, 7, 8, 10, 11, 12, 13, 15, 24], "identif": [2, 3, 5, 6, 7, 9, 10, 11, 12, 13, 14, 15], "identifi": [2, 3, 5, 6, 7, 8, 10, 11, 12, 13, 15, 17], "ignor": [6, 7, 10, 11, 12, 13, 14, 15], "ignore_error": [6, 7, 10, 11, 12, 13, 14, 15], "imag": 12, "impinj": [10, 11, 12, 13, 15, 18], "implement": [1, 8, 24], "impli": 22, "import": [3, 5, 23, 24], "improv": 18, "includ": [2, 3, 5, 6, 7, 9, 14, 17, 21, 22], "incorrectli": [9, 14], "increment": [3, 5, 8], "increment_mifare_classic_valu": [3, 5], "index": [8, 10, 11, 12, 13, 15], "indispens": 9, "individu": [7, 8, 24], "industri": [6, 7], "info": [2, 6, 7], "inform": [2, 3, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 17, 18, 23, 24], "inherit": 8, "initi": [2, 3, 5, 6, 7, 9, 10, 11, 12, 13, 14, 15, 23], "initial_valu": [3, 5], "input": [1, 2, 6, 7, 9, 12, 13, 14], "input_chang": 24, "insecur": [9, 14], "instal": 20, "instanc": [2, 3, 5, 6, 7, 9, 10, 11, 12, 13, 14, 15, 24], "instead": [3, 5, 12, 13, 24], "int": [1, 2, 3, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 24], "integ": [10, 11, 12, 13, 15], "integr": [5, 10, 15], "interfac": [2, 3, 5, 6, 7], "intern": [10, 11, 12, 13, 15, 24], "interpret": [9, 10, 11, 12, 13, 14, 15], "interrupt": 17, "interv": [2, 3, 5, 6, 7, 9, 10, 11, 12, 13, 14, 15], "inv": [10, 11, 12, 13, 15, 24], "inventori": [2, 3, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 18, 20], "invok": 24, "ios15693": [3, 5], "ip": [1, 13], "irrevers": [3, 5], "irreversibli": [9, 14], "is_afi": 8, "is_connect": [2, 3, 5, 6, 7, 9, 10, 11, 12, 13, 14, 15], "is_dsfid": 8, "is_icr": 8, "is_ntag_config_lock": [3, 5], "is_run": [2, 3, 5, 6, 7, 9, 10, 11, 12, 13, 14, 15], "is_single_sub_carri": [2, 3, 5, 6, 7], "is_vicc": 8, "iso": [0, 3, 4, 5, 6, 7, 8, 18, 20, 24], "iso14443": [3, 5], "iso14a": [3, 5, 8], "iso14atag": 8, "iso15": [3, 5, 8], "iso15693": [3, 5], "iso15tag": 8, "isr": [9, 14], "issu": 21, "item": 23, "its": [2, 3, 5, 6, 7, 8, 10, 11, 12, 13, 14, 15, 21, 24], "itself": [9, 14], "jingl": [3, 10], "just": [10, 15], "kei": [2, 3, 5, 6, 7, 9, 10, 11, 12, 13, 14, 15, 24], "key_a": [3, 5], "key_b": [3, 5], "key_stor": [3, 5], "key_typ": [3, 5], "keya": [3, 5], "keyb": [3, 5], "keyboard": [3, 5, 18], "keystrok": [3, 5], "kill": [9, 10, 11, 12, 13, 14, 15], "kill_tag": [9, 10, 11, 12, 13, 14, 15], "kind": 22, "klp": [9, 14], "know": [10, 11, 12, 13, 15], "known": 21, "lambda": [6, 24], "laptop": [10, 15], "larger": [2, 3, 5, 6, 7, 9, 10, 11, 12, 13, 14, 15], "last": [2, 3, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 24], "later": [9, 14], "latest": [11, 21], "laundri": 6, "layout": [3, 5], "lck": [10, 11, 12, 13, 15], "lead": [10, 11, 12, 13, 15], "least": [2, 3, 5, 6, 7, 9, 10, 11, 12, 13, 14, 15], "leav": [2, 3, 5, 6, 7, 9, 10, 11, 12, 14, 15], "led": [11, 13], "legaci": [9, 17, 18, 23, 24], "legal": 20, "length": [3, 5, 9, 10, 11, 12, 13, 14, 15, 18, 24], "let": 24, "letter": [3, 10], "level": [2, 6, 7, 10, 11, 12, 13, 15, 24], "liabil": 22, "liabl": 22, "librari": [19, 20, 21, 23, 24], "licens": [18, 20], "lie": [6, 7, 14], "like": [3, 5, 10, 11, 12, 13, 15, 19], "limit": 22, "line": [3, 5, 9, 10, 11, 12, 13, 14, 15], "list": [2, 3, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 20, 24], "load": [3, 5, 9, 14], "load_access_password": [9, 14], "load_kill_password": [9, 14], "locat": [9, 14], "lock": [2, 3, 5, 6, 7, 9, 10, 11, 12, 13, 14, 15, 18], "lock_epc_memori": [10, 11, 12, 13, 15], "lock_epc_memory_perma": [10, 11, 12, 13, 15], "lock_ndef_tag": [3, 5], "lock_ntag_block_lock": [3, 5], "lock_ntag_config": [3, 5], "lock_ntag_pag": [3, 5], "lock_tag": [10, 11, 12, 13, 15], "lock_tag_access_password": [9, 14], "lock_tag_afi": [2, 3, 5, 6, 7], "lock_tag_data": [9, 14], "lock_tag_dsfid": [2, 3, 5, 6, 7], "lock_tag_epc": [9, 14], "lock_tag_kill_password": [9, 14], "lock_tag_memori": [9, 14], "lock_tag_perma": [10, 11, 12, 13, 15], "lock_user_memori": [10, 11, 12, 13, 15], "lock_user_memory_perma": [10, 11, 12, 13, 15], "log": [2, 3, 5, 6, 7, 9, 10, 11, 12, 13, 14, 15], "logger": [2, 3, 5, 6, 7, 9, 10, 11, 12, 13, 14, 15], "long": [2, 6, 7, 9, 14], "look": [3, 9, 20, 24], "loop": [3, 5, 6], "lot": 24, "low": [2, 9, 10, 11, 12, 13, 14, 15], "lowercas": [3, 10], "lr": 13, "lsb": [10, 11, 12, 13, 15], "m": [11, 14, 21], "m775": [10, 11, 12, 13, 15], "m7xx": [10, 11, 12, 13, 15], "m8xx": [10, 11, 12, 13, 15], "machineri": [6, 7], "mai": [9, 14, 17], "main": [10, 15, 23, 24], "make": [3, 5, 9, 10, 11, 12, 13, 15, 17], "manag": 2, "mani": [3, 5, 6, 7, 14, 24], "manual": [10, 11, 12, 13, 15], "manufactur": [10, 11, 12, 13, 15], "map": 17, "mask": [9, 10, 11, 12, 13, 14, 15, 18, 24], "match": [2, 6, 7, 9, 10, 11, 12, 13, 14, 15, 23], "max_tag": [10, 11, 12, 13, 15], "maximum": [2, 3, 5, 6, 7, 9, 10, 11, 12, 13, 14, 15], "mean": [2, 6, 7, 13, 14], "meant": 2, "measur": [3, 5, 10, 11, 12, 13, 15], "medium": 14, "mem": [3, 5], "membank": [10, 11, 12, 13, 15], "member": 8, "memori": [2, 3, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 18, 24], "merchant": 22, "merg": 22, "messag": [2, 3, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 24], "method": [3, 5, 8, 10, 11, 12, 13, 15, 18, 20, 24], "metratec": [2, 3, 5, 6, 7, 9, 10, 11, 12, 13, 14, 15, 17, 18, 19, 21, 22], "metratec_rfid": [1, 2, 3, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 17, 21, 23, 24], "mhz": [3, 5, 9, 10, 15], "mifar": [3, 5], "might": [10, 11, 12, 13, 15], "millisecond": [3, 5, 11, 13], "milliwatt": [2, 6, 7], "min_tag": [10, 11, 12, 13, 15], "minim": [20, 24], "minimum": [2, 6, 7, 10, 11, 12, 13, 15], "mirror": [3, 5], "mirror_byt": [3, 5], "mirror_mod": [3, 5], "mirror_pag": [3, 5], "miss": [10, 11, 12, 13, 15], "mit": [18, 22], "mode": [2, 3, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 18, 24], "mode_id": [10, 11, 12, 13, 15], "model": [10, 15], "modern": [11, 13], "modifi": [10, 11, 12, 13, 15, 22, 24], "modul": [0, 2, 3, 4, 6, 7, 16, 18, 19, 20], "modulation_depth": [2, 3, 5, 6, 7], "monza6": [10, 11, 12, 13, 15], "more": [2, 6, 7, 9, 10, 11, 12, 13, 14, 15, 24], "most": [8, 10, 11, 12, 13, 15, 24], "multi": [3, 6, 7, 12, 13, 14], "multipl": [2, 3, 5, 6, 7, 9, 10, 11, 12, 13, 14, 15, 24], "multiplex": [6, 7, 11, 12, 13, 14], "multiplexer_s": [11, 13], "must": [3, 5, 6, 7, 9, 10, 11, 12, 13, 14, 15, 24], "mux": [12, 13], "mw": [2, 6, 7, 24], "my_callback": [2, 3, 5, 6, 7, 9, 10, 11, 12, 13, 14, 15], "n": 1, "name": [2, 3, 5, 6, 7, 9, 10, 11, 12, 13, 14, 15, 17, 24], "nativ": [3, 5], "ndef": [3, 5, 18], "ndefstat": [3, 5], "necessari": [10, 15], "need": [3, 5, 6, 7], "negat": [10, 11, 12, 13, 15], "never": [9, 11, 14], "new": [1, 2, 3, 5, 6, 7, 9, 10, 11, 12, 13, 14, 15, 18, 23, 24], "new_epc": [9, 10, 11, 12, 13, 14, 15, 24], "new_inventori": 24, "new_password": [10, 11, 12, 13, 15], "newer": 24, "next": [9, 14], "nfc": [0, 4, 8, 18, 20, 23, 24], "nfcmode": [3, 5, 18], "nfcreaderat": 18, "non": [3, 5, 9, 10, 11, 12, 13, 14, 15], "none": [1, 2, 3, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15], "noninfring": 22, "normal": [10, 15], "note": [3, 5, 9, 10, 14, 20], "notebook": [2, 9], "noth": [10, 11, 12, 13, 15], "notic": 22, "notifi": 24, "now": 18, "nsl": [10, 11, 12, 13, 15], "ntag": [3, 5], "ntagmirrormod": [3, 5], "number": [2, 3, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15], "number_of_block": [3, 5, 24], "nxp": [3, 5], "object": [2, 3, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 17, 23, 24], "obtain": 22, "occur": [2, 3, 5, 6, 7, 9, 10, 11, 12, 13, 14, 15, 24], "octav": [3, 10], "oem": [0, 4, 16, 19, 20], "offer": 24, "offic": 2, "offset": [3, 5], "ok": [3, 10], "old": [2, 3, 5, 6, 7, 9, 10, 11, 12, 13, 14, 15], "onc": [2, 3, 5, 6, 7, 9, 10, 11, 12, 13, 14, 15, 24], "one": [2, 3, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 23, 24], "onli": [2, 3, 5, 6, 7, 9, 10, 11, 12, 13, 14, 15, 24], "only_new_tag": [2, 3, 5, 6, 7, 9, 10, 11, 12, 13, 14, 15, 24], "oof": [3, 5], "open": 14, "oper": [3, 5, 8, 9, 10, 11, 12, 13, 14, 15, 24], "option": [1, 2, 3, 5, 6, 7, 9, 10, 11, 12, 13, 14, 15, 17, 24], "option_flag": [2, 3, 5, 6, 7], "order": 24, "org2": 23, "other": [2, 3, 5, 6, 7, 10, 11, 12, 13, 15, 17, 20, 22, 24], "otherwis": [2, 3, 5, 6, 7, 10, 11, 12, 13, 15, 22], "our": 6, "out": [3, 5, 21, 22], "output": [2, 3, 5, 6, 7, 9, 11, 13, 14, 24], "output_pin": [11, 13], "over": [5, 9, 14], "pa": [3, 5, 10, 11, 12, 13, 15], "packag": [11, 21], "page": [3, 5, 20], "page_address": [3, 5], "page_numb": [3, 5], "paramet": [1, 2, 3, 5, 6, 7, 9, 10, 11, 12, 13, 14, 15, 17, 24], "pariti": 1, "parity_non": 1, "part": [0, 4, 16, 20, 23, 24], "partial": [9, 14], "particular": 22, "pass": [6, 7, 12, 13, 14], "password": [3, 5, 9, 10, 11, 12, 13, 14, 15], "password_acknowledg": [3, 5], "password_en": [3, 5], "paus": [3, 10], "payload": [10, 11, 12, 13, 15], "pc": [2, 9, 10, 11, 12, 13, 14, 15, 17, 23], "pend": [3, 5], "per": 13, "perform": [2, 3, 5, 6, 7, 9, 10, 11, 12, 13, 14, 15, 24], "permament": [10, 11, 12, 13, 15], "perman": [3, 5, 9, 10, 11, 12, 13, 14, 15], "permiss": 22, "permit": 22, "person": 22, "phase": [10, 11, 12, 13, 15, 18], "physic": [11, 13, 24], "pin": [2, 6, 7, 9, 11, 12, 13, 14, 24], "pip": 21, "plai": [3, 10], "play_feedback": [3, 10], "play_not": [3, 10], "pleas": [9, 10, 11, 12, 13, 14, 15], "plrm": [0, 16, 20, 23], "point": 24, "popul": 24, "port": [1, 2, 3, 5, 6, 7, 9, 10, 11, 12, 13, 14, 15, 17, 23, 24], "port_r": [2, 3, 5, 6, 7, 9, 10, 11, 12, 13, 14, 15, 17], "portion": 22, "posit": [2, 6, 7], "possibl": [9, 14], "potenti": [2, 3, 5, 6, 7, 9, 10, 11, 12, 13, 14, 15, 17], "power": [2, 6, 7, 9, 10, 11, 12, 13, 14, 15, 24], "preconfigur": [3, 10], "prefer": 21, "present": [3, 8], "previous": [2, 3, 5], "print": [2, 3, 5, 6, 7, 9, 10, 11, 12, 13, 14, 15, 17, 23, 24], "print_inventori": 23, "print_tag": 24, "prior": [3, 5], "process": 17, "product": [3, 5, 6, 7, 10, 11, 12, 13, 15, 19], "profil": [2, 9, 14], "project": 18, "proprietari": [10, 11, 12, 13, 15], "proprieti": 11, "proprietori": [10, 11, 12, 13, 15], "protect": [3, 5, 10, 11, 12, 13, 15, 18], "protocol": [2, 3, 5, 6, 7, 9, 10, 11, 12, 13, 14, 15], "provid": [20, 22, 24], "public": 18, "publish": 22, "pulsar": 13, "pulsarlr": [0, 16, 18, 19, 20, 23, 24], "pulsarmx": [0, 16, 18, 19, 20, 23], "pure": [2, 3, 5, 6, 7, 9, 10, 11, 12, 13, 14, 15], "purpos": 22, "put": [10, 11, 12, 13, 15], "pwr": [3, 5, 10, 11, 12, 13, 15], "python": [19, 20, 21], "python3": 21, "q": [3, 5, 10, 11, 12, 13, 15], "q_max": [10, 11, 12, 13, 15], "q_min": [10, 11, 12, 13, 15], "q_start": [10, 11, 12, 13, 15], "qr": [0, 4, 8, 20, 24], "qr15": [2, 6, 7], "qrg2": [0, 16, 18, 20], "qrg2fcc": [15, 23], "qrnfc": [5, 23], "quasarlr": [0, 4, 8, 18, 19, 20, 23, 24], "quasarmx": [0, 2, 4, 6, 8, 18, 19, 20, 23, 24], "queri": [17, 18, 24], "quickstart": 20, "quiet": [3, 5], "r1": 21, "rais": [2, 3, 5, 6, 7, 9, 10, 11, 12, 13, 14, 15, 24], "random": [10, 11, 12, 13, 15], "rang": [2, 3, 5, 6, 9, 10, 11, 12, 13, 14, 15, 18, 24], "rate": 7, "raw": [3, 5], "re": [2, 3, 5, 6, 7, 9, 10, 11, 12, 13, 14, 15, 18], "reach": 13, "read": [2, 3, 5, 6, 7, 9, 10, 11, 12, 13, 14, 15, 18, 20], "read_data": [3, 5, 24], "read_data_with_option_flag": [3, 5], "read_mifare_classic_value_block": [3, 5], "read_ndef_record": [3, 5], "read_ntag_access_config": [3, 5], "read_ntag_count": [3, 5], "read_ntag_counter_config": [3, 5], "read_ntag_mirror_config": [3, 5], "read_ntag_modulation_config": [3, 5], "read_protect": [3, 5], "read_tag_access_password": [9, 14], "read_tag_data": [2, 6, 7, 9, 10, 11, 12, 13, 14, 15, 18, 24], "read_tag_inform": [2, 6, 7], "read_tag_kill_password": [9, 14], "read_tag_memori": [9, 14], "read_tag_tid": [9, 10, 11, 12, 13, 14, 15, 24], "read_tag_usr": [10, 11, 12, 13, 15], "readabl": [9, 14], "reader": [0, 5, 8, 11, 15, 18, 19, 20], "reader01": [23, 24], "reader_status_chang": 24, "reboot": [3, 5], "recommend": [21, 24], "record": [3, 5], "reduc": [10, 11, 12, 13, 15], "refer": [2, 3, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 24], "region": [9, 10, 11, 12, 13, 14, 15], "regist": 24, "regular": [2, 3, 5, 6, 7, 9, 10, 11, 12, 13, 14, 15, 17], "regularli": [2, 3, 5, 6, 7, 9, 10, 11, 12, 13, 14, 15], "relat": 8, "releas": [20, 21], "relev": 20, "reliabl": [6, 7], "remain": [3, 5], "repeat": [3, 10], "repetit": [3, 10], "report": [6, 7, 10, 11, 12, 13, 14, 15, 24], "repositori": 21, "repow": [10, 11, 12, 13, 15], "repres": [6, 7, 10, 11, 12, 13, 14, 15], "request": [2, 3, 5, 6, 7, 18], "requir": [3, 5, 10, 11, 12, 13, 15, 20], "resembl": [10, 11, 12, 13, 15], "reserv": 18, "reset": [2, 6, 7, 9, 10, 11, 12, 13, 14, 15], "reset_channel_mask": [10, 11, 12, 13, 15], "reset_mask": [9, 10, 11, 12, 13, 14, 15], "respond": [3, 5, 10, 11, 12, 13, 15, 24], "respons": [2, 3, 5, 6, 7, 9, 10, 11, 12, 13, 14, 15, 24], "restor": [3, 5], "restore_mifare_classic_valu": [3, 5], "restrict": 22, "result": [2, 3, 5, 6, 7, 9, 10, 11, 12, 13, 14, 15, 23, 24], "return": [2, 3, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 17, 18, 23, 24], "revis": [2, 6, 7], "rf": [2, 3, 5, 6, 7, 9, 10, 11, 12, 13, 14, 15, 24], "rfid": [0, 2, 3, 4, 5, 9, 10, 16, 17, 18, 19], "rfidreaderexcept": [2, 3, 5, 6, 7, 9, 10, 11, 12, 13, 14, 15, 23, 24], "rfidtransponderexcept": [3, 5], "right": [6, 9, 13, 14, 22], "rssi": [8, 10, 11, 12, 13, 15], "run": [2, 3, 5, 6, 7, 9, 10, 11, 12, 13, 14, 15, 23, 24], "sak": 8, "same": [3, 5, 10, 11, 14, 15], "save_access_password": [9, 14], "save_kill_password": [9, 14], "scan": [2, 3, 5, 6, 7, 9, 10, 11, 12, 13, 14, 15, 24], "script": 21, "sdk": [2, 3, 5, 6, 7, 9, 10, 11, 12, 13, 14, 15, 19, 23], "search": [2, 6, 7, 9, 14], "sec": 7, "second": [2, 3, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 24], "section": [23, 24], "secur": [3, 5, 9, 14], "see": [3, 5, 10, 11, 12, 13, 15, 21, 24], "seen": 8, "seen_count": 8, "select": [3, 5, 10, 11, 12, 13, 15, 18], "select_transpond": [3, 5], "sell": 22, "send": [2, 3, 5, 6, 7, 9, 10, 11, 12, 13, 14, 15, 17], "send_custom_command": [2, 3, 5, 6, 7, 9, 10, 11, 12, 13, 14, 15, 18], "send_read_request_iso15693": [3, 5], "send_request_iso14a": [3, 5], "send_select": [10, 11, 12, 13, 15], "send_write_request_iso15693": [3, 5], "sensor": [3, 5, 10, 11, 12, 13, 14, 15], "sent": [3, 5, 9, 14], "separ": [10, 15], "sequenc": [3, 10, 12, 13], "sequence_nr": [3, 10], "seri": [3, 5, 10, 11, 12, 13, 15], "serial": [0, 2, 3, 5, 6, 7, 9, 10, 11, 12, 13, 14, 15, 17, 20, 23], "serial0": 24, "serial_connect": 1, "serial_numb": [2, 3, 5, 6, 7, 9, 10, 11, 12, 13, 14, 15], "serial_port": [2, 3, 5, 6, 7, 9, 10, 11, 12, 14, 15, 23], "serialconnect": 1, "server": 1, "servic": [10, 11, 12, 13, 15], "session": [10, 11, 12, 13, 15], "set": [2, 3, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 20], "set_access_password": [9, 14], "set_afi": [3, 5], "set_antenna": [6, 7, 12, 13, 14, 24], "set_antenna_multiplex": [6, 7, 10, 11, 12, 13, 14, 15], "set_antenna_output": [6, 7, 14], "set_antenna_pow": [11, 12, 13], "set_authenticate_ntag": [3, 5], "set_cb_input_chang": [2, 6, 7, 9, 12, 13, 14, 24], "set_cb_inventori": [2, 3, 5, 6, 7, 9, 10, 11, 12, 13, 14, 15, 24], "set_cb_inventory_report": [10, 11, 12, 13, 15], "set_cb_request": [2, 6, 7], "set_cb_statu": [2, 3, 5, 6, 7, 9, 10, 11, 12, 13, 14, 15, 24], "set_channel_mask": [10, 11, 12, 13, 15], "set_custom_impinj_set": [10, 11, 12, 13, 15], "set_custom_set": [10, 11, 12, 13, 15], "set_epc_mask": [9, 14], "set_heartbeat": [2, 3, 5, 6, 7, 9, 10, 11, 12, 13, 14, 15], "set_hid_layout": [3, 5], "set_hid_mod": [3, 5], "set_high_on_tag_output": [11, 13], "set_hit_mod": [3, 5], "set_input_debounce_tim": [9, 14], "set_inventory_set": [3, 5, 10, 11, 12, 13, 15, 24], "set_kill_password": [9, 10, 11, 12, 13, 14, 15], "set_lock_password": [10, 11, 12, 13, 15], "set_mask": [9, 10, 11, 12, 13, 14, 15, 24], "set_mifare_classic_kei": [3, 5], "set_mod": [2, 3, 5, 6, 7], "set_multiplex": [11, 13], "set_output": [2, 6, 7, 9, 13, 14], "set_pow": [2, 6, 7, 9, 10, 11, 12, 13, 14, 15, 24], "set_profile_paramet": [9, 14], "set_q_valu": [10, 11, 12, 13, 15], "set_region": [9, 10, 11, 12, 13, 14, 15], "set_rf_mod": [10, 11, 12, 13, 15], "set_selected_sess": [10, 11, 12, 13, 15], "set_tag_s": [9, 10, 11, 12, 13, 14, 15], "sett": 18, "setter": 18, "setup": 9, "setuptool": 21, "sever": 9, "shall": 22, "sheet": [3, 5], "short": [9, 10, 11, 12, 13, 14, 15, 18], "short_tid": [10, 11, 12, 13, 15], "should": [3, 10, 11, 12, 13, 15, 24], "show": 23, "shown": 24, "shut": 24, "shutdown": 24, "similar": 24, "simultan": [10, 15], "singl": [2, 3, 5, 6, 7, 9, 10, 11, 12, 13, 14, 15, 23, 24], "single_slot": [2, 3, 5, 6, 7, 9, 14], "size": [1, 2, 6, 7, 8, 10, 11, 12, 13, 15], "sl": [10, 11, 12, 13, 15], "sleep": 24, "slightli": 24, "slim": [3, 10, 15], "slot": [3, 5, 9, 14], "slow": [10, 11, 12, 13, 15], "small": [9, 11], "snippet": 23, "so": [3, 5, 9, 10, 11, 12, 13, 14, 15, 22], "socket": [0, 20], "socket_connect": 1, "socketconnect": 1, "softwar": [2, 3, 5, 6, 7, 9, 10, 11, 12, 13, 14, 15, 22], "some": [8, 24], "sound": [3, 10], "sourc": 21, "special": [6, 7, 18], "specif": [8, 10, 11, 12, 13, 15, 20, 21], "specifi": [2, 3, 5, 6, 7, 9, 10, 11, 12, 13, 14, 15, 24], "speed": [7, 10, 11, 12, 13, 15], "sport": 2, "ssl": [9, 14], "stai": [3, 5, 10, 11, 12, 13, 15], "start": [2, 3, 5, 6, 7, 9, 10, 11, 12, 13, 14, 15, 24], "start_block": 24, "start_inventori": [2, 3, 5, 6, 7, 9, 10, 11, 12, 13, 14, 15, 24], "start_inventory_multi": [6, 7, 12, 13, 14], "start_inventory_report": [10, 11, 12, 13, 15], "startup": [3, 10], "state": [2, 3, 5, 6, 7, 9, 10, 11, 12, 13, 14, 15, 24], "station": 14, "statu": [2, 3, 5, 6, 7, 9, 10, 11, 12, 13, 14, 15], "step": [2, 3, 6, 7, 10], "step_length": [3, 10], "still": [2, 3, 5, 6, 7, 9, 10, 11, 12, 13, 14, 15], "stop": [1, 2, 3, 5, 6, 7, 9, 10, 11, 12, 13, 14, 15, 24], "stop_bit": 1, "stop_inventori": [2, 3, 5, 6, 7, 9, 10, 11, 12, 13, 14, 15, 24], "stop_inventory_multi": [6, 7, 12, 13, 14], "stop_inventory_report": [10, 11, 12, 13, 15], "stopbits_on": 1, "storag": [2, 3, 5, 6, 7, 8, 9, 14], "store": [3, 5, 9, 14, 18, 24], "store_mifare_classic_authenticate_kei": [3, 5], "stored_kei": [3, 5], "str": [1, 2, 3, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 17, 24], "string": [2, 3, 5, 6, 7, 9, 10, 11, 12, 13, 14, 15], "strong": [3, 5], "strong_modulation_en": [3, 5], "studio": 2, "sub": [2, 3, 5, 6, 7], "subfold": 21, "subject": 22, "sublicens": 22, "subscrib": 24, "substanti": 22, "success": [2, 3, 5, 6, 7, 9, 10, 11, 12, 13, 14, 15, 24], "successfulli": [10, 11, 12, 13, 15], "suppli": [10, 15], "support": [2, 3, 5, 8, 10, 11, 12, 13, 15, 17, 18, 19, 21, 24], "sure": [10, 11, 12, 13, 15, 17], "switch": [6, 7, 10, 11, 12, 13, 14, 15, 24], "switch_delai": [6, 7, 14], "system": [2, 17, 21, 23], "t": [9, 14], "tab": [3, 5], "tag": [2, 3, 5, 6, 7, 9, 10, 11, 12, 13, 14, 15, 18, 20, 21], "tag_focu": [10, 11, 12, 13, 15], "tag_id": [2, 6, 7, 24], "tag_info": 8, "tag_list": 24, "tag_siz": [10, 11, 12, 13, 15], "tag_typ": 8, "tagfocu": 11, "tagid": [10, 11, 12, 13, 15], "tags_siz": [9, 14], "take": 24, "talk": [10, 11, 12, 13, 15], "target": [10, 11, 12, 13, 15], "task": 24, "tcp": [1, 6, 7, 13, 14], "technic": [2, 3, 5, 6, 7, 9, 10, 11, 12, 13, 14, 15], "temperatur": [3, 5, 10, 11, 12, 13, 15, 18], "term": 18, "test": [9, 10, 15], "than": [2, 3, 5, 6, 7, 9, 10, 11, 12, 13, 14, 15, 24], "thank": [10, 11, 15], "thei": 2, "them": [7, 12, 13], "therefor": [17, 24], "thi": [0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 19, 20, 21, 22, 23, 24], "those": [10, 11, 12, 13, 15], "three": [10, 11, 12, 13, 15], "thu": [10, 15], "tic": [9, 14], "tid": [3, 5, 8, 9, 10, 11, 12, 13, 14, 15, 24], "time": [2, 3, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 24], "timeout": [2, 3, 5, 6, 7, 9, 10, 11, 12, 13, 14, 15], "timestamp": [2, 3, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 24], "todo": 12, "togeth": [10, 11, 12, 13, 15], "tone": [3, 10], "too": [10, 11, 12, 13, 15], "tool": [9, 10, 13, 15, 21], "topic": [9, 14], "tort": 22, "track": 14, "transact": [3, 5, 8], "transfer": [3, 5], "transfer_mifare_classic_valu": [3, 5], "transmiss": [2, 6, 7], "transmit": [9, 14], "transpond": [0, 2, 3, 5, 6, 7, 9, 10, 11, 12, 13, 14, 15, 18, 20], "treat": [3, 5], "trigger": [2, 3, 5, 6, 7, 9, 10, 11, 12, 13, 14, 15, 24], "true": [2, 3, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 24], "try": [13, 17, 23, 24], "ttyusb0": 23, "tunnel": 13, "tupl": [3, 5], "tutori": 20, "two": [8, 10, 11, 12, 13, 15], "type": [2, 3, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 17, 18], "typic": [2, 9, 14], "u": 21, "uhf": [0, 3, 5, 18, 19, 20, 23], "uhftag": [8, 9, 10, 11, 12, 13, 14, 15, 24], "uid": [3, 5], "ultralight": [3, 5], "um15": [2, 6, 7], "un": 18, "under": 18, "underli": [3, 5, 10, 11, 12, 13, 15], "unexpect": [10, 11, 12, 13, 15], "uniqu": [10, 11, 12, 13, 15], "unix": 8, "unknown": 8, "unlock": [10, 11, 12, 13, 15], "unlock_epc_memori": [10, 11, 12, 13, 15], "unlock_tag": [10, 11, 12, 13, 15], "unlock_user_memori": [10, 11, 12, 13, 15], "unnecessarili": [10, 11, 12, 13, 15], "unsecur": [9, 14], "until": [2, 3, 5, 6, 7, 9, 10, 11, 12, 13, 14, 15], "untrac": [10, 11, 12, 13, 15], "up": [3, 6, 7, 10, 11, 12, 13, 14, 15], "updat": [8, 18], "upgrad": 21, "us": [1, 2, 3, 5, 6, 7, 9, 10, 11, 12, 13, 14, 15, 19, 20, 21, 22, 24], "usa": [10, 15], "usabl": 18, "usag": [3, 5], "usb": [2, 3, 5, 6, 7, 9, 10, 11, 12, 13, 14, 15, 17, 18, 23], "use_strong_modul": [3, 5], "user": [2, 8, 10, 11, 12, 13, 15], "usr": [2, 6, 7, 9, 10, 11, 12, 13, 14, 15], "usual": [8, 24], "util": [0, 20, 23], "v2": [0, 15, 16, 20], "valu": [2, 3, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 18, 24], "vari": [2, 24], "variou": [18, 24], "venv": 21, "verbos": 17, "veri": [3, 5, 9, 14], "version": [18, 21], "via": [6, 7, 9, 14, 17, 23, 24], "vicc": 8, "virtual": 20, "volatil": [9, 14], "w": 6, "wa": [2, 3, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15], "wai": [10, 11, 12, 13, 15, 24], "wait": [2, 3, 5, 6, 7, 9, 10, 11, 12, 13, 14, 15, 24], "wait_for_tag": [2, 3, 5, 6, 7, 9, 10, 11, 12, 13, 14, 15], "want": 24, "warn": [2, 3, 5, 6, 7, 9, 10, 11, 12, 13, 14, 15, 24], "warranti": 22, "well": [3, 5, 9, 10, 11, 12, 13, 14, 15, 19], "were": 14, "what": [10, 11, 12, 13, 15], "when": [2, 3, 5, 6, 7, 9, 10, 11, 12, 13, 14, 15, 24], "whenev": [2, 3, 5, 6, 7, 9, 10, 11, 12, 13, 14, 15, 24], "where": [2, 3, 5, 6, 7, 9, 10, 11, 12, 13, 14, 15], "whether": [2, 3, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 17, 22], "which": [2, 3, 5, 6, 7, 9, 10, 11, 12, 13, 14, 15, 24], "while": 24, "whom": 22, "whose": [9, 10, 11, 12, 13, 14, 15], "wide": 11, "with_rssi": [10, 11, 12, 13, 15], "with_tid": [10, 11, 12, 13, 15], "within": [2, 3, 5, 6, 7, 9, 10, 11, 12, 13, 14, 15, 19], "without": [7, 10, 11, 12, 13, 15, 21, 22], "word": [9, 14], "work": [10, 15, 18], "worldwid": 11, "wrap": 24, "write": [2, 3, 5, 6, 7, 9, 10, 11, 12, 13, 14, 15, 18, 20], "write_data": [3, 5], "write_mifare_classic_value_block": [3, 5], "write_ndef_record": [3, 5], "write_ntag_access_config": [3, 5], "write_ntag_counter_config": [3, 5], "write_ntag_mirror_config": [3, 5], "write_ntag_modulation_config": [3, 5], "write_tag_access_password": [9, 14], "write_tag_afi": [2, 3, 5, 6, 7], "write_tag_data": [2, 6, 7, 9, 10, 11, 12, 13, 14, 15], "write_tag_dsfid": [2, 3, 5, 6, 7], "write_tag_epc": [9, 10, 11, 12, 13, 14, 15, 24], "write_tag_kill_password": [9, 14], "write_tag_memori": [9, 14], "write_tag_usr": [10, 11, 12, 13, 15], "writeabl": [9, 14], "writer": [2, 3, 6, 7, 9, 10, 15], "written": [2, 3, 6, 7, 9, 10, 11, 12, 13, 15, 19, 20], "x": [3, 10, 12, 13], "you": [9, 10, 11, 12, 13, 14, 15, 19, 20, 23, 24], "your": [9, 10, 11, 15, 17, 21, 23], "yourself": [9, 14, 24], "zero": [3, 5, 10, 11, 12, 13, 15]}, "titles": ["API", "Connection", "DeskID ISO Desktop Reader", "DeskID NFC Desktop Reader", "HF Reader", "QR-NFC Embedded OEM Module", "QuasarLR HF RFID Reader", "QuasarMX HF RFID Reader", "Transponder", "DeskID UHF Desktop Reader", "DeskID UHF v2 Desktop Reader", "DwarfG2 v2 UHF RFID OEM Module", "PLRM UHF RFID Reader", "PulsarLR UHF RFID Reader", "PulsarMX UHF RFID Reader", "QRG2 UHF RFID Embedded Module", "UHF Reader", "Utilities", "Release Notes", "Foreword", "Welcome to the Metratec RFID SDK", "Installation", "License", "Quickstart", "Tutorials"], "titleterms": {"0": 18, "1": 18, "2": 18, "3": 18, "4": 18, "A": 8, "action": [10, 11, 12, 13, 15], "addit": 20, "api": [0, 20], "automat": [17, 23], "class": 24, "complet": 24, "connect": 1, "continu": 24, "creat": 21, "data": 24, "deskid": [2, 3, 9, 10], "desktop": [2, 3, 9, 10], "detect": [17, 23], "dwarfg2": 11, "embed": [5, 15], "environ": 21, "error": 24, "etsi": [10, 15], "event": 24, "exampl": [23, 24], "fcc": [10, 15], "foreword": 19, "guid": 20, "handl": 24, "hf": [4, 6, 7, 8, 24], "index": 20, "info": 8, "inform": 20, "input": 24, "instal": 21, "inventori": [23, 24], "iso": 2, "iso14443": 8, "iso15693": 8, "licens": 22, "linux": 21, "mac": 21, "metratec": 20, "mini": 11, "minim": 23, "modul": [5, 11, 15], "nfc": [3, 5], "note": 18, "oem": [5, 11], "plrm": 12, "pulsarlr": 13, "pulsarmx": 14, "qr": 5, "qrg2": 15, "quasarlr": 6, "quasarmx": 7, "quickstart": 23, "read": 24, "reader": [2, 3, 4, 6, 7, 9, 10, 12, 13, 14, 16, 17, 23, 24], "refer": 20, "releas": 18, "requir": 21, "rfid": [6, 7, 11, 12, 13, 14, 15, 20, 21], "sdk": [20, 21], "serial": 1, "set": 24, "socket": 1, "standard": 11, "statu": 24, "tabl": [10, 11, 12, 13, 15], "tag": [8, 24], "transpond": [8, 24], "tutori": 24, "uhf": [8, 9, 10, 11, 12, 13, 14, 15, 16, 24], "us": 23, "user": 20, "util": 17, "v2": [10, 11], "version": [10, 11, 15], "virtual": 21, "welcom": 20, "window": 21, "write": 24, "xr": 11}})